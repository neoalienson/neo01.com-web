<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Decoding Digital Anomalies</title>
  
  <subtitle>Sometimes the feature is the bug in the digital rabbit hole, and vice versa</subtitle>
  <link href="https://neo01.com/atom.xml" rel="self"/>
  
  <link href="https://neo01.com/"/>
  <updated>2025-10-30T07:02:36.856Z</updated>
  <id>https://neo01.com/</id>
  
  <author>
    <name>Neo Alienson</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexoで多言語対応を実現：完全ガイド</title>
    <link href="https://neo01.com/ja/2025/10/Enabling-i18n-in-Hexo/"/>
    <id>https://neo01.com/ja/2025/10/Enabling-i18n-in-Hexo/</id>
    <published>2025-10-29T16:00:00.000Z</published>
    <updated>2025-10-30T07:02:36.856Z</updated>
    
    <content type="html"><![CDATA[<p>多言語ブログの構築は、単なるコンテンツの翻訳ではありません。パフォーマンスとSEOを維持しながら、言語を超えたシームレスな体験を創造することです。本ガイドでは、このウェブサイトで使用されているURL構造からキャッシュ戦略まで、完全なi18n実装を解説します。</p><h2 id="Hexoとは？">Hexoとは？</h2><p><a href="https://hexo.io/">Hexo</a>は、Node.js上に構築された高速でシンプル、かつ強力な静的サイトジェネレーターです。Markdownファイルを完全なウェブサイトに変換し、以下の特徴を備えています：</p><ul><li><strong>超高速生成</strong>：数秒で数百のファイルを処理</li><li><strong>Markdownサポート</strong>：フォーマット付きのプレーンテキストでコンテンツを記述</li><li><strong>拡張可能なプラグイン</strong>：追加機能のための豊富なエコシステム</li><li><strong>テーマシステム</strong>：カスタマイズ可能なテンプレートとレイアウト</li><li><strong>Git対応</strong>：サイト全体をバージョン管理</li></ul><p><strong>最適な用途</strong>：</p><ul><li>コード例を含む技術ブログ</li><li>ドキュメントサイト</li><li>個人ポートフォリオ</li><li>多言語コンテンツ（適切な設定が必要）</li></ul><p><strong>インストール</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-clihexo init my-blog<span class="token builtin class-name">cd</span> my-blog<span class="token function">npm</span> <span class="token function">install</span>hexo server</code></pre><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📌 バージョン情報</p><div class="admonition-content"><p>本ガイドは <strong>Hexo 8.1.0以上</strong> を基準としています。パーマリンクの動作とフィルターフックは、以前のバージョンでは異なる場合があります。</p></div></div><h2 id="Hexo-i18nの課題">Hexo i18nの課題</h2><h3 id="Hexoが提供する機能">Hexoが提供する機能</h3><p>Hexoには<strong>テーマ翻訳のみ</strong>の基本的なi18nサポートがあります：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># URLパスから言語を検出</span></code></pre><p><strong>言語ファイル</strong>（テーマ翻訳）：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># themes/your-theme/languages/en.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> Home  <span class="token key atrule">archives</span><span class="token punctuation">:</span> Archives  <span class="token comment"># themes/your-theme/languages/zh-TW.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> 首頁  <span class="token key atrule">archives</span><span class="token punctuation">:</span> 歸檔</code></pre><p><strong>テンプレート</strong>でヘルパーを使用：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'menu.home'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>  <span class="token comment"><!-- 出力：Home または 首頁 --></span></code></pre><p><strong>パス検出</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># 最初のURLセグメントから言語を検出</span></code></pre><p>例：</p><ul><li><code>/index.html</code> → <code>en</code>（デフォルト）</li><li><code>/zh-tw/index.html</code> → <code>zh-tw</code></li><li><code>/archives/index.html</code> → <code>en</code>（言語として検出されない）</li></ul><h3 id="問題点">問題点</h3><p>Hexoのネイティブi18nは<strong>UIテキストのみを翻訳</strong>し、コンテンツは翻訳しません：</p><p><strong>❌ コンテンツフィルタリングなし</strong>：</p><ul><li>インデックスページは言語に関係なくすべての投稿を表示</li><li>アーカイブは英語と中国語の投稿を混在表示</li><li>カテゴリー/タグは言語でフィルタリングしない</li></ul><p><strong>❌ 言語固有のジェネレーターなし</strong>：</p><ul><li><code>/archives/</code> はすべての言語の投稿を表示</li><li><code>/categories/Development/</code> はすべての言語バージョンを混在表示</li><li><code>/zh-TW/archives/</code> を個別に生成する方法がない</li></ul><p><strong>❌ SEOサポートなし</strong>：</p><ul><li>翻訳版のcanonicalタグなし</li><li>言語固有のサイトマップなし</li><li>検索エンジンが重複コンテンツと認識</li></ul><p><strong>❌ 投稿には回避策が必要</strong>（Hexo 8.1.0でテスト済み）：</p><ul><li>Hexoのパーマリンクシステムは、フィルターが介入する前にデフォルトパターン（<code>:title/</code>）を適用</li><li><code>post_permalink</code>フィルターは、front matterから<code>__permalink</code>が既に設定されている場合のみ実行</li><li>プロセッサーはファイル読み込み時に<code>permalink</code> → <code>__permalink</code>を変換するため、カスタムロジックには早すぎる</li><li>仮想<code>path</code>プロパティは生成開始後に変更不可</li><li><strong>解決策</strong>：Hexoの<code>post_permalink.js</code>フィルターにパッチを適用し、言語プレフィックスを自動注入し、言語サフィックスを削除</li></ul><h3 id="必要なもの">必要なもの</h3><p>真の多言語ブログを作成するには：</p><ul><li>すべてのコンテンツタイプの言語固有URL</li><li>言語ごとの個別インデックス/アーカイブ/カテゴリー/タグページ</li><li>すべての言語を含む適切なサイトマップ生成</li><li>重複コンテンツペナルティを防ぐcanonicalタグ</li><li>複数言語を処理するパフォーマンス最適化（このサイトは4言語をサポート：en、zh-TW、zh-CN、ja）</li></ul><h2 id="URL構造戦略">URL構造戦略</h2><h3 id="投稿とページ：異なるアプローチ">投稿とページ：異なるアプローチ</h3><p><strong>ブログ投稿</strong>は自動言語処理付き：</p><ul><li>任意の場所に配置可能：<code>source/_posts/</code>、<code>source/zh-TW/_posts/</code>など</li><li>ファイル名サフィックス規則を使用：<code>Article-Title-ja.md</code>、<code>Article-Title-zh-TW.md</code></li><li>言語はfront matterの<code>lang</code>フィールドで識別</li><li><strong>パッチが自動生成</strong>：サフィックス重複なしで言語プレフィックス付きURL</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"記事タイトル"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> ja<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token punctuation">---</span></code></pre><p><strong>結果</strong>：<code>Article-Title-ja.md</code> → <code>/ja/2025/10/Article-Title/</code>（サフィックス削除）</p><p><strong>ページ</strong>はディレクトリベースの構成を使用：</p><ul><li>英語：<code>source/tools/index.md</code> → <code>/tools/</code></li><li>中国語：<code>source/zh-TW/tools/index.md</code> → <code>/zh-TW/tools/</code></li><li>日本語：<code>source/ja/tools/index.md</code> → <code>/ja/tools/</code></li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> ツール<span class="token key atrule">layout</span><span class="token punctuation">:</span> tools<span class="token key atrule">lang</span><span class="token punctuation">:</span> ja<span class="token punctuation">---</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 投稿にはHexoコアパッチが必要</p><div class="admonition-content"><p><strong>投稿にパッチが必要な理由</strong>：投稿は言語検出前にパターンを適用する<code>post_permalink</code>フィルターを使用します。ページはディレクトリ構造を直接尊重する別のプロセッサーを使用します。</p><p><strong>問題</strong>：Hexoのパーマリンクシステムは投稿プロセッサーに深く統合されています：</p><ol><li>プロセッサーがファイルを読み込み、<code>permalink</code> → <code>__permalink</code>に変換</li><li>デフォルトパーマリンクパターン（<code>:title/</code>）が即座に適用</li><li><code>post_permalink</code>フィルターは<code>__permalink</code>が存在する場合のみ実行</li><li>仮想<code>path</code>プロパティはフィルターから計算され、変更不可</li></ol><p><strong>解決策</strong>：<code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code>にパッチを適用：</p><ul><li>投稿データから<code>lang</code>フィールドを抽出</li><li>slugから<code>-{lang}</code>サフィックスを削除（例：<code>Article-Title-ja</code> → <code>Article-Title</code>）</li><li>デフォルト以外の言語に<code>/{lang}/</code>プレフィックスを自動注入</li><li>手動および自動生成されたパーマリンクの両方を処理</li></ul><p><strong>ページにパッチが不要な理由</strong>：ページはHexoネイティブの<code>i18n_dir: :lang</code>が自動処理するディレクトリベースの構成を使用します。パッチは投稿処理のみに影響します。</p><p><strong>参照</strong>：実装については下記の<a href="#hexo%E3%82%B3%E3%82%A2%E3%83%91%E3%83%83%E3%83%81">Hexoコアパッチ</a>セクションをご覧ください。</p></div></div><h3 id="設定">設定</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>title/</code></pre><h2 id="Hexoコアパッチ">Hexoコアパッチ</h2><h3 id="自動パーマリンクソリューション">自動パーマリンクソリューション</h3><p>手動パーマリンク設定を排除するため、Hexoのコアパーマリンクフィルターにパッチを適用します：</p><p><strong>ファイル</strong>：<code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">postPermalinkFilter</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 言語を抽出してslugをクリーンアップ</span>  <span class="token keyword">const</span> lang <span class="token operator">=</span> data<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> defaultLang <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>    <span class="token comment">// slugから言語サフィックスを削除（存在する場合）</span>  <span class="token keyword">let</span> cleanSlug <span class="token operator">=</span> data<span class="token punctuation">.</span>slug<span class="token punctuation">;</span>  <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>cleanSlug<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    cleanSlug <span class="token operator">=</span> cleanSlug<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> data<span class="token punctuation">.</span>id<span class="token punctuation">,</span>    <span class="token literal-property property">title</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>  <span class="token comment">// クリーンアップされたslugを使用</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>   <span class="token comment">// クリーンアップされたslugを使用</span>    <span class="token literal-property property">post_title</span><span class="token operator">:</span> data<span class="token punctuation">.</span>title<span class="token punctuation">,</span>    <span class="token literal-property property">year</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'MM'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'DD'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 手動パーマリンクを処理</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// デフォルト以外の言語に言語プレフィックスを注入</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> permalink<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token comment">// 自動生成されたパーマリンクを処理</span>  <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// デフォルト以外の言語に言語プレフィックスを注入</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> permalink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="パッチが理想的でない理由">パッチが理想的でない理由</h3><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ パッチの欠点</p><div class="admonition-content"><p><strong>保守負担</strong>：</p><ul><li>Hexoのアップグレード後に毎回破損</li><li><code>npm install</code>後に再適用が必要</li><li>将来のHexoの変更と競合する可能性</li><li>チームメンバーがパッチ適用を覚えておく必要がある</li></ul><p><strong>脆弱性</strong>：</p><ul><li>Hexoの内部構造が変更される可能性</li><li>パッチファイル形式が脆弱</li><li>バージョン間の互換性の保証なし</li><li>コアを修正するとデバッグが困難に</li></ul><p><strong>より良いアプローチ</strong>：Hexoのメンテナに機能を提案</p></div></div><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 オープンソースへの貢献</p><div class="admonition-content"><p><strong>パッチの代わりに検討すべきこと</strong>：</p><ol><li><strong>GitHub issueを開く</strong>：i18n permalinkのユースケースを説明</li><li><strong>解決策を提案</strong>：パッチを開発の起点として共有</li><li><strong>プルリクエストを提出</strong>：機能を上流に貢献</li><li><strong>メリット</strong>：<ul><li>Hexoチームが機能を保守</li><li>誰もがすぐに使える</li><li>パッチ保守の負担がない</li><li>コミュニティのテストと改善</li></ul></li></ol><p><strong>Hexoリポジトリ</strong>：<a href="https://github.com/hexojs/hexo">hexojs/hexo</a></p><p><strong>それまでは</strong>：パッチを一時的な回避策として使用し、公式サポートが存在したら移行する計画を立てましょう。</p></div></div><h3 id="パッチの適用">パッチの適用</h3><p><strong>オプション1：手動パッチ</strong>（<code>npm install</code>後に再適用が必要）：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blogpatch <span class="token parameter variable">-p0</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/patches/hexo-i18n-post-permalink.patch</code></pre><p><strong>オプション2：インストール後スクリプト</strong>（自動）：</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token comment">// package.json</span><span class="token punctuation">&#123;</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"postinstall"</span><span class="token operator">:</span> <span class="token string">"patch -p0 &lt; ../patches/hexo-i18n-post-permalink.patch || true"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>パッチファイル</strong>：</p><ul><li><code>patches/hexo-i18n-post-permalink.patch</code> - ブログ投稿用</li><li><code>patches/hexo-i18n-page-permalink.patch</code> - ページ用（オプション）</li></ul><h3 id="動作方法">動作方法</h3><p><strong>パッチ適用前</strong>：</p><ul><li>ファイル名：<code>Tools-Games-ja.md</code></li><li>生成されたURL：<code>/ja/2025/10/Tools-Games-ja/</code> ❌（サフィックス重複）</li></ul><p><strong>パッチ適用後</strong>：</p><ul><li>ファイル名：<code>Tools-Games-ja.md</code></li><li>生成されたURL：<code>/ja/2025/10/Tools-Games/</code> ✅（サフィックス削除）</li></ul><p><strong>主な機能</strong>：</p><ol><li><strong>言語検出</strong>：front matterから<code>lang</code>フィールドを読み取り</li><li><strong>サフィックス削除</strong>：slugから<code>-ja</code>、<code>-zh-TW</code>、<code>-zh-CN</code>を削除</li><li><strong>プレフィックス注入</strong>：デフォルト以外の言語に<code>/{lang}/</code>を追加</li><li><strong>手動オーバーライド</strong>：front matterの明示的な<code>permalink</code>を尊重</li></ol><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 ファイル名規則</p><div class="admonition-content"><p>整理のためにファイル名に言語サフィックスを使用：</p><ul><li><code>Article-Title.md</code>（英語）</li><li><code>Article-Title-zh-TW.md</code>（繁体字中国語）</li><li><code>Article-Title-zh-CN.md</code>（簡体字中国語）</li><li><code>Article-Title-ja.md</code>（日本語）</li></ul><p>パッチはURLからサフィックスを自動的に削除します。</p></div></div><h3 id="ページにもパッチを適用できますか？">ページにもパッチを適用できますか？</h3><p>技術的には可能ですが、不要です。ページのディレクトリベースアプローチ：</p><ul><li><strong>すぐに使える</strong>：Hexoネイティブの<code>i18n_dir: :lang</code>が処理</li><li><strong>より明確な構成</strong>：ファイルシステムで言語構造が可視化</li><li><strong>保守が容易</strong>：ファイル名サフィックス規則が不要</li><li><strong>パッチ保守の負担なし</strong>：<code>npm install</code>後も存続</li></ul><p><strong>ベストプラクティス</strong>：投稿にはパッチを使用（日付付き動的コンテンツ）、ページにはディレクトリ構造を使用（About、Toolsなどの静的コンテンツ）。</p><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📋 このウェブサイトのアプローチ</p><div class="admonition-content"><p>このウェブサイトは<strong>投稿とページの両方にパッチアプローチを使用</strong>（ページのディレクトリベースアプローチではない）：</p><p><strong>すべてを集中化する理由</strong></p><ul><li><strong>一貫性</strong>：すべてのコンテンツタイプで同じファイル名サフィックス規則</li><li><strong>よりシンプルな構造</strong>：すべてのコンテンツが標準的な場所（<code>source/_posts/</code>、<code>source/tools/</code>）</li><li><strong>リファクタリングが容易</strong>：ファイル移動が言語検出を破壊しない</li><li><strong>重複の削減</strong>：言語ごとにディレクトリ構造を再作成する必要なし</li><li><strong>統一されたワークフロー</strong>：投稿とページで同じ翻訳プロセス</li></ul><p><strong>トレードオフ</strong>：ページはディレクトリベースアプローチ（すぐに使える）を使用できますが、すべてにパッチを使用することで一貫性を維持し、メンタルモデルを簡素化します。</p><p><strong>参照</strong>：実装については下記の<a href="#%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%B8%E3%81%AE%E3%83%91%E3%83%83%E3%83%81%E6%8B%A1%E5%BC%B5">ページへのパッチ拡張</a>セクションをご覧ください。</p></div></div><h3 id="ページへのパッチ拡張">ページへのパッチ拡張</h3><p>ページに同じアプローチを適用するには、Hexoのページプロセッサーにパッチを適用します：</p><p><strong>ファイル</strong>：<code>node_modules/hexo/dist/plugins/processor/asset.js</code></p><p>60行目の後に追加（<code>data.path</code>設定後）：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// i18n: ページに言語プレフィックスを自動注入し、言語サフィックスを削除</span><span class="token keyword">const</span> lang <span class="token operator">=</span> data<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span><span class="token keyword">const</span> defaultLang <span class="token operator">=</span> config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span><span class="token keyword">const</span> languages <span class="token operator">=</span> config<span class="token punctuation">.</span>language <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token string">'en'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>data<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ファイル名を抽出して言語サフィックスをチェック</span>    <span class="token keyword">const</span> pathParts <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> filename <span class="token operator">=</span> pathParts<span class="token punctuation">[</span>pathParts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(md|markdown|html)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>languages<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// ファイル名に言語サフィックスが存在する場合、パスから削除</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> pathWithoutExt <span class="token operator">=</span> data<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> cleanPath <span class="token operator">=</span> pathWithoutExt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span>path <span class="token operator">=</span> cleanPath <span class="token operator">+</span> <span class="token string">'.html'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    data<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>パッチの適用</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blogpatch <span class="token parameter variable">-p0</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/patches/hexo-i18n-page-permalink.patch</code></pre><p><strong>動作方法</strong>：</p><ul><li>Hexoのページプロセッサーを直接パッチ</li><li>ページファイル処理中に実行</li><li>ファイル名から言語サフィックスを削除（例：<code>index-zh-CN.md</code> → <code>index.html</code>）</li><li>言語プレフィックスを注入（例：<code>terms-and-conditions/index.html</code> → <code>zh-CN/terms-and-conditions/index.html</code>）</li></ul><p><strong>例</strong>：</p><ul><li>ファイル：<code>source/terms-and-conditions/index-zh-CN.md</code>（<code>lang: zh-CN</code>付き）</li><li>生成されたURL：<code>/zh-CN/terms-and-conditions/</code>（✅ サフィックス削除、プレフィックス追加）</li><li>ファイル：<code>source/tools-ja.md</code>（<code>lang: ja</code>付き）</li><li>生成されたURL：<code>/ja/tools/</code>（✅ サフィックス削除、プレフィックス追加）</li></ul><h2 id="必須のi18nプラグイン">必須のi18nプラグイン</h2><p>標準のHexoジェネレーターは言語固有のコンテンツをサポートしていません。カスタムプラグインがそのギャップを埋めます：</p><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ まず公式プラグインを削除</p><div class="admonition-content"><p>競合を避けるため、Hexoのデフォルトジェネレーターをアンインストール：<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-generator-index hexo-generator-archive hexo-generator-category hexo-generator-tag hexo-generator-sitemap</code></pre>i18nバージョンがこれらを完全に置き換えます。</p></div></div><h3 id="1-インデックスページ">1. インデックスページ</h3><p><strong>プラグイン</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-index">hexo-generator-i18n-index</a></p><p>言語ごとに個別のインデックスページを作成し、固定投稿をサポート：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-i18n-index</code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p><strong>ソートロジック</strong>：</p><ol><li>通常の投稿が先、リダイレクト投稿（<code>original_lang_url</code>）が後</li><li>固定投稿が最上部</li><li>次に日付順（新しい順）</li></ol><p><strong>結果</strong>：</p><ul><li><code>/</code> - 英語の投稿のみ</li><li><code>/zh-TW/</code> - 繁体字中国語の投稿のみ</li><li><code>/zh-CN/</code> - 簡体字中国語の投稿のみ</li><li><code>/ja/</code> - 日本語の投稿のみ</li></ul><h3 id="2-サイトマップ生成">2. サイトマップ生成</h3><p><strong>プラグイン</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-sitemap">hexo-generator-i18n-sitemap</a></p><p>すべての言語バージョンを含む統一サイトマップを生成：</p><ul><li><code>/sitemap.xml</code> - すべての言語のすべてのページ</li><li><code>/sitemap.txt</code> - シンプルなURLリスト形式</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja  <span class="token key atrule">changefreq</span><span class="token punctuation">:</span> monthly  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">0.6</span></code></pre><h3 id="3-アーカイブページ">3. アーカイブページ</h3><p><strong>プラグイン</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-archive">hexo-generator-i18n-archive</a></p><p>言語固有のアーカイブページを作成：</p><ul><li><code>/archives/</code>（英語）</li><li><code>/zh-TW/archives/</code>（繁体字中国語）</li><li><code>/ja/archives/</code>（日本語）</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">yearly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">monthly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><h3 id="4-カテゴリーページ">4. カテゴリーページ</h3><p><strong>プラグイン</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-category">hexo-generator-i18n-category</a></p><p>言語ごとにカテゴリーページを生成し、カテゴリー名を翻訳：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"開發"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="5-タグページ">5. タグページ</h3><p><strong>プラグイン</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-tag">hexo-generator-i18n-tag</a></p><p>言語でフィルタリングされたタグページを作成：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span></code></pre><h3 id="6-Canonicalタグ">6. Canonicalタグ</h3><p><strong>プラグイン</strong>：<a href="https://github.com/neoalienson/hexo-plugin-i18n-canonical">hexo-plugin-i18n-canonical</a></p><p>適切なcanonicalタグを追加して重複コンテンツペナルティを防止。</p><p><strong>問題</strong>：検索エンジンは翻訳ページを重複コンテンツと見なします：</p><ul><li><code>/2025/10/Article-Title/</code>（英語）</li><li><code>/zh-TW/2025/10/Article-Title/</code>（中国語）</li><li><code>/ja/2025/10/Article-Title/</code>（日本語）</li></ul><p>canonicalタグがないと、Googleは次のことを行う可能性があります：</p><ul><li>翻訳間でランキングシグナルを分散</li><li>間違った言語バージョンをインデックス</li><li>「重複」コンテンツでサイトにペナルティ</li></ul><p><strong>解決策</strong>：Canonicalタグは検索エンジンにどのバージョンが主要かを伝えます：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment"><!-- すべての言語バージョンが英語をcanonicalとして指す --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canonical<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://neo01.com/2025/10/Article-Title/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">default_lang</span><span class="token punctuation">:</span> en  <span class="token comment"># 主要言語</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja</code></pre><p><strong>結果</strong>：検索エンジンはこれらが翻訳であり重複ではないことを理解し、SEO価値を保持します。</p><h2 id="フラグメントキャッシュによるパフォーマンス最適化">フラグメントキャッシュによるパフォーマンス最適化</h2><h3 id="多言語パフォーマンスの課題">多言語パフォーマンスの課題</h3><p>このウェブサイトは4言語（en、zh-TW、zh-CN、ja）をサポートしており、これは次を意味します：</p><ul><li><strong>4×ページ生成</strong>：各投稿が4つのインデックスエントリ、4つのアーカイブページ、4つのカテゴリーページ、4つのタグページを作成</li><li><strong>4×テンプレートレンダリング</strong>：ページタイプごとにヘッダー、フッター、サイドバーを4回レンダリング</li><li><strong>4×メモリ使用量</strong>：各言語が個別のページオブジェクトを維持</li><li><strong>指数関数的成長</strong>：100投稿 × 4言語 = 400+ページ（アーカイブ/カテゴリー/タグを数える前）</li></ul><p><strong>一般的なルール</strong>：N言語の場合、最適化なしでN×のビルド時間とメモリ使用量を予想します。</p><h3 id="フラグメントキャッシュソリューション">フラグメントキャッシュソリューション</h3><p>Hexoの<code>fragment_cache()</code>関数は、レンダリングされたテンプレートコンテンツを保存し、ページ間で再利用します。ページごとに変更されないコンポーネントに不可欠です。</p><p><strong>重要な原則</strong>：グローバルではなく、言語ごとにキャッシュします。</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>relative_link<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span></code></pre><p><strong>キャッシュキー戦略</strong>：</p><ul><li><code>header-en</code>、<code>header-zh-TW</code>、<code>header-zh-CN</code>、<code>header-ja</code>（4つのキャッシュエントリ）</li><li>各言語が分離されたキャッシュを取得</li><li>その言語のすべてのページで再利用</li></ul><h3 id="キャッシュすべきもの">キャッシュすべきもの</h3><p><strong>ヘッダー</strong>（<code>layout.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>ナビゲーション、言語セレクター、ロゴ</li><li>4つのキャッシュエントリ（言語ごとに1つ）</li><li>各言語の約100+ページで再利用</li></ul><p><strong>サイドバー</strong>（<code>sidebar.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'sidebar-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/sidebar-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>ソーシャルリンク、構造</li><li>ウィジェットは言語ごとに個別にキャッシュ</li></ul><p><strong>ウィジェット</strong>（<code>sidebar-widgets.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'widget-recent_posts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'widget/recent_posts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>最近の投稿はテンプレート内で言語でフィルタリング：</li></ul><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%_</span><span class="token language-javascript"> site<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span> <span class="token operator">===</span> currentLang<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">_%></span></span></code></pre><ul><li>その言語のすべてのページで同じ5つの投稿を表示</li></ul><p><strong>フッター</strong>（<code>footer.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'footer-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-dynamic'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>静的：著作権、クレジット（キャッシュ済み）</li><li>動的：QRコード（ページ固有）</li></ul><p><strong>スクリプト</strong>（<code>layout.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'scripts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/scripts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>JavaScriptインクルードを言語ごとにキャッシュ</li></ul><h3 id="設定要件">設定要件</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">relative_link</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 安全なキャッシュに必要</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 相対リンクはキャッシュを破壊</p><div class="admonition-content"><p>フラグメントキャッシュはページオブジェクトをキャプチャします。<code>relative_link: true</code>の場合、キャッシュされたコンテンツに間違ったパスが含まれます。キャッシュを有効にする場合は常に絶対パスを使用してください。</p></div></div><h3 id="クライアント側言語セレクター">クライアント側言語セレクター</h3><p>サーバー側の言語切り替えはフラグメントキャッシュで機能しません。解決策：JavaScriptベースのURL生成。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 現在のパスを検出</span><span class="token keyword">var</span> currentPath <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">;</span><span class="token keyword">var</span> basePath <span class="token operator">=</span> currentPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token operator">^</span>\\<span class="token operator">/</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">?</span>\\<span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 言語固有のURLを生成</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'[data-lang]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> targetLang <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'data-lang'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> targetUrl <span class="token operator">=</span> targetLang <span class="token operator">===</span> <span class="token string">'en'</span> <span class="token operator">?</span> basePath <span class="token operator">:</span> <span class="token string">'/'</span> <span class="token operator">+</span> targetLang <span class="token operator">+</span> basePath<span class="token punctuation">;</span>    link<span class="token punctuation">.</span>href <span class="token operator">=</span> targetUrl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>利点</strong>：</p><ul><li>言語セレクターHTMLは言語ごとにキャッシュ</li><li>URLは実際のブラウザーの場所から生成</li><li>古いページオブジェクトの問題なし</li></ul><h3 id="パフォーマンスへの影響">パフォーマンスへの影響</h3><p><strong>最適化前</strong>（このサイトの4言語）：</p><ul><li>ビルド時間：400+ページ（4言語 × 100+投稿）で約1分</li><li>メモリ使用量：高いテンプレートレンダリングオーバーヘッド</li><li>各ページがヘッダー/フッター/サイドバーをゼロからレンダリング</li></ul><p><strong>最適化後</strong>：</p><ul><li>ビルド時間：約40秒（60%削減）</li><li>メモリ使用量：大幅に低下</li><li>キャッシュヒット率：言語ごとに80-95%</li></ul><p><strong>このサイトの計算</strong>：</p><ul><li>キャッシュなし：400ページ × 5コンポーネント = 2,000レンダリング</li><li>キャッシュあり：20キャッシュエントリ（4言語 × 5コンポーネント）+ 400動的レンダリング</li><li><strong>一般的な式</strong>：コンポーネントごとにNキャッシュエントリ、（ページ × N）レンダリングではない</li></ul><h2 id="コンテンツ管理ワークフロー">コンテンツ管理ワークフロー</h2><h3 id="新規投稿の作成">新規投稿の作成</h3><ol><li><strong>まず英語版を作成</strong>（信頼できる情報源）：</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"Article Title"</span><span class="token comment"># 作成：source/_posts/Article-Title.md</span></code></pre><ol start="2"><li><strong>言語メタデータを追加</strong>：</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Article Title"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"Compelling summary in English"</span><span class="token punctuation">---</span></code></pre><ol start="3"><li><strong>言語サフィックス付きで翻訳版を作成</strong>：</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ファイル名に言語サフィックスを使用</span><span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-TW.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-CN.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-ja.md</code></pre><ol start="4"><li><strong>翻訳メタデータを更新</strong>（permalinkは不要）：</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"記事タイトル"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> ja  <span class="token comment"># パッチが自動生成：/ja/2025/10/Article-Title/</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"日本語の要約"</span><span class="token punctuation">---</span></code></pre><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 自動URL生成</p><div class="admonition-content"><p>パッチ適用後：</p><ul><li><code>Article-Title-zh-TW.md</code> → <code>/zh-TW/2025/10/Article-Title/</code></li><li><code>Article-Title-ja.md</code> → <code>/ja/2025/10/Article-Title/</code></li><li>言語サフィックスがURLから自動的に削除</li><li>手動<code>permalink</code>設定は不要</li></ul></div></div><h3 id="未翻訳コンテンツの処理">未翻訳コンテンツの処理</h3><p>単一言語でのみ利用可能なコンテンツには、<code>original_lang_url</code>を使用：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"CISP認証"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> ja<span class="token key atrule">permalink</span><span class="token punctuation">:</span> /ja/2025/10/cisp<span class="token punctuation">-</span>certification/<span class="token key atrule">categories</span><span class="token punctuation">:</span> Cybersecurity<span class="token key atrule">original_lang_url</span><span class="token punctuation">:</span> /zh<span class="token punctuation">-</span>CN/2025/10/cisp<span class="token punctuation">-</span>certification/<span class="token punctuation">---</span></code></pre><p>これはコンテンツの代わりにリダイレクト通知を表示し、読者を利用可能な言語バージョンに誘導します。</p><h2 id="リソース管理">リソース管理</h2><h3 id="画像とアセット">画像とアセット</h3><p><strong>英語投稿</strong>：相対パスを使用</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">Diagram</span>](<span class="token url">diagram.png</span>)</span></code></pre><p><strong>翻訳投稿</strong>：英語アセットへの絶対パスを使用</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">図</span>](<span class="token url">/2025/10/Article-Title/diagram.png</span>)</span></code></pre><p><strong>利点</strong>：</p><ul><li>アセットの重複なし</li><li>単一の信頼できる情報源</li><li>保守が容易</li></ul><h3 id="内部リンク">内部リンク</h3><p>常に言語プレフィックス付きの絶対パスを使用：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token comment"><!-- 英語 --></span><span class="token url">[<span class="token content">Tools</span>](<span class="token url">/tools/</span>)</span><span class="token url">[<span class="token content">Previous Post</span>](<span class="token url">/2025/09/Previous-Article/</span>)</span><span class="token comment"><!-- 日本語 --></span><span class="token url">[<span class="token content">ツール</span>](<span class="token url">/ja/tools/</span>)</span><span class="token url">[<span class="token content">前の記事</span>](<span class="token url">/ja/2025/09/Previous-Article/</span>)</span></code></pre><h2 id="SEOの考慮事項">SEOの考慮事項</h2><h3 id="要約管理">要約管理</h3><p>各言語には異なる文字密度があります：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt_length</span><span class="token punctuation">:</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token number">100</span></code></pre><p>より良い制御のため、常にfront matterで手動要約を提供：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"カスタムプラグインでHexoの多言語コンテンツ管理をマスター。"</span></code></pre><h3 id="カテゴリー翻訳">カテゴリー翻訳</h3><p>カテゴリーキーは英語のまま、表示名を翻訳：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"開發"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="タグ">タグ</h3><p><strong>コンテンツ言語に関係なく、常に英語タグを使用</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo  <span class="token punctuation">-</span> i18n  <span class="token punctuation">-</span> Static Site</code></pre><p>これにより、言語間でタグページの一貫性が確保されます。</p><h2 id="追加のパフォーマンスヒント">追加のパフォーマンスヒント</h2><h3 id="開発中のプラグイン無効化">開発中のプラグイン無効化</h3><p>多くのi18nプラグインは、開発を高速化するためにローカルプレビュー中に無効化できます：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># プレビュー用に無効化</span>  <span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># プレビュー用に無効化</span>  <span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># プレビュー用に無効化</span>  <span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># プレビュー用に無効化</span>  <span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># プレビュー用に無効化</span></code></pre><p><strong>デプロイ前に有効化</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># デプロイ前にすべてのプラグインのenableをtrueに設定</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo generate</code></pre><p><strong>利点</strong>：</p><ul><li>より高速なローカルビルド（秒単位 vs 分単位）</li><li>コンテンツ作成中のより速い反復</li><li>本番環境で必要な場合のみ完全な機能</li></ul><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 開発ワークフロー</p><div class="admonition-content"><p>日常作業では<code>_config.yml</code>でプラグインを無効のままにします。CI/CDパイプラインまたは手動デプロイ前にのみ有効化します。</p></div></div><h2 id="トラブルシューティング">トラブルシューティング</h2><h3 id="間違った言語のコンテンツが表示される">間違った言語のコンテンツが表示される</h3><p><strong>原因</strong>：フラグメントキャッシュが言語固有のキーを使用していない</p><p><strong>解決策</strong>：キャッシュキーに<code>page.lang</code>が含まれていることを確認：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'component-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/component'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><h3 id="言語セレクターが404を表示">言語セレクターが404を表示</h3><p><strong>原因</strong>：フラグメントキャッシュによるサーバー側パス検出</p><p><strong>解決策</strong>：クライアント側URL生成を実装（上記参照）</p><h3 id="ビルドパフォーマンスの低下">ビルドパフォーマンスの低下</h3><p><strong>原因</strong>：キャッシュが無効または<code>relative_link: true</code></p><p><strong>解決策</strong>：</p><ol><li><code>relative_link: false</code>を設定</li><li>キャッシュをクリア：<code>hexo clean</code></li><li>再生成：<code>hexo generate</code></li></ol><h3 id="翻訳が表示されない">翻訳が表示されない</h3><p><strong>原因</strong>：<code>lang</code>メタデータの欠落または不正なpermalink</p><p><strong>解決策</strong>：front matterに以下が含まれていることを確認：</p><ul><li><code>lang: ja</code>（または適切な言語コード）</li><li><code>permalink: /ja/YYYY/MM/slug/</code></li></ul><h2 id="まとめ">まとめ</h2><p>多言語Hexoブログの構築にはカスタムプラグインと慎重な最適化が必要ですが、結果は高速でSEOフレンドリーなサイトとなり、グローバルなオーディエンスにサービスを提供します。重要な洞察：</p><ul><li><strong>関心の分離</strong>：投稿は集中化、ページはディレクトリベース</li><li><strong>積極的なキャッシュ</strong>：言語ごとのフラグメントキャッシュでビルド時間を60%削減</li><li><strong>クライアント側の強化</strong>：JavaScriptがキャッシュを破壊せずに動的要素を処理</li><li><strong>一貫した構造</strong>：英語を信頼できる情報源とし、翻訳は確立されたパターンに従う</li></ul><p>この実装は、4言語にわたる400+ページのブログをサポートし、優れたパフォーマンスとSEOを維持しながら2分以内にビルドします。</p><p>静的サイト生成の未来は多言語であり、適切なアーキテクチャがあれば、Hexoは世界クラスの結果を提供できます。</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">カスタムプラグイン、URL戦略、フラグメントキャッシュによるパフォーマンス最適化で、Hexoの多言語コンテンツ管理をマスターしましょう。</summary>
    
    
    
    <category term="Development" scheme="https://neo01.com/categories/Development/"/>
    
    
    <category term="Hexo" scheme="https://neo01.com/tags/Hexo/"/>
    
    <category term="i18n" scheme="https://neo01.com/tags/i18n/"/>
    
    <category term="Static Site" scheme="https://neo01.com/tags/Static-Site/"/>
    
  </entry>
  
  <entry>
    <title>Enabling i18n in Hexo: A Complete Guide to Multilingual Blogging</title>
    <link href="https://neo01.com/2025/10/Enabling-i18n-in-Hexo/"/>
    <id>https://neo01.com/2025/10/Enabling-i18n-in-Hexo/</id>
    <published>2025-10-29T16:00:00.000Z</published>
    <updated>2025-10-30T07:00:07.553Z</updated>
    
    <content type="html"><![CDATA[<p>Building a multilingual blog isn’t just about translating content—it’s about creating a seamless experience across languages while maintaining performance and SEO. This guide walks through the complete i18n implementation used on this website, from URL structure to caching strategies.</p><h2 id="What-is-Hexo">What is Hexo?</h2><p><a href="https://hexo.io/">Hexo</a> is a fast, simple, and powerful static site generator built on Node.js. It transforms Markdown files into a complete website with:</p><ul><li><strong>Lightning-fast generation</strong>: Hundreds of files in seconds</li><li><strong>Markdown support</strong>: Write content in plain text with formatting</li><li><strong>Extensible plugins</strong>: Rich ecosystem for added functionality</li><li><strong>Theme system</strong>: Customizable templates and layouts</li><li><strong>Git-friendly</strong>: Version control your entire site</li></ul><p><strong>Perfect for</strong>:</p><ul><li>Technical blogs with code examples</li><li>Documentation sites</li><li>Personal portfolios</li><li>Multilingual content (with proper setup)</li></ul><p><strong>Installation</strong>:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-clihexo init my-blog<span class="token builtin class-name">cd</span> my-blog<span class="token function">npm</span> <span class="token function">install</span>hexo server</code></pre><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📌 Version Note</p><div class="admonition-content"><p>This guide is based on <strong>Hexo 8.1.0 or above</strong>. Permalink behavior and filter hooks may differ in earlier versions.</p></div></div><h2 id="The-Challenge-of-Hexo-i18n">The Challenge of Hexo i18n</h2><h3 id="What-Hexo-Provides">What Hexo Provides</h3><p>Hexo has basic i18n support for <strong>theme translations only</strong>:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># Detects language from URL path</span></code></pre><p><strong>Language files</strong> (theme translations):</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># themes/your-theme/languages/en.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> Home  <span class="token key atrule">archives</span><span class="token punctuation">:</span> Archives  <span class="token comment"># themes/your-theme/languages/zh-TW.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> 首頁  <span class="token key atrule">archives</span><span class="token punctuation">:</span> 歸檔</code></pre><p><strong>Templates</strong> use helpers:</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'menu.home'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>  <span class="token comment"><!-- Outputs: Home or 首頁 --></span></code></pre><p><strong>Path detection</strong>:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># Detects language from first URL segment</span></code></pre><p>Examples:</p><ul><li><code>/index.html</code> → <code>en</code> (default)</li><li><code>/zh-tw/index.html</code> → <code>zh-tw</code></li><li><code>/archives/index.html</code> → <code>en</code> (not detected as language)</li></ul><h3 id="The-Problems">The Problems</h3><p>Hexo’s native i18n <strong>only translates UI text</strong>, not content:</p><p><strong>❌ No content filtering</strong>:</p><ul><li>Index page shows all posts regardless of language</li><li>Archives mix English and Chinese posts together</li><li>Categories/tags don’t filter by language</li></ul><p><strong>❌ No language-specific generators</strong>:</p><ul><li><code>/archives/</code> shows posts from all languages</li><li><code>/categories/Development/</code> mixes all language versions</li><li>No way to generate <code>/zh-TW/archives/</code> separately</li></ul><p><strong>❌ No SEO support</strong>:</p><ul><li>No canonical tags for translations</li><li>No language-specific sitemaps</li><li>Search engines see duplicate content</li></ul><p><strong>❌ Posts require workaround</strong> (Tested in Hexo 8.1.0):</p><ul><li>Hexo’s permalink system applies the default pattern (<code>:title/</code>) before any filters can intercept</li><li>The <code>post_permalink</code> filter only runs when <code>__permalink</code> is already set from front matter</li><li>The processor converts <code>permalink</code> → <code>__permalink</code> during file reading, too early for custom logic</li><li>Virtual <code>path</code> property can’t be modified after generation starts</li><li><strong>Solution</strong>: Patch Hexo’s <code>post_permalink.js</code> filter to auto-inject language prefix and strip language suffix</li></ul><h3 id="What’s-Needed">What’s Needed</h3><p>Creating a truly multilingual blog requires:</p><ul><li>Language-specific URLs for all content types</li><li>Separate index/archive/category/tag pages per language</li><li>Proper sitemap generation with all languages</li><li>Canonical tags to prevent duplicate content penalties</li><li>Performance optimization to handle multiple languages (this site supports 4: en, zh-TW, zh-CN, ja)</li></ul><h2 id="URL-Structure-Strategy">URL Structure Strategy</h2><h3 id="Posts-vs-Pages-Different-Approaches">Posts vs Pages: Different Approaches</h3><p><strong>Blog Posts</strong> with automatic language handling:</p><ul><li>Can be organized anywhere: <code>source/_posts/</code>, <code>source/zh-TW/_posts/</code>, etc.</li><li>Use filename suffix convention: <code>Article-Title-ja.md</code>, <code>Article-Title-zh-TW.md</code></li><li>Language identified by <code>lang</code> field in front matter</li><li><strong>Patch auto-generates</strong> language-prefixed URLs without suffix duplication</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"文章標題"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token punctuation">---</span></code></pre><p><strong>Result</strong>: <code>Article-Title-zh-TW.md</code> → <code>/zh-TW/2025/10/Article-Title/</code> (suffix stripped)</p><p><strong>Pages</strong> use directory-based organization:</p><ul><li>English: <code>source/tools/index.md</code> → <code>/tools/</code></li><li>Chinese: <code>source/zh-TW/tools/index.md</code> → <code>/zh-TW/tools/</code></li><li>Japanese: <code>source/ja/tools/index.md</code> → <code>/ja/tools/</code></li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 工具<span class="token key atrule">layout</span><span class="token punctuation">:</span> tools<span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW<span class="token punctuation">---</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ Hexo Core Patch Required for Posts</p><div class="admonition-content"><p><strong>Why posts need a patch</strong>: Posts use the <code>post_permalink</code> filter which applies patterns before language detection. Pages use a different processor that respects directory structure directly.</p><p><strong>The problem</strong>: Hexo's permalink system is deeply integrated into the post processor:</p><ol><li>Processor reads file and converts <code>permalink</code> → <code>__permalink</code></li><li>Default permalink pattern (<code>:title/</code>) applied immediately</li><li><code>post_permalink</code> filter only runs if <code>__permalink</code> exists</li><li>Virtual <code>path</code> property computed from filter, can't be modified</li></ol><p><strong>The solution</strong>: Patch <code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code> to:</p><ul><li>Extract <code>lang</code> field from post data</li><li>Strip <code>-{lang}</code> suffix from slug (e.g., <code>Article-Title-ja</code> → <code>Article-Title</code>)</li><li>Auto-inject <code>/{lang}/</code> prefix for non-default languages</li><li>Handle both manual and generated permalinks</li></ul><p><strong>Why pages don't need the patch</strong>: Pages use directory-based organization that Hexo's native <code>i18n_dir: :lang</code> handles automatically. The patch only affects post processing.</p><p><strong>See</strong>: <a href="#hexo-core-patch">Hexo i18n Permalink Patch</a> section below for implementation.</p></div></div><h3 id="Configuration">Configuration</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>title/</code></pre><h2 id="Hexo-Core-Patch">Hexo Core Patch</h2><h3 id="The-Automatic-Permalink-Solution">The Automatic Permalink Solution</h3><p>To eliminate manual permalink configuration, patch Hexo’s core permalink filter:</p><p><strong>File</strong>: <code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">postPermalinkFilter</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// Extract language and clean slug</span>  <span class="token keyword">const</span> lang <span class="token operator">=</span> data<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> defaultLang <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>    <span class="token comment">// Strip language suffix from slug if present</span>  <span class="token keyword">let</span> cleanSlug <span class="token operator">=</span> data<span class="token punctuation">.</span>slug<span class="token punctuation">;</span>  <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>cleanSlug<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    cleanSlug <span class="token operator">=</span> cleanSlug<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> data<span class="token punctuation">.</span>id<span class="token punctuation">,</span>    <span class="token literal-property property">title</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>  <span class="token comment">// Use cleaned slug</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>   <span class="token comment">// Use cleaned slug</span>    <span class="token literal-property property">post_title</span><span class="token operator">:</span> data<span class="token punctuation">.</span>title<span class="token punctuation">,</span>    <span class="token literal-property property">year</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'MM'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'DD'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// Handle manual permalink</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Inject language prefix for non-default languages</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> permalink<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token comment">// Handle generated permalink</span>  <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Inject language prefix for non-default languages</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> permalink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="Why-Patching-Is-Not-Ideal">Why Patching Is Not Ideal</h3><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ Patching Drawbacks</p><div class="admonition-content"><p><strong>Maintenance burden</strong>:</p><ul><li>Breaks after every Hexo upgrade</li><li>Requires reapplication with <code>npm install</code></li><li>May conflict with future Hexo changes</li><li>Team members must remember to apply patches</li></ul><p><strong>Fragility</strong>:</p><ul><li>Hexo's internal structure could change</li><li>Patch file format is brittle</li><li>No guarantee of compatibility across versions</li><li>Debugging becomes harder when core is modified</li></ul><p><strong>Better approach</strong>: Propose the feature to Hexo's maintainers</p></div></div><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 Contributing to Open Source</p><div class="admonition-content"><p><strong>Instead of patching, consider</strong>:</p><ol><li><strong>Open a GitHub issue</strong>: Describe the i18n permalink use case</li><li><strong>Propose a solution</strong>: Share your patch as a starting point</li><li><strong>Submit a pull request</strong>: Contribute the feature upstream</li><li><strong>Benefits</strong>:<ul><li>Feature maintained by Hexo team</li><li>Works out-of-the-box for everyone</li><li>No patch maintenance burden</li><li>Community testing and improvements</li></ul></li></ol><p><strong>Hexo repository</strong>: <a href="https://github.com/hexojs/hexo">hexojs/hexo</a></p><p><strong>Until then</strong>: Use patches as a temporary workaround, but plan to migrate once official support exists.</p></div></div><h3 id="Applying-the-Patch">Applying the Patch</h3><p><strong>Option 1: Manual patch</strong> (requires reapplication after <code>npm install</code>):</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blogpatch <span class="token parameter variable">-p0</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/patches/hexo-i18n-post-permalink.patch</code></pre><p><strong>Option 2: Post-install script</strong> (automatic):</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token comment">// package.json</span><span class="token punctuation">&#123;</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"postinstall"</span><span class="token operator">:</span> <span class="token string">"patch -p0 &lt; ../patches/hexo-i18n-post-permalink.patch || true"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>Patch files</strong>:</p><ul><li><code>patches/hexo-i18n-post-permalink.patch</code> - For blog posts</li><li><code>patches/hexo-i18n-page-permalink.patch</code> - For pages (optional)</li></ul><h3 id="How-It-Works">How It Works</h3><p><strong>Before patch</strong>:</p><ul><li>Filename: <code>Tools-Games-ja.md</code></li><li>Generated URL: <code>/ja/2025/10/Tools-Games-ja/</code> ❌ (suffix duplicated)</li></ul><p><strong>After patch</strong>:</p><ul><li>Filename: <code>Tools-Games-ja.md</code></li><li>Generated URL: <code>/ja/2025/10/Tools-Games/</code> ✅ (suffix stripped)</li></ul><p><strong>Key features</strong>:</p><ol><li><strong>Language detection</strong>: Reads <code>lang</code> field from front matter</li><li><strong>Suffix stripping</strong>: Removes <code>-ja</code>, <code>-zh-TW</code>, <code>-zh-CN</code> from slugs</li><li><strong>Prefix injection</strong>: Adds <code>/{lang}/</code> for non-default languages</li><li><strong>Manual override</strong>: Respects explicit <code>permalink</code> in front matter</li></ol><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 Filename Convention</p><div class="admonition-content"><p>Use language suffix in filenames for organization:</p><ul><li><code>Article-Title.md</code> (English)</li><li><code>Article-Title-zh-TW.md</code> (Traditional Chinese)</li><li><code>Article-Title-zh-CN.md</code> (Simplified Chinese)</li><li><code>Article-Title-ja.md</code> (Japanese)</li></ul><p>The patch automatically strips suffixes from URLs.</p></div></div><h3 id="Could-You-Patch-Pages-Too">Could You Patch Pages Too?</h3><p>Technically yes, but unnecessary. The directory-based approach for pages:</p><ul><li><strong>Works out of the box</strong>: Hexo’s native <code>i18n_dir: :lang</code> handles it</li><li><strong>Clearer organization</strong>: Language structure visible in file system</li><li><strong>Easier to maintain</strong>: No filename suffix conventions needed</li><li><strong>No patch maintenance burden</strong>: Survives <code>npm install</code> without reapplication</li></ul><p><strong>Best practice</strong>: Use the patch for posts (dynamic content with dates), use directory structure for pages (static content like About, Tools, etc.).</p><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📋 This Website's Approach</p><div class="admonition-content"><p>This website uses the <strong>patch approach for both posts and pages</strong> (not the directory-based approach for pages):</p><p><strong>Why centralize everything?</strong></p><ul><li><strong>Consistency</strong>: Same filename suffix convention for all content types</li><li><strong>Simpler structure</strong>: All content in standard locations (<code>source/_posts/</code>, <code>source/tools/</code>)</li><li><strong>Easier refactoring</strong>: Moving files doesn't break language detection</li><li><strong>Less duplication</strong>: No need to recreate directory structure per language</li><li><strong>Unified workflow</strong>: Same translation process for posts and pages</li></ul><p><strong>Trade-off</strong>: Pages could use directory-based approach (out-of-the-box), but using the patch for everything maintains consistency and simplifies the mental model.</p><p><strong>See</strong>: <a href="#extending-the-patch-to-pages">Extending to Pages</a> section below for implementation.</p></div></div><h3 id="Extending-the-Patch-to-Pages">Extending the Patch to Pages</h3><p>To apply the same approach to pages, patch Hexo’s page processor:</p><p><strong>File</strong>: <code>node_modules/hexo/dist/plugins/processor/asset.js</code></p><p>Add after line 60 (after <code>data.path</code> is set):</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// i18n: Auto-inject language prefix and strip language suffix for pages</span><span class="token keyword">const</span> lang <span class="token operator">=</span> data<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span><span class="token keyword">const</span> defaultLang <span class="token operator">=</span> config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span><span class="token keyword">const</span> languages <span class="token operator">=</span> config<span class="token punctuation">.</span>language <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token string">'en'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>data<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Extract filename to check for language suffix</span>    <span class="token keyword">const</span> pathParts <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> filename <span class="token operator">=</span> pathParts<span class="token punctuation">[</span>pathParts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(md|markdown|html)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>languages<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Strip language suffix from path if present in filename</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> pathWithoutExt <span class="token operator">=</span> data<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> cleanPath <span class="token operator">=</span> pathWithoutExt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span>path <span class="token operator">=</span> cleanPath <span class="token operator">+</span> <span class="token string">'.html'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    data<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>Applying the patch</strong>:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blogpatch <span class="token parameter variable">-p0</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/patches/hexo-i18n-page-permalink.patch</code></pre><p><strong>How it works</strong>:</p><ul><li>Patches Hexo’s page processor directly</li><li>Runs during page file processing</li><li>Strips language suffix from filename (e.g., <code>index-zh-CN.md</code> → <code>index.html</code>)</li><li>Injects language prefix (e.g., <code>terms-and-conditions/index.html</code> → <code>zh-CN/terms-and-conditions/index.html</code>)</li></ul><p><strong>Example</strong>:</p><ul><li>File: <code>source/terms-and-conditions/index-zh-CN.md</code> with <code>lang: zh-CN</code></li><li>Generated URL: <code>/zh-CN/terms-and-conditions/</code> (✅ suffix stripped, prefix added)</li><li>File: <code>source/tools-ja.md</code> with <code>lang: ja</code></li><li>Generated URL: <code>/ja/tools/</code> (✅ suffix stripped, prefix added)</li></ul><h2 id="Essential-i18n-Plugins">Essential i18n Plugins</h2><p>Standard Hexo generators don’t support language-specific content. Custom plugins fill the gap:</p><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ Remove Official Plugins First</p><div class="admonition-content"><p>Uninstall Hexo's default generators to avoid conflicts:<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-generator-index hexo-generator-archive hexo-generator-category hexo-generator-tag hexo-generator-sitemap</code></pre>The i18n versions replace these completely.</p></div></div><h3 id="1-Index-Pages">1. Index Pages</h3><p><strong>Plugin</strong>: <a href="https://github.com/neoalienson/hexo-generator-i18n-index">hexo-generator-i18n-index</a></p><p>Creates separate index pages per language with sticky post support:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-i18n-index</code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p><strong>Sorting logic</strong>:</p><ol><li>Regular posts first, redirect posts (<code>original_lang_url</code>) last</li><li>Sticky/pinned posts at top</li><li>Then by date (newest first)</li></ol><p><strong>Result</strong>:</p><ul><li><code>/</code> - English posts only</li><li><code>/zh-TW/</code> - Traditional Chinese posts only</li><li><code>/zh-CN/</code> - Simplified Chinese posts only</li><li><code>/ja/</code> - Japanese posts only</li></ul><h3 id="2-Sitemap-Generation">2. Sitemap Generation</h3><p><strong>Plugin</strong>: <a href="https://github.com/neoalienson/hexo-generator-i18n-sitemap">hexo-generator-i18n-sitemap</a></p><p>Generates unified sitemap with all language versions:</p><ul><li><code>/sitemap.xml</code> - All pages across all languages</li><li><code>/sitemap.txt</code> - Simple URL list format</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja  <span class="token key atrule">changefreq</span><span class="token punctuation">:</span> monthly  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">0.6</span></code></pre><h3 id="3-Archive-Pages">3. Archive Pages</h3><p><strong>Plugin</strong>: <a href="https://github.com/neoalienson/hexo-generator-i18n-archive">hexo-generator-i18n-archive</a></p><p>Creates language-specific archives:</p><ul><li><code>/archives/</code> (English)</li><li><code>/zh-TW/archives/</code> (Traditional Chinese)</li><li><code>/ja/archives/</code> (Japanese)</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">yearly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">monthly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><h3 id="4-Category-Pages">4. Category Pages</h3><p><strong>Plugin</strong>: <a href="https://github.com/neoalienson/hexo-generator-i18n-category">hexo-generator-i18n-category</a></p><p>Generates category pages per language with translated category names:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"開發"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="5-Tag-Pages">5. Tag Pages</h3><p><strong>Plugin</strong>: <a href="https://github.com/neoalienson/hexo-generator-i18n-tag">hexo-generator-i18n-tag</a></p><p>Creates tag pages filtered by language:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span></code></pre><h3 id="6-Canonical-Tags">6. Canonical Tags</h3><p><strong>Plugin</strong>: <a href="https://github.com/neoalienson/hexo-plugin-i18n-canonical">hexo-plugin-i18n-canonical</a></p><p>Prevents duplicate content penalties by adding proper canonical tags.</p><p><strong>The Problem</strong>: Search engines see translated pages as duplicate content:</p><ul><li><code>/2025/10/Article-Title/</code> (English)</li><li><code>/zh-TW/2025/10/Article-Title/</code> (Chinese)</li><li><code>/ja/2025/10/Article-Title/</code> (Japanese)</li></ul><p>Without canonical tags, Google may:</p><ul><li>Split ranking signals across translations</li><li>Index wrong language version</li><li>Penalize site for “duplicate” content</li></ul><p><strong>The Solution</strong>: Canonical tags tell search engines which version is primary:</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment"><!-- All language versions point to English as canonical --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canonical<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://neo01.com/2025/10/Article-Title/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">default_lang</span><span class="token punctuation">:</span> en  <span class="token comment"># Primary language</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja</code></pre><p><strong>Result</strong>: Search engines understand these are translations, not duplicates, preserving SEO value.</p><h2 id="Performance-Optimization-with-Fragment-Caching">Performance Optimization with Fragment Caching</h2><h3 id="The-Multilingual-Performance-Challenge">The Multilingual Performance Challenge</h3><p>This website supports 4 languages (en, zh-TW, zh-CN, ja), which means:</p><ul><li><strong>4× pages generated</strong>: Every post creates 4 index entries, 4 archive pages, 4 category pages, 4 tag pages</li><li><strong>4× template rendering</strong>: Header, footer, sidebar rendered 4 times per page type</li><li><strong>4× memory usage</strong>: Each language maintains separate page objects</li><li><strong>Exponential growth</strong>: 100 posts × 4 languages = 400+ pages before counting archives/categories/tags</li></ul><p><strong>General rule</strong>: For N languages, expect N× build time and memory usage without optimization.</p><h3 id="The-Fragment-Caching-Solution">The Fragment Caching Solution</h3><p>Hexo’s <code>fragment_cache()</code> function saves rendered template content and reuses it across pages. Critical for components that don’t change per page.</p><p><strong>Key principle</strong>: Cache per language, not globally.</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>relative_link<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span></code></pre><p><strong>Cache key strategy</strong>:</p><ul><li><code>header-en</code>, <code>header-zh-TW</code>, <code>header-zh-CN</code>, <code>header-ja</code> (4 cache entries)</li><li>Each language gets isolated cache</li><li>Reused across all pages in that language</li></ul><h3 id="What-to-Cache">What to Cache</h3><p><strong>Header</strong> (<code>layout.ejs</code>):</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>Navigation, language selector, logo</li><li>4 cache entries (one per language)</li><li>Reused across ~100+ pages per language</li></ul><p><strong>Sidebar</strong> (<code>sidebar.ejs</code>):</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'sidebar-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/sidebar-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>Social links, structure</li><li>Widgets cached separately per language</li></ul><p><strong>Widgets</strong> (<code>sidebar-widgets.ejs</code>):</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'widget-recent_posts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'widget/recent_posts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>Recent posts filtered by language in template:</li></ul><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%_</span><span class="token language-javascript"> site<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span> <span class="token operator">===</span> currentLang<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">_%></span></span></code></pre><ul><li>Same 5 posts shown across all pages in that language</li></ul><p><strong>Footer</strong> (<code>footer.ejs</code>):</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'footer-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-dynamic'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>Static: Copyright, credits (cached)</li><li>Dynamic: QR codes (page-specific)</li></ul><p><strong>Scripts</strong> (<code>layout.ejs</code>):</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'scripts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/scripts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>JavaScript includes cached per language</li></ul><h3 id="Configuration-Requirement">Configuration Requirement</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">relative_link</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># Required for safe caching</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ Relative Links Break Caching</p><div class="admonition-content"><p>Fragment caching captures page objects. With <code>relative_link: true</code>, cached content contains wrong paths. Always use absolute paths with caching enabled.</p></div></div><h3 id="Client-Side-Language-Selector">Client-Side Language Selector</h3><p>Server-side language switching breaks with fragment caching. Solution: JavaScript-based URL generation.</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// Detect current path</span><span class="token keyword">var</span> currentPath <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">;</span><span class="token keyword">var</span> basePath <span class="token operator">=</span> currentPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\/[a-z]&#123;2&#125;(-[A-Z]&#123;2&#125;)?\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Generate language-specific URLs</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'[data-lang]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> targetLang <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'data-lang'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> targetUrl <span class="token operator">=</span> targetLang <span class="token operator">===</span> <span class="token string">'en'</span> <span class="token operator">?</span> basePath <span class="token operator">:</span> <span class="token string">'/'</span> <span class="token operator">+</span> targetLang <span class="token operator">+</span> basePath<span class="token punctuation">;</span>    link<span class="token punctuation">.</span>href <span class="token operator">=</span> targetUrl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>Benefits</strong>:</p><ul><li>Language selector HTML cached per language</li><li>URLs generated from real browser location</li><li>No stale page object issues</li></ul><h3 id="Performance-Impact">Performance Impact</h3><p><strong>Before optimization</strong> (this site with 4 languages):</p><ul><li>Build time: ~1 minutes for 400+ pages (4 languages × 100+ posts)</li><li>Memory usage: High template rendering overhead</li><li>Each page renders header/footer/sidebar from scratch</li></ul><p><strong>After optimization</strong>:</p><ul><li>Build time: ~40 seconds (60% reduction)</li><li>Memory usage: Significantly lower</li><li>Cache hit ratio: 80-95% per language</li></ul><p><strong>Math for this site</strong>:</p><ul><li>Without caching: 400 pages × 5 components = 2,000 renders</li><li>With caching: 20 cache entries (4 languages × 5 components) + 400 dynamic renders</li><li><strong>General formula</strong>: N cache entries per component instead of (pages × N) renders</li></ul><h2 id="Content-Management-Workflow">Content Management Workflow</h2><h3 id="Creating-New-Posts">Creating New Posts</h3><ol><li><strong>Write English version first</strong> (source of truth):</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"Article Title"</span><span class="token comment"># Creates: source/_posts/Article-Title.md</span></code></pre><ol start="2"><li><strong>Add language metadata</strong>:</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Article Title"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"Compelling summary in English"</span><span class="token punctuation">---</span></code></pre><ol start="3"><li><strong>Create translations</strong> with language suffix:</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Use language suffix in filename</span><span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-TW.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-CN.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-ja.md</code></pre><ol start="4"><li><strong>Update translation metadata</strong> (no permalink needed):</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"文章標題"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW  <span class="token comment"># Patch auto-generates: /zh-TW/2025/10/Article-Title/</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"繁體中文摘要"</span><span class="token punctuation">---</span></code></pre><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 Automatic URL Generation</p><div class="admonition-content"><p>With the patch applied:</p><ul><li><code>Article-Title-zh-TW.md</code> → <code>/zh-TW/2025/10/Article-Title/</code></li><li><code>Article-Title-ja.md</code> → <code>/ja/2025/10/Article-Title/</code></li><li>Language suffix automatically stripped from URLs</li><li>No manual <code>permalink</code> configuration needed</li></ul></div></div><h3 id="Handling-Untranslated-Content">Handling Untranslated Content</h3><p>For content available in only one language, use <code>original_lang_url</code>:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"CISP 認證"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW<span class="token key atrule">permalink</span><span class="token punctuation">:</span> /zh<span class="token punctuation">-</span>TW/2025/10/cisp<span class="token punctuation">-</span>certification/<span class="token key atrule">categories</span><span class="token punctuation">:</span> Cybersecurity<span class="token key atrule">original_lang_url</span><span class="token punctuation">:</span> /zh<span class="token punctuation">-</span>CN/2025/10/cisp<span class="token punctuation">-</span>certification/<span class="token punctuation">---</span></code></pre><p>This displays a redirect notice instead of content, directing readers to the available language version.</p><h2 id="Resource-Management">Resource Management</h2><h3 id="Images-and-Assets">Images and Assets</h3><p><strong>English posts</strong>: Use relative paths</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">Diagram</span>](<span class="token url">diagram.png</span>)</span></code></pre><p><strong>Translated posts</strong>: Use absolute paths to English assets</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">圖表</span>](<span class="token url">/2025/10/Article-Title/diagram.png</span>)</span></code></pre><p><strong>Benefits</strong>:</p><ul><li>No asset duplication</li><li>Single source of truth</li><li>Easier maintenance</li></ul><h3 id="Internal-Links">Internal Links</h3><p>Always use absolute paths with language prefix:</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token comment"><!-- English --></span><span class="token url">[<span class="token content">Tools</span>](<span class="token url">/tools/</span>)</span><span class="token url">[<span class="token content">Previous Post</span>](<span class="token url">/2025/09/Previous-Article/</span>)</span><span class="token comment"><!-- Traditional Chinese --></span><span class="token url">[<span class="token content">工具</span>](<span class="token url">/zh-TW/tools/</span>)</span><span class="token url">[<span class="token content">上一篇文章</span>](<span class="token url">/zh-TW/2025/09/Previous-Article/</span>)</span></code></pre><h2 id="SEO-Considerations">SEO Considerations</h2><h3 id="Excerpt-Management">Excerpt Management</h3><p>Each language has different character density:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt_length</span><span class="token punctuation">:</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token number">100</span></code></pre><p>Always provide manual excerpts in front matter for better control:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"Master multilingual content management in Hexo with custom plugins."</span></code></pre><h3 id="Category-Translation">Category Translation</h3><p>Keep category keys in English, translate display names:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"開發"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="Tags">Tags</h3><p><strong>Always use English tags</strong> regardless of content language:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo  <span class="token punctuation">-</span> i18n  <span class="token punctuation">-</span> Static Site</code></pre><p>This ensures consistent tag pages across languages.</p><h2 id="Additional-Performance-Tips">Additional Performance Tips</h2><h3 id="Disable-Plugins-During-Development">Disable Plugins During Development</h3><p>Many i18n plugins can be disabled during local preview to speed up development:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># Disable for preview</span>  <span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># Disable for preview</span>  <span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># Disable for preview</span>  <span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># Disable for preview</span>  <span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># Disable for preview</span></code></pre><p><strong>Enable before deployment</strong>:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Set enable: true for all plugins before deploying</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo generate</code></pre><p><strong>Benefits</strong>:</p><ul><li>Faster local builds (seconds vs minutes)</li><li>Quicker iteration during content creation</li><li>Full functionality only when needed for production</li></ul><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 Development Workflow</p><div class="admonition-content"><p>Keep plugins disabled in <code>_config.yml</code> for daily work. Enable them only in CI/CD pipeline or before manual deployment.</p></div></div><h2 id="Troubleshooting">Troubleshooting</h2><h3 id="Wrong-Language-Content-Appears">Wrong Language Content Appears</h3><p><strong>Cause</strong>: Fragment cache not using language-specific keys</p><p><strong>Solution</strong>: Verify cache keys include <code>page.lang</code>:</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'component-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/component'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><h3 id="Language-Selector-Shows-404">Language Selector Shows 404</h3><p><strong>Cause</strong>: Server-side path detection with fragment caching</p><p><strong>Solution</strong>: Implement client-side URL generation (see above)</p><h3 id="Build-Performance-Degraded">Build Performance Degraded</h3><p><strong>Cause</strong>: Caching disabled or <code>relative_link: true</code></p><p><strong>Solution</strong>:</p><ol><li>Set <code>relative_link: false</code></li><li>Clear cache: <code>hexo clean</code></li><li>Regenerate: <code>hexo generate</code></li></ol><h3 id="Translations-Not-Appearing">Translations Not Appearing</h3><p><strong>Cause</strong>: Missing <code>lang</code> metadata or incorrect permalink</p><p><strong>Solution</strong>: Verify front matter includes:</p><ul><li><code>lang: zh-TW</code> (or appropriate language code)</li><li><code>permalink: /zh-TW/YYYY/MM/slug/</code></li></ul><h2 id="Conclusion">Conclusion</h2><p>Building a multilingual Hexo blog requires custom plugins and careful optimization, but the result is a fast, SEO-friendly site that serves global audiences. The key insights:</p><ul><li><strong>Separate concerns</strong>: Posts centralized, pages directory-based</li><li><strong>Cache aggressively</strong>: Fragment caching per language reduces build time by 60%</li><li><strong>Client-side enhancement</strong>: JavaScript handles dynamic elements without breaking caching</li><li><strong>Consistent structure</strong>: English as source of truth, translations follow established patterns</li></ul><p>This implementation powers a blog with 400+ pages across 4 languages, building in under 2 minutes while maintaining excellent performance and SEO.</p><p>The future of static site generation is multilingual, and with the right architecture, Hexo can deliver world-class results.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">Master multilingual content management in Hexo with custom plugins, URL strategies, and performance optimization through fragment caching.</summary>
    
    
    
    <category term="Development" scheme="https://neo01.com/categories/Development/"/>
    
    
    <category term="Hexo" scheme="https://neo01.com/tags/Hexo/"/>
    
    <category term="i18n" scheme="https://neo01.com/tags/i18n/"/>
    
    <category term="Static Site" scheme="https://neo01.com/tags/Static-Site/"/>
    
  </entry>
  
  <entry>
    <title>在 Hexo 中啟用 i18n：多語言部落格完整指南</title>
    <link href="https://neo01.com/zh-TW/2025/10/Enabling-i18n-in-Hexo/"/>
    <id>https://neo01.com/zh-TW/2025/10/Enabling-i18n-in-Hexo/</id>
    <published>2025-10-29T16:00:00.000Z</published>
    <updated>2025-10-30T07:01:40.045Z</updated>
    
    <content type="html"><![CDATA[<p>建立多語言部落格不僅僅是翻譯內容——而是在維持效能與 SEO 的同時，創造跨語言的無縫體驗。本指南將完整介紹本網站使用的 i18n 實作方式，從 URL 結構到快取策略。</p><h2 id="什麼是-Hexo？">什麼是 Hexo？</h2><p><a href="https://hexo.io/">Hexo</a> 是一個快速、簡單且強大的靜態網站產生器，基於 Node.js 建構。它能將 Markdown 檔案轉換為完整的網站，具備以下特點：</p><ul><li><strong>閃電般的生成速度</strong>：數秒內處理數百個檔案</li><li><strong>Markdown 支援</strong>：使用純文字格式化撰寫內容</li><li><strong>可擴充插件</strong>：豐富的生態系統提供額外功能</li><li><strong>主題系統</strong>：可自訂的模板與版面配置</li><li><strong>Git 友善</strong>：對整個網站進行版本控制</li></ul><p><strong>適合用於</strong>：</p><ul><li>包含程式碼範例的技術部落格</li><li>文件網站</li><li>個人作品集</li><li>多語言內容（需適當設定）</li></ul><p><strong>安裝方式</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-clihexo init my-blog<span class="token builtin class-name">cd</span> my-blog<span class="token function">npm</span> <span class="token function">install</span>hexo server</code></pre><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📌 版本說明</p><div class="admonition-content"><p>本指南基於 <strong>Hexo 8.1.0 或更高版本</strong>。永久連結行為與過濾器鉤子在較早版本中可能有所不同。</p></div></div><h2 id="Hexo-i18n-的挑戰">Hexo i18n 的挑戰</h2><h3 id="Hexo-提供的功能">Hexo 提供的功能</h3><p>Hexo 具備基本的 i18n 支援，但<strong>僅限於主題翻譯</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># 從 URL 路徑偵測語言</span></code></pre><p><strong>語言檔案</strong>（主題翻譯）：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># themes/your-theme/languages/en.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> Home  <span class="token key atrule">archives</span><span class="token punctuation">:</span> Archives  <span class="token comment"># themes/your-theme/languages/zh-TW.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> 首頁  <span class="token key atrule">archives</span><span class="token punctuation">:</span> 歸檔</code></pre><p><strong>模板</strong>使用輔助函式：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'menu.home'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>  <span class="token comment"><!-- 輸出：Home 或 首頁 --></span></code></pre><p><strong>路徑偵測</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># 從第一個 URL 區段偵測語言</span></code></pre><p>範例：</p><ul><li><code>/index.html</code> → <code>en</code>（預設）</li><li><code>/zh-tw/index.html</code> → <code>zh-tw</code></li><li><code>/archives/index.html</code> → <code>en</code>（未被偵測為語言）</li></ul><h3 id="問題所在">問題所在</h3><p>Hexo 原生的 i18n <strong>僅翻譯 UI 文字</strong>，不包含內容：</p><p><strong>❌ 無內容過濾</strong>：</p><ul><li>首頁顯示所有文章，不論語言</li><li>歸檔頁面混合英文與中文文章</li><li>分類/標籤不依語言過濾</li></ul><p><strong>❌ 無語言專屬產生器</strong>：</p><ul><li><code>/archives/</code> 顯示所有語言的文章</li><li><code>/categories/Development/</code> 混合所有語言版本</li><li>無法單獨產生 <code>/zh-TW/archives/</code></li></ul><p><strong>❌ 無 SEO 支援</strong>：</p><ul><li>翻譯版本無 canonical 標籤</li><li>無語言專屬的網站地圖</li><li>搜尋引擎視為重複內容</li></ul><p><strong>❌ 文章需要變通方法</strong>（在 Hexo 8.1.0 測試）：</p><ul><li>Hexo 的永久連結系統在任何過濾器攔截前就套用預設模式（<code>:title/</code>）</li><li><code>post_permalink</code> 過濾器僅在 <code>__permalink</code> 已從 front matter 設定時執行</li><li>處理器在檔案讀取時將 <code>permalink</code> 轉換為 <code>__permalink</code>，對自訂邏輯來說太早</li><li>虛擬 <code>path</code> 屬性在生成開始後無法修改</li><li><strong>解決方案</strong>：修補 Hexo 的 <code>post_permalink.js</code> 過濾器以自動注入語言前綴並移除語言後綴</li></ul><h3 id="需要什麼">需要什麼</h3><p>建立真正的多語言部落格需要：</p><ul><li>所有內容類型的語言專屬 URL</li><li>每種語言的獨立首頁/歸檔/分類/標籤頁面</li><li>包含所有語言的適當網站地圖生成</li><li>Canonical 標籤以防止重複內容懲罰</li><li>效能優化以處理多種語言（本網站支援 4 種：en、zh-TW、zh-CN、ja）</li></ul><h2 id="URL-結構策略">URL 結構策略</h2><h3 id="文章與頁面：不同的方法">文章與頁面：不同的方法</h3><p><strong>部落格文章</strong>具備自動語言處理：</p><ul><li>可組織在任何位置：<code>source/_posts/</code>、<code>source/zh-TW/_posts/</code> 等</li><li>使用檔名後綴慣例：<code>Article-Title-ja.md</code>、<code>Article-Title-zh-TW.md</code></li><li>語言由 front matter 中的 <code>lang</code> 欄位識別</li><li><strong>修補程式自動產生</strong>帶語言前綴的 URL，不重複後綴</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"文章標題"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token punctuation">---</span></code></pre><p><strong>結果</strong>：<code>Article-Title-zh-TW.md</code> → <code>/zh-TW/2025/10/Article-Title/</code>（後綴已移除）</p><p><strong>頁面</strong>使用基於目錄的組織方式：</p><ul><li>英文：<code>source/tools/index.md</code> → <code>/tools/</code></li><li>中文：<code>source/zh-TW/tools/index.md</code> → <code>/zh-TW/tools/</code></li><li>日文：<code>source/ja/tools/index.md</code> → <code>/ja/tools/</code></li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 工具<span class="token key atrule">layout</span><span class="token punctuation">:</span> tools<span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW<span class="token punctuation">---</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 文章需要 Hexo 核心修補程式</p><div class="admonition-content"><p><strong>為何文章需要修補程式</strong>：文章使用 <code>post_permalink</code> 過濾器，在語言偵測前套用模式。頁面使用不同的處理器，直接遵循目錄結構。</p><p><strong>問題</strong>：Hexo 的永久連結系統深度整合到文章處理器中：</p><ol><li>處理器讀取檔案並將 <code>permalink</code> 轉換為 <code>__permalink</code></li><li>預設永久連結模式（<code>:title/</code>）立即套用</li><li><code>post_permalink</code> 過濾器僅在 <code>__permalink</code> 存在時執行</li><li>虛擬 <code>path</code> 屬性從過濾器計算，無法修改</li></ol><p><strong>解決方案</strong>：修補 <code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code> 以：</p><ul><li>從文章資料提取 <code>lang</code> 欄位</li><li>從 slug 移除 <code>-{lang}</code> 後綴（例如 <code>Article-Title-ja</code> → <code>Article-Title</code>）</li><li>為非預設語言自動注入 <code>/{lang}/</code> 前綴</li><li>處理手動與自動產生的永久連結</li></ul><p><strong>為何頁面不需要修補程式</strong>：頁面使用基於目錄的組織方式，Hexo 原生的 <code>i18n_dir: :lang</code> 可自動處理。修補程式僅影響文章處理。</p><p><strong>參見</strong>：下方的 <a href="#hexo-%E6%A0%B8%E5%BF%83%E4%BF%AE%E8%A3%9C%E7%A8%8B%E5%BC%8F">Hexo 核心修補程式</a> 章節以了解實作方式。</p></div></div><h3 id="設定">設定</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>title/</code></pre><h2 id="Hexo-核心修補程式">Hexo 核心修補程式</h2><h3 id="自動永久連結解決方案">自動永久連結解決方案</h3><p>為了消除手動永久連結設定，修補 Hexo 的核心永久連結過濾器：</p><p><strong>檔案</strong>：<code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">postPermalinkFilter</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 提取語言並清理 slug</span>  <span class="token keyword">const</span> lang <span class="token operator">=</span> data<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> defaultLang <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>    <span class="token comment">// 如果存在，從 slug 移除語言後綴</span>  <span class="token keyword">let</span> cleanSlug <span class="token operator">=</span> data<span class="token punctuation">.</span>slug<span class="token punctuation">;</span>  <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>cleanSlug<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    cleanSlug <span class="token operator">=</span> cleanSlug<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> data<span class="token punctuation">.</span>id<span class="token punctuation">,</span>    <span class="token literal-property property">title</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>  <span class="token comment">// 使用清理後的 slug</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>   <span class="token comment">// 使用清理後的 slug</span>    <span class="token literal-property property">post_title</span><span class="token operator">:</span> data<span class="token punctuation">.</span>title<span class="token punctuation">,</span>    <span class="token literal-property property">year</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'MM'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'DD'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 處理手動永久連結</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 為非預設語言注入語言前綴</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> permalink<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token comment">// 處理自動產生的永久連結</span>  <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 為非預設語言注入語言前綴</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> permalink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="為何修補並非理想做法">為何修補並非理想做法</h3><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 修補的缺點</p><div class="admonition-content"><p><strong>維護負擔</strong>：</p><ul><li>每次 Hexo 升級後都會失效</li><li>需要在 <code>npm install</code> 後重新套用</li><li>可能與未來的 Hexo 變更衝突</li><li>團隊成員必須記得套用修補程式</li></ul><p><strong>脆弱性</strong>：</p><ul><li>Hexo 的內部結構可能改變</li><li>修補檔案格式很脆弱</li><li>無法保證跨版本相容性</li><li>修改核心後除錯變得更困難</li></ul><p><strong>更好的方法</strong>：向 Hexo 維護者提議此功能</p></div></div><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 貢獻開源專案</p><div class="admonition-content"><p><strong>與其修補，不如考慮</strong>：</p><ol><li><strong>開啟 GitHub issue</strong>：描述 i18n permalink 使用案例</li><li><strong>提議解決方案</strong>：分享您的修補程式作為起點</li><li><strong>提交 pull request</strong>：向上游貢獻此功能</li><li><strong>優點</strong>：<ul><li>功能由 Hexo 團隊維護</li><li>所有人都能開箱即用</li><li>無修補維護負擔</li><li>社群測試與改進</li></ul></li></ol><p><strong>Hexo 儲存庫</strong>：<a href="https://github.com/hexojs/hexo">hexojs/hexo</a></p><p><strong>在此之前</strong>：將修補程式作為臨時解決方案，但計劃在官方支援存在後遷移。</p></div></div><h3 id="套用修補程式">套用修補程式</h3><p><strong>選項 1：手動修補</strong>（<code>npm install</code> 後需重新套用）：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blogpatch <span class="token parameter variable">-p0</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/patches/hexo-i18n-post-permalink.patch</code></pre><p><strong>選項 2：安裝後腳本</strong>（自動）：</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token comment">// package.json</span><span class="token punctuation">&#123;</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"postinstall"</span><span class="token operator">:</span> <span class="token string">"patch -p0 &lt; ../patches/hexo-i18n-post-permalink.patch || true"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>修補檔案</strong>：</p><ul><li><code>patches/hexo-i18n-post-permalink.patch</code> - 用於部落格文章</li><li><code>patches/hexo-i18n-page-permalink.patch</code> - 用於頁面（選用）</li></ul><h3 id="運作方式">運作方式</h3><p><strong>修補前</strong>：</p><ul><li>檔名：<code>Tools-Games-ja.md</code></li><li>產生的 URL：<code>/ja/2025/10/Tools-Games-ja/</code> ❌（後綴重複）</li></ul><p><strong>修補後</strong>：</p><ul><li>檔名：<code>Tools-Games-ja.md</code></li><li>產生的 URL：<code>/ja/2025/10/Tools-Games/</code> ✅（後綴已移除）</li></ul><p><strong>主要功能</strong>：</p><ol><li><strong>語言偵測</strong>：從 front matter 讀取 <code>lang</code> 欄位</li><li><strong>後綴移除</strong>：從 slug 移除 <code>-ja</code>、<code>-zh-TW</code>、<code>-zh-CN</code></li><li><strong>前綴注入</strong>：為非預設語言新增 <code>/{lang}/</code></li><li><strong>手動覆寫</strong>：遵循 front matter 中明確的 <code>permalink</code></li></ol><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 檔名慣例</p><div class="admonition-content"><p>在檔名中使用語言後綴以便組織：</p><ul><li><code>Article-Title.md</code>（英文）</li><li><code>Article-Title-zh-TW.md</code>（繁體中文）</li><li><code>Article-Title-zh-CN.md</code>（簡體中文）</li><li><code>Article-Title-ja.md</code>（日文）</li></ul><p>修補程式會自動從 URL 移除後綴。</p></div></div><h3 id="也能修補頁面嗎？">也能修補頁面嗎？</h3><p>技術上可以，但沒必要。頁面的基於目錄方法：</p><ul><li><strong>開箱即用</strong>：Hexo 原生的 <code>i18n_dir: :lang</code> 可處理</li><li><strong>更清晰的組織</strong>：語言結構在檔案系統中可見</li><li><strong>更易維護</strong>：不需要檔名後綴慣例</li><li><strong>無修補維護負擔</strong>：<code>npm install</code> 後仍可存活</li></ul><p><strong>最佳實踐</strong>：對文章使用修補程式（帶日期的動態內容），對頁面使用目錄結構（如關於、工具等靜態內容）。</p><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📋 本網站的方法</p><div class="admonition-content"><p>本網站對<strong>文章和頁面都使用修補方法</strong>（而非頁面的基於目錄方法）：</p><p><strong>為何集中所有內容？</strong></p><ul><li><strong>一致性</strong>：所有內容類型使用相同的檔名後綴慣例</li><li><strong>更簡單的結構</strong>：所有內容在標準位置（<code>source/_posts/</code>、<code>source/tools/</code>）</li><li><strong>更易重構</strong>：移動檔案不會破壞語言偵測</li><li><strong>減少重複</strong>：無需為每種語言重建目錄結構</li><li><strong>統一工作流程</strong>：文章和頁面使用相同的翻譯流程</li></ul><p><strong>取捨</strong>：頁面可使用基於目錄的方法（開箱即用），但對所有內容使用修補程式可維持一致性並簡化心智模型。</p><p><strong>參見</strong>：下方的<a href="#%E5%B0%87%E4%BF%AE%E8%A3%9C%E7%A8%8B%E5%BC%8F%E6%93%B4%E5%B1%95%E5%88%B0%E9%A0%81%E9%9D%A2">將修補程式擴展到頁面</a>章節以了解實作方式。</p></div></div><h3 id="將修補程式擴展到頁面">將修補程式擴展到頁面</h3><p>要對頁面套用相同方法，修補 Hexo 的頁面處理器：</p><p><strong>檔案</strong>：<code>node_modules/hexo/dist/plugins/processor/asset.js</code></p><p>在第 60 行後新增（在 <code>data.path</code> 設定後）：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// i18n: 為頁面自動注入語言前綴並移除語言後綴</span><span class="token keyword">const</span> lang <span class="token operator">=</span> data<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span><span class="token keyword">const</span> defaultLang <span class="token operator">=</span> config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span><span class="token keyword">const</span> languages <span class="token operator">=</span> config<span class="token punctuation">.</span>language <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token string">'en'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>data<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 提取檔名以檢查語言後綴</span>    <span class="token keyword">const</span> pathParts <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> filename <span class="token operator">=</span> pathParts<span class="token punctuation">[</span>pathParts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(md|markdown|html)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>languages<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 如果檔名中存在語言後綴，從路徑移除</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> pathWithoutExt <span class="token operator">=</span> data<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> cleanPath <span class="token operator">=</span> pathWithoutExt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span>path <span class="token operator">=</span> cleanPath <span class="token operator">+</span> <span class="token string">'.html'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    data<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>套用修補程式</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blogpatch <span class="token parameter variable">-p0</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/patches/hexo-i18n-page-permalink.patch</code></pre><p><strong>運作方式</strong>：</p><ul><li>直接修補 Hexo 的頁面處理器</li><li>在頁面檔案處理期間執行</li><li>從檔名移除語言後綴（例如 <code>index-zh-CN.md</code> → <code>index.html</code>）</li><li>注入語言前綴（例如 <code>terms-and-conditions/index.html</code> → <code>zh-CN/terms-and-conditions/index.html</code>）</li></ul><p><strong>範例</strong>：</p><ul><li>檔案：<code>source/terms-and-conditions/index-zh-CN.md</code> 帶 <code>lang: zh-CN</code></li><li>產生的 URL：<code>/zh-CN/terms-and-conditions/</code>（✅ 後綴已移除，前綴已新增）</li><li>檔案：<code>source/tools-ja.md</code> 帶 <code>lang: ja</code></li><li>產生的 URL：<code>/ja/tools/</code>（✅ 後綴已移除，前綴已新增）</li></ul><h2 id="必要的-i18n-插件">必要的 i18n 插件</h2><p>標準的 Hexo 產生器不支援語言專屬內容。自訂插件填補了這個空缺：</p><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 先移除官方插件</p><div class="admonition-content"><p>解除安裝 Hexo 的預設產生器以避免衝突：<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-generator-index hexo-generator-archive hexo-generator-category hexo-generator-tag hexo-generator-sitemap</code></pre>i18n 版本會完全取代這些插件。</p></div></div><h3 id="1-首頁">1. 首頁</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-index">hexo-generator-i18n-index</a></p><p>為每種語言建立獨立的首頁，支援置頂文章：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-i18n-index</code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p><strong>排序邏輯</strong>：</p><ol><li>一般文章在前，重導向文章（<code>original_lang_url</code>）在後</li><li>置頂文章在最上方</li><li>然後依日期排序（最新的在前）</li></ol><p><strong>結果</strong>：</p><ul><li><code>/</code> - 僅英文文章</li><li><code>/zh-TW/</code> - 僅繁體中文文章</li><li><code>/zh-CN/</code> - 僅簡體中文文章</li><li><code>/ja/</code> - 僅日文文章</li></ul><h3 id="2-網站地圖生成">2. 網站地圖生成</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-sitemap">hexo-generator-i18n-sitemap</a></p><p>產生包含所有語言版本的統一網站地圖：</p><ul><li><code>/sitemap.xml</code> - 所有語言的所有頁面</li><li><code>/sitemap.txt</code> - 簡單的 URL 列表格式</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja  <span class="token key atrule">changefreq</span><span class="token punctuation">:</span> monthly  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">0.6</span></code></pre><h3 id="3-歸檔頁面">3. 歸檔頁面</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-archive">hexo-generator-i18n-archive</a></p><p>建立語言專屬的歸檔頁面：</p><ul><li><code>/archives/</code>（英文）</li><li><code>/zh-TW/archives/</code>（繁體中文）</li><li><code>/ja/archives/</code>（日文）</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">yearly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">monthly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><h3 id="4-分類頁面">4. 分類頁面</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-category">hexo-generator-i18n-category</a></p><p>為每種語言產生分類頁面，並翻譯分類名稱：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"開發"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="5-標籤頁面">5. 標籤頁面</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-tag">hexo-generator-i18n-tag</a></p><p>建立依語言過濾的標籤頁面：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span></code></pre><h3 id="6-Canonical-標籤">6. Canonical 標籤</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-plugin-i18n-canonical">hexo-plugin-i18n-canonical</a></p><p>透過新增適當的 canonical 標籤來防止重複內容懲罰。</p><p><strong>問題</strong>：搜尋引擎將翻譯頁面視為重複內容：</p><ul><li><code>/2025/10/Article-Title/</code>（英文）</li><li><code>/zh-TW/2025/10/Article-Title/</code>（中文）</li><li><code>/ja/2025/10/Article-Title/</code>（日文）</li></ul><p>沒有 canonical 標籤，Google 可能會：</p><ul><li>在翻譯版本間分散排名訊號</li><li>索引錯誤的語言版本</li><li>因「重複」內容而懲罰網站</li></ul><p><strong>解決方案</strong>：Canonical 標籤告訴搜尋引擎哪個版本是主要版本：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment"><!-- 所有語言版本都指向英文作為 canonical --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canonical<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://neo01.com/2025/10/Article-Title/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">default_lang</span><span class="token punctuation">:</span> en  <span class="token comment"># 主要語言</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja</code></pre><p><strong>結果</strong>：搜尋引擎理解這些是翻譯版本而非重複內容，保留 SEO 價值。</p><h2 id="透過片段快取優化效能">透過片段快取優化效能</h2><h3 id="多語言效能挑戰">多語言效能挑戰</h3><p>本網站支援 4 種語言（en、zh-TW、zh-CN、ja），這意味著：</p><ul><li><strong>4× 頁面生成</strong>：每篇文章建立 4 個首頁條目、4 個歸檔頁面、4 個分類頁面、4 個標籤頁面</li><li><strong>4× 模板渲染</strong>：每種頁面類型的頁首、頁尾、側邊欄渲染 4 次</li><li><strong>4× 記憶體使用</strong>：每種語言維護獨立的頁面物件</li><li><strong>指數成長</strong>：100 篇文章 × 4 種語言 = 400+ 頁面（尚未計算歸檔/分類/標籤）</li></ul><p><strong>一般規則</strong>：對於 N 種語言，在沒有優化的情況下，預期 N× 建置時間與記憶體使用量。</p><h3 id="片段快取解決方案">片段快取解決方案</h3><p>Hexo 的 <code>fragment_cache()</code> 函式儲存已渲染的模板內容並在頁面間重複使用。對於不會因頁面而改變的元件至關重要。</p><p><strong>關鍵原則</strong>：依語言快取，而非全域快取。</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>relative_link<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span></code></pre><p><strong>快取鍵策略</strong>：</p><ul><li><code>header-en</code>、<code>header-zh-TW</code>、<code>header-zh-CN</code>、<code>header-ja</code>（4 個快取條目）</li><li>每種語言獲得隔離的快取</li><li>在該語言的所有頁面間重複使用</li></ul><h3 id="要快取什麼">要快取什麼</h3><p><strong>頁首</strong>（<code>layout.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>導覽、語言選擇器、標誌</li><li>4 個快取條目（每種語言一個）</li><li>在每種語言的 ~100+ 頁面間重複使用</li></ul><p><strong>側邊欄</strong>（<code>sidebar.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'sidebar-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/sidebar-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>社群連結、結構</li><li>小工具依語言分別快取</li></ul><p><strong>小工具</strong>（<code>sidebar-widgets.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'widget-recent_posts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'widget/recent_posts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>最近文章在模板中依語言過濾：</li></ul><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%_</span><span class="token language-javascript"> site<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span> <span class="token operator">===</span> currentLang<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">_%></span></span></code></pre><ul><li>該語言的所有頁面顯示相同的 5 篇文章</li></ul><p><strong>頁尾</strong>（<code>footer.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'footer-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-dynamic'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>靜態：版權、致謝（已快取）</li><li>動態：QR 碼（頁面專屬）</li></ul><p><strong>腳本</strong>（<code>layout.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'scripts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/scripts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>JavaScript 引入依語言快取</li></ul><h3 id="設定需求">設定需求</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">relative_link</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 安全快取所需</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 相對連結會破壞快取</p><div class="admonition-content"><p>片段快取會捕獲頁面物件。使用 <code>relative_link: true</code> 時，快取的內容包含錯誤的路徑。啟用快取時務必使用絕對路徑。</p></div></div><h3 id="客戶端語言選擇器">客戶端語言選擇器</h3><p>伺服器端語言切換會因片段快取而失效。解決方案：基於 JavaScript 的 URL 生成。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 偵測當前路徑</span><span class="token keyword">var</span> currentPath <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">;</span><span class="token keyword">var</span> basePath <span class="token operator">=</span> currentPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token operator">^</span>\\<span class="token operator">/</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">?</span>\\<span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 產生語言專屬 URL</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'[data-lang]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> targetLang <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'data-lang'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> targetUrl <span class="token operator">=</span> targetLang <span class="token operator">===</span> <span class="token string">'en'</span> <span class="token operator">?</span> basePath <span class="token operator">:</span> <span class="token string">'/'</span> <span class="token operator">+</span> targetLang <span class="token operator">+</span> basePath<span class="token punctuation">;</span>    link<span class="token punctuation">.</span>href <span class="token operator">=</span> targetUrl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>優點</strong>：</p><ul><li>語言選擇器 HTML 依語言快取</li><li>URL 從真實瀏覽器位置生成</li><li>無過時頁面物件問題</li></ul><h3 id="效能影響">效能影響</h3><p><strong>優化前</strong>（本網站 4 種語言）：</p><ul><li>建置時間：400+ 頁面（4 種語言 × 100+ 文章）約 1 分鐘</li><li>記憶體使用：高模板渲染開銷</li><li>每個頁面從頭渲染頁首/頁尾/側邊欄</li></ul><p><strong>優化後</strong>：</p><ul><li>建置時間：約 40 秒（減少 60%）</li><li>記憶體使用：顯著降低</li><li>快取命中率：每種語言 80-95%</li></ul><p><strong>本網站的數學</strong>：</p><ul><li>無快取：400 頁面 × 5 元件 = 2,000 次渲染</li><li>有快取：20 個快取條目（4 種語言 × 5 元件）+ 400 次動態渲染</li><li><strong>一般公式</strong>：每個元件 N 個快取條目，而非（頁面 × N）次渲染</li></ul><h2 id="內容管理工作流程">內容管理工作流程</h2><h3 id="建立新文章">建立新文章</h3><ol><li><strong>先撰寫英文版本</strong>（真實來源）：</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"Article Title"</span><span class="token comment"># 建立：source/_posts/Article-Title.md</span></code></pre><ol start="2"><li><strong>新增語言中繼資料</strong>：</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Article Title"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"Compelling summary in English"</span><span class="token punctuation">---</span></code></pre><ol start="3"><li><strong>建立翻譯版本</strong>，使用語言後綴：</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在檔名中使用語言後綴</span><span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-TW.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-CN.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-ja.md</code></pre><ol start="4"><li><strong>更新翻譯中繼資料</strong>（不需要 permalink）：</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"文章標題"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW  <span class="token comment"># 修補程式自動產生：/zh-TW/2025/10/Article-Title/</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"繁體中文摘要"</span><span class="token punctuation">---</span></code></pre><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 自動 URL 生成</p><div class="admonition-content"><p>套用修補程式後：</p><ul><li><code>Article-Title-zh-TW.md</code> → <code>/zh-TW/2025/10/Article-Title/</code></li><li><code>Article-Title-ja.md</code> → <code>/ja/2025/10/Article-Title/</code></li><li>語言後綴自動從 URL 移除</li><li>不需要手動 <code>permalink</code> 設定</li></ul></div></div><h3 id="處理未翻譯的內容">處理未翻譯的內容</h3><p>對於僅提供單一語言的內容，使用 <code>original_lang_url</code>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"CISP 認證"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>TW<span class="token key atrule">permalink</span><span class="token punctuation">:</span> /zh<span class="token punctuation">-</span>TW/2025/10/cisp<span class="token punctuation">-</span>certification/<span class="token key atrule">categories</span><span class="token punctuation">:</span> Cybersecurity<span class="token key atrule">original_lang_url</span><span class="token punctuation">:</span> /zh<span class="token punctuation">-</span>CN/2025/10/cisp<span class="token punctuation">-</span>certification/<span class="token punctuation">---</span></code></pre><p>這會顯示重導向通知而非內容，引導讀者前往可用的語言版本。</p><h2 id="資源管理">資源管理</h2><h3 id="圖片與資產">圖片與資產</h3><p><strong>英文文章</strong>：使用相對路徑</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">Diagram</span>](<span class="token url">diagram.png</span>)</span></code></pre><p><strong>翻譯文章</strong>：使用絕對路徑指向英文資產</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">圖表</span>](<span class="token url">/2025/10/Article-Title/diagram.png</span>)</span></code></pre><p><strong>優點</strong>：</p><ul><li>無資產重複</li><li>單一真實來源</li><li>更易維護</li></ul><h3 id="內部連結">內部連結</h3><p>務必使用帶語言前綴的絕對路徑：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token comment"><!-- 英文 --></span><span class="token url">[<span class="token content">Tools</span>](<span class="token url">/tools/</span>)</span><span class="token url">[<span class="token content">Previous Post</span>](<span class="token url">/2025/09/Previous-Article/</span>)</span><span class="token comment"><!-- 繁體中文 --></span><span class="token url">[<span class="token content">工具</span>](<span class="token url">/zh-TW/tools/</span>)</span><span class="token url">[<span class="token content">上一篇文章</span>](<span class="token url">/zh-TW/2025/09/Previous-Article/</span>)</span></code></pre><h2 id="SEO-考量">SEO 考量</h2><h3 id="摘要管理">摘要管理</h3><p>每種語言有不同的字元密度：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt_length</span><span class="token punctuation">:</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token number">100</span></code></pre><p>務必在 front matter 中提供手動摘要以獲得更好的控制：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"掌握 Hexo 多語言內容管理，透過自訂插件優化效能。"</span></code></pre><h3 id="分類翻譯">分類翻譯</h3><p>保持分類鍵為英文，翻譯顯示名稱：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"開發"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="標籤">標籤</h3><p><strong>無論內容語言為何，務必使用英文標籤</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo  <span class="token punctuation">-</span> i18n  <span class="token punctuation">-</span> Static Site</code></pre><p>這確保跨語言的標籤頁面一致性。</p><h2 id="額外的效能技巧">額外的效能技巧</h2><h3 id="開發期間停用插件">開發期間停用插件</h3><p>許多 i18n 插件可在本地預覽期間停用以加速開發：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 預覽時停用</span>  <span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 預覽時停用</span>  <span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 預覽時停用</span>  <span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 預覽時停用</span>  <span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 預覽時停用</span></code></pre><p><strong>部署前啟用</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 部署前將所有插件的 enable 設為 true</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo generate</code></pre><p><strong>優點</strong>：</p><ul><li>更快的本地建置（秒級 vs 分鐘級）</li><li>內容建立期間更快的迭代</li><li>僅在生產環境需要時才使用完整功能</li></ul><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 開發工作流程</p><div class="admonition-content"><p>在 <code>_config.yml</code> 中保持插件停用以進行日常工作。僅在 CI/CD 管線或手動部署前啟用它們。</p></div></div><h2 id="疑難排解">疑難排解</h2><h3 id="出現錯誤語言的內容">出現錯誤語言的內容</h3><p><strong>原因</strong>：片段快取未使用語言專屬鍵</p><p><strong>解決方案</strong>：驗證快取鍵包含 <code>page.lang</code>：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'component-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/component'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><h3 id="語言選擇器顯示-404">語言選擇器顯示 404</h3><p><strong>原因</strong>：伺服器端路徑偵測與片段快取</p><p><strong>解決方案</strong>：實作客戶端 URL 生成（見上方）</p><h3 id="建置效能下降">建置效能下降</h3><p><strong>原因</strong>：快取停用或 <code>relative_link: true</code></p><p><strong>解決方案</strong>：</p><ol><li>設定 <code>relative_link: false</code></li><li>清除快取：<code>hexo clean</code></li><li>重新生成：<code>hexo generate</code></li></ol><h3 id="翻譯未出現">翻譯未出現</h3><p><strong>原因</strong>：缺少 <code>lang</code> 中繼資料或不正確的 permalink</p><p><strong>解決方案</strong>：驗證 front matter 包含：</p><ul><li><code>lang: zh-TW</code>（或適當的語言代碼）</li><li><code>permalink: /zh-TW/YYYY/MM/slug/</code></li></ul><h2 id="結論">結論</h2><p>建立多語言 Hexo 部落格需要自訂插件與仔細的優化，但結果是一個快速、SEO 友善的網站，服務全球受眾。關鍵見解：</p><ul><li><strong>分離關注點</strong>：文章集中化，頁面基於目錄</li><li><strong>積極快取</strong>：依語言的片段快取將建置時間減少 60%</li><li><strong>客戶端增強</strong>：JavaScript 處理動態元素而不破壞快取</li><li><strong>一致的結構</strong>：英文作為真實來源，翻譯遵循既定模式</li></ul><p>此實作支援一個擁有 400+ 頁面、跨 4 種語言的部落格，在 2 分鐘內建置完成，同時維持優秀的效能與 SEO。</p><p>靜態網站生成的未來是多語言的，透過正確的架構，Hexo 可以提供世界級的結果。</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">掌握 Hexo 多語言內容管理，透過自訂插件、URL 策略與片段快取優化效能。</summary>
    
    
    
    <category term="Development" scheme="https://neo01.com/categories/Development/"/>
    
    
    <category term="Hexo" scheme="https://neo01.com/tags/Hexo/"/>
    
    <category term="i18n" scheme="https://neo01.com/tags/i18n/"/>
    
    <category term="Static Site" scheme="https://neo01.com/tags/Static-Site/"/>
    
  </entry>
  
  <entry>
    <title>在 Hexo 中启用 i18n：多语言博客完整指南</title>
    <link href="https://neo01.com/zh-CN/2025/10/Enabling-i18n-in-Hexo/"/>
    <id>https://neo01.com/zh-CN/2025/10/Enabling-i18n-in-Hexo/</id>
    <published>2025-10-29T16:00:00.000Z</published>
    <updated>2025-10-30T07:01:57.347Z</updated>
    
    <content type="html"><![CDATA[<p>构建多语言博客不仅仅是翻译内容——而是在保持性能和 SEO 的同时，创造跨语言的无缝体验。本指南详细介绍了本网站使用的完整 i18n 实现，从 URL 结构到缓存策略。</p><h2 id="什么是-Hexo？">什么是 Hexo？</h2><p><a href="https://hexo.io/">Hexo</a> 是一个基于 Node.js 构建的快速、简单且强大的静态网站生成器。它将 Markdown 文件转换为完整的网站，具有以下特点：</p><ul><li><strong>闪电般的生成速度</strong>：几秒钟内生成数百个文件</li><li><strong>Markdown 支持</strong>：使用纯文本格式编写内容</li><li><strong>可扩展插件</strong>：丰富的生态系统提供额外功能</li><li><strong>主题系统</strong>：可自定义的模板和布局</li><li><strong>Git 友好</strong>：对整个站点进行版本控制</li></ul><p><strong>适用于</strong>：</p><ul><li>带有代码示例的技术博客</li><li>文档站点</li><li>个人作品集</li><li>多语言内容（需要适当设置）</li></ul><p><strong>安装</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-clihexo init my-blog<span class="token builtin class-name">cd</span> my-blog<span class="token function">npm</span> <span class="token function">install</span>hexo server</code></pre><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📌 版本说明</p><div class="admonition-content"><p>本指南基于 <strong>Hexo 8.1.0 或更高版本</strong>。早期版本的固定链接行为和过滤器钩子可能有所不同。</p></div></div><h2 id="Hexo-i18n-的挑战">Hexo i18n 的挑战</h2><h3 id="Hexo-提供的功能">Hexo 提供的功能</h3><p>Hexo 具有基本的 i18n 支持，但<strong>仅用于主题翻译</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># 从 URL 路径检测语言</span></code></pre><p><strong>语言文件</strong>（主题翻译）：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># themes/your-theme/languages/en.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> Home  <span class="token key atrule">archives</span><span class="token punctuation">:</span> Archives  <span class="token comment"># themes/your-theme/languages/zh-TW.yml</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">home</span><span class="token punctuation">:</span> 首页  <span class="token key atrule">archives</span><span class="token punctuation">:</span> 归档</code></pre><p><strong>模板</strong>使用辅助函数：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'menu.home'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>  <span class="token comment"><!-- 输出：Home 或 首页 --></span></code></pre><p><strong>路径检测</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang  <span class="token comment"># 从第一个 URL 段检测语言</span></code></pre><p>示例：</p><ul><li><code>/index.html</code> → <code>en</code>（默认）</li><li><code>/zh-tw/index.html</code> → <code>zh-tw</code></li><li><code>/archives/index.html</code> → <code>en</code>（未检测为语言）</li></ul><h3 id="存在的问题">存在的问题</h3><p>Hexo 的原生 i18n <strong>仅翻译 UI 文本</strong>，不翻译内容：</p><p><strong>❌ 无内容过滤</strong>：</p><ul><li>索引页面显示所有语言的文章</li><li>归档页面混合英文和中文文章</li><li>分类/标签不按语言过滤</li></ul><p><strong>❌ 无语言特定生成器</strong>：</p><ul><li><code>/archives/</code> 显示所有语言的文章</li><li><code>/categories/Development/</code> 混合所有语言版本</li><li>无法单独生成 <code>/zh-TW/archives/</code></li></ul><p><strong>❌ 无 SEO 支持</strong>：</p><ul><li>翻译内容没有规范标签</li><li>没有语言特定的站点地图</li><li>搜索引擎将其视为重复内容</li></ul><p><strong>❌ 文章需要变通方法</strong>（在 Hexo 8.1.0 中测试）：</p><ul><li>Hexo 的固定链接系统在任何过滤器拦截之前应用默认模式（<code>:title/</code>）</li><li><code>post_permalink</code> 过滤器仅在从前置数据设置 <code>__permalink</code> 时运行</li><li>处理器在文件读取期间将 <code>permalink</code> → <code>__permalink</code> 转换，时机太早无法自定义逻辑</li><li>虚拟 <code>path</code> 属性在生成开始后无法修改</li><li><strong>解决方案</strong>：修补 Hexo 的 <code>post_permalink.js</code> 过滤器以自动注入语言前缀并去除语言后缀</li></ul><h3 id="需要什么">需要什么</h3><p>创建真正的多语言博客需要：</p><ul><li>所有内容类型的语言特定 URL</li><li>每种语言的独立索引/归档/分类/标签页面</li><li>包含所有语言的适当站点地图生成</li><li>规范标签以防止重复内容惩罚</li><li>性能优化以处理多种语言（本站支持 4 种：en、zh-TW、zh-CN、ja）</li></ul><h2 id="URL-结构策略">URL 结构策略</h2><h3 id="文章与页面：不同的方法">文章与页面：不同的方法</h3><p><strong>博客文章</strong>具有自动语言处理：</p><ul><li>可以组织在任何位置：<code>source/_posts/</code>、<code>source/zh-TW/_posts/</code> 等</li><li>使用文件名后缀约定：<code>Article-Title-ja.md</code>、<code>Article-Title-zh-TW.md</code></li><li>通过前置数据中的 <code>lang</code> 字段识别语言</li><li><strong>补丁自动生成</strong>带语言前缀的 URL，无后缀重复</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"文章标题"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token punctuation">---</span></code></pre><p><strong>结果</strong>：<code>Article-Title-zh-CN.md</code> → <code>/zh-CN/2025/10/Article-Title/</code>（后缀已去除）</p><p><strong>页面</strong>使用基于目录的组织：</p><ul><li>英文：<code>source/tools/index.md</code> → <code>/tools/</code></li><li>中文：<code>source/zh-TW/tools/index.md</code> → <code>/zh-TW/tools/</code></li><li>日文：<code>source/ja/tools/index.md</code> → <code>/ja/tools/</code></li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 工具<span class="token key atrule">layout</span><span class="token punctuation">:</span> tools<span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN<span class="token punctuation">---</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 文章需要 Hexo 核心补丁</p><div class="admonition-content"><p><strong>为什么文章需要补丁</strong>：文章使用 <code>post_permalink</code> 过滤器，在语言检测之前应用模式。页面使用不同的处理器，直接尊重目录结构。</p><p><strong>问题</strong>：Hexo 的固定链接系统深度集成到文章处理器中：</p><ol><li>处理器读取文件并将 <code>permalink</code> → <code>__permalink</code> 转换</li><li>立即应用默认固定链接模式（<code>:title/</code>）</li><li><code>post_permalink</code> 过滤器仅在 <code>__permalink</code> 存在时运行</li><li>虚拟 <code>path</code> 属性从过滤器计算，无法修改</li></ol><p><strong>解决方案</strong>：修补 <code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code> 以：</p><ul><li>从文章数据中提取 <code>lang</code> 字段</li><li>去除 slug 中的 <code>-{lang}</code> 后缀（例如，<code>Article-Title-ja</code> → <code>Article-Title</code>）</li><li>为非默认语言自动注入 <code>/{lang}/</code> 前缀</li><li>处理手动和生成的固定链接</li></ul><p><strong>为什么页面不需要补丁</strong>：页面使用基于目录的组织，Hexo 的原生 <code>i18n_dir: :lang</code> 自动处理。补丁仅影响文章处理。</p><p><strong>参见</strong>：下面的 <a href="#hexo-%E6%A0%B8%E5%BF%83%E8%A1%A5%E4%B8%81">Hexo 核心补丁</a> 部分了解实现。</p></div></div><h3 id="配置">配置</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> en  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW  <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN  <span class="token punctuation">-</span> ja<span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>title/</code></pre><h2 id="Hexo-核心补丁">Hexo 核心补丁</h2><h3 id="自动固定链接解决方案">自动固定链接解决方案</h3><p>要消除手动固定链接配置，请修补 Hexo 的核心固定链接过滤器：</p><p><strong>文件</strong>：<code>node_modules/hexo/dist/plugins/filter/post_permalink.js</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">postPermalinkFilter</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 提取语言并清理 slug</span>  <span class="token keyword">const</span> lang <span class="token operator">=</span> data<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> defaultLang <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>    <span class="token comment">// 如果存在，从 slug 中去除语言后缀</span>  <span class="token keyword">let</span> cleanSlug <span class="token operator">=</span> data<span class="token punctuation">.</span>slug<span class="token punctuation">;</span>  <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>cleanSlug<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    cleanSlug <span class="token operator">=</span> cleanSlug<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> data<span class="token punctuation">.</span>id<span class="token punctuation">,</span>    <span class="token literal-property property">title</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>  <span class="token comment">// 使用清理后的 slug</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> cleanSlug<span class="token punctuation">,</span>   <span class="token comment">// 使用清理后的 slug</span>    <span class="token literal-property property">post_title</span><span class="token operator">:</span> data<span class="token punctuation">.</span>title<span class="token punctuation">,</span>    <span class="token literal-property property">year</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'MM'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'DD'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_month</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">i_day</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 处理手动固定链接</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>__permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 为非默认语言注入语言前缀</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> permalink<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token comment">// 处理生成的固定链接</span>  <span class="token keyword">let</span> permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>permalink<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 为非默认语言注入语言前缀</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">!==</span> defaultLang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>permalink<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> permalink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="为什么打补丁不是理想做法">为什么打补丁不是理想做法</h3><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 补丁的缺点</p><div class="admonition-content"><p><strong>维护负担</strong>：</p><ul><li>每次 Hexo 升级后都会失效</li><li>需要在 <code>npm install</code> 后重新应用</li><li>可能与未来的 Hexo 更改冲突</li><li>团队成员必须记得应用补丁</li></ul><p><strong>脆弱性</strong>：</p><ul><li>Hexo 的内部结构可能改变</li><li>补丁文件格式很脆弱</li><li>无法保证跨版本兼容性</li><li>修改核心后调试变得更困难</li></ul><p><strong>更好的方法</strong>：向 Hexo 维护者提议此功能</p></div></div><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 贡献开源项目</p><div class="admonition-content"><p><strong>与其打补丁，不如考虑</strong>：</p><ol><li><strong>开启 GitHub issue</strong>：描述 i18n permalink 使用案例</li><li><strong>提议解决方案</strong>：分享您的补丁作为起点</li><li><strong>提交 pull request</strong>：向上游贡献此功能</li><li><strong>优点</strong>：<ul><li>功能由 Hexo 团队维护</li><li>所有人都能开箱即用</li><li>无补丁维护负担</li><li>社区测试与改进</li></ul></li></ol><p><strong>Hexo 仓库</strong>：<a href="https://github.com/hexojs/hexo">hexojs/hexo</a></p><p><strong>在此之前</strong>：将补丁作为临时解决方案，但计划在官方支持存在后迁移。</p></div></div><h3 id="应用补丁">应用补丁</h3><p><strong>选项 1：手动补丁</strong>（<code>npm install</code> 后需要重新应用）：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blogpatch <span class="token parameter variable">-p0</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/patches/hexo-i18n-post-permalink.patch</code></pre><p><strong>选项 2：安装后脚本</strong>（自动）：</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token comment">// package.json</span><span class="token punctuation">&#123;</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"postinstall"</span><span class="token operator">:</span> <span class="token string">"patch -p0 &lt; ../patches/hexo-i18n-post-permalink.patch || true"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>补丁文件</strong>：</p><ul><li><code>patches/hexo-i18n-post-permalink.patch</code> - 用于博客文章</li><li><code>patches/hexo-i18n-page-permalink.patch</code> - 用于页面（可选）</li></ul><h3 id="工作原理">工作原理</h3><p><strong>补丁前</strong>：</p><ul><li>文件名：<code>Tools-Games-ja.md</code></li><li>生成的 URL：<code>/ja/2025/10/Tools-Games-ja/</code> ❌（后缀重复）</li></ul><p><strong>补丁后</strong>：</p><ul><li>文件名：<code>Tools-Games-ja.md</code></li><li>生成的 URL：<code>/ja/2025/10/Tools-Games/</code> ✅（后缀已去除）</li></ul><p><strong>关键特性</strong>：</p><ol><li><strong>语言检测</strong>：从前置数据读取 <code>lang</code> 字段</li><li><strong>后缀去除</strong>：从 slug 中移除 <code>-ja</code>、<code>-zh-TW</code>、<code>-zh-CN</code></li><li><strong>前缀注入</strong>：为非默认语言添加 <code>/{lang}/</code></li><li><strong>手动覆盖</strong>：尊重前置数据中的显式 <code>permalink</code></li></ol><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 文件名约定</p><div class="admonition-content"><p>在文件名中使用语言后缀进行组织：</p><ul><li><code>Article-Title.md</code>（英文）</li><li><code>Article-Title-zh-TW.md</code>（繁体中文）</li><li><code>Article-Title-zh-CN.md</code>（简体中文）</li><li><code>Article-Title-ja.md</code>（日文）</li></ul><p>补丁会自动从 URL 中去除后缀。</p></div></div><h3 id="能否也为页面打补丁？">能否也为页面打补丁？</h3><p>技术上可以，但没有必要。页面的基于目录的方法：</p><ul><li><strong>开箱即用</strong>：Hexo 的原生 <code>i18n_dir: :lang</code> 处理它</li><li><strong>更清晰的组织</strong>：文件系统中可见语言结构</li><li><strong>更易于维护</strong>：不需要文件名后缀约定</li><li><strong>无补丁维护负担</strong>：在 <code>npm install</code> 后无需重新应用</li></ul><p><strong>最佳实践</strong>：对文章（带有日期的动态内容）使用补丁，对页面（静态内容，如关于、工具等）使用目录结构。</p><div class="admonition info"><p class="admonition-title"><span class="mdi mdi-information-outline admonition-icon"></span>📋 本网站的方法</p><div class="admonition-content"><p>本网站对<strong>文章和页面都使用补丁方法</strong>（页面不使用基于目录的方法）：</p><p><strong>为什么集中化所有内容？</strong></p><ul><li><strong>一致性</strong>：所有内容类型的相同文件名后缀约定</li><li><strong>更简单的结构</strong>：所有内容在标准位置（<code>source/_posts/</code>、<code>source/tools/</code>）</li><li><strong>更容易重构</strong>：移动文件不会破坏语言检测</li><li><strong>更少重复</strong>：无需为每种语言重建目录结构</li><li><strong>统一工作流</strong>：文章和页面的相同翻译流程</li></ul><p><strong>权衡</strong>：页面可以使用基于目录的方法（开箱即用），但对所有内容使用补丁保持了一致性并简化了心智模型。</p><p><strong>参见</strong>：下面的 <a href="#%E6%89%A9%E5%B1%95%E8%A1%A5%E4%B8%81%E5%88%B0%E9%A1%B5%E9%9D%A2">扩展到页面</a> 部分了解实现。</p></div></div><h3 id="扩展补丁到页面">扩展补丁到页面</h3><p>要将相同的方法应用于页面，创建一个 Hexo 脚本：</p><p><strong>文件</strong>：<code>scripts/page-i18n-permalink.js</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 页面 i18n 固定链接处理器</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'before_generate'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> defaultLang <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> languages <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>language <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token string">'en'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> langPattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>languages<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>locals<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'pages'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">page</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> lang <span class="token operator">=</span> page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">;</span>        <span class="token comment">// 如果是默认语言或已有语言前缀，则跳过</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">===</span> defaultLang <span class="token operator">||</span> page<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token comment">// 从源中提取基本名称</span>    <span class="token keyword">const</span> sourceParts <span class="token operator">=</span> page<span class="token punctuation">.</span>source<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> filename <span class="token operator">=</span> sourceParts<span class="token punctuation">[</span>sourceParts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>      <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(md|markdown|html)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 如果文件名中存在，则从路径中去除语言后缀</span>    <span class="token keyword">let</span> newPath <span class="token operator">=</span> page<span class="token punctuation">.</span>path<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>langPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      newPath <span class="token operator">=</span> newPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>langPattern<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 注入语言前缀</span>    page<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>lang<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>newPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span>permalink <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> page<span class="token punctuation">.</span>path<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>工作原理</strong>：</p><ul><li>Hexo 自动从 <code>scripts/</code> 文件夹加载脚本</li><li>在网站生成之前运行</li><li>处理所有带有 <code>lang</code> 字段的页面</li><li>从文件名中去除语言后缀（例如，<code>tools-ja.md</code> → <code>tools</code>）</li><li>注入语言前缀（例如，<code>/tools/</code> → <code>/ja/tools/</code>）</li></ul><p><strong>示例</strong>：</p><ul><li>文件：<code>source/tools-ja.md</code> 带有 <code>lang: ja</code></li><li>生成的 URL：<code>/ja/tools/</code> (✅ 后缀已去除，前缀已添加)</li><li>文件：<code>source/about-zh-CN.md</code> 带有 <code>lang: zh-CN</code></li><li>生成的 URL：<code>/zh-CN/about/</code> (✅ 后缀已去除，前缀已添加)</li></ul><h2 id="必备-i18n-插件">必备 i18n 插件</h2><p>标准 Hexo 生成器不支持语言特定内容。自定义插件填补了这一空白：</p><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 首先移除官方插件</p><div class="admonition-content"><p>卸载 Hexo 的默认生成器以避免冲突：<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-generator-index hexo-generator-archive hexo-generator-category hexo-generator-tag hexo-generator-sitemap</code></pre>i18n 版本完全替代这些插件。</p></div></div><h3 id="1-索引页面">1. 索引页面</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-index">hexo-generator-i18n-index</a></p><p>创建每种语言的独立索引页面，支持置顶文章：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-i18n-index</code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p><strong>排序逻辑</strong>：</p><ol><li>常规文章在前，重定向文章（<code>original_lang_url</code>）在后</li><li>置顶/固定文章在顶部</li><li>然后按日期排序（最新的在前）</li></ol><p><strong>结果</strong>：</p><ul><li><code>/</code> - 仅英文文章</li><li><code>/zh-TW/</code> - 仅繁体中文文章</li><li><code>/zh-CN/</code> - 仅简体中文文章</li><li><code>/ja/</code> - 仅日文文章</li></ul><h3 id="2-站点地图生成">2. 站点地图生成</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-sitemap">hexo-generator-i18n-sitemap</a></p><p>生成包含所有语言版本的统一站点地图：</p><ul><li><code>/sitemap.xml</code> - 所有语言的所有页面</li><li><code>/sitemap.txt</code> - 简单 URL 列表格式</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja  <span class="token key atrule">changefreq</span><span class="token punctuation">:</span> monthly  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">0.6</span></code></pre><h3 id="3-归档页面">3. 归档页面</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-archive">hexo-generator-i18n-archive</a></p><p>创建语言特定的归档：</p><ul><li><code>/archives/</code>（英文）</li><li><code>/zh-TW/archives/</code>（繁体中文）</li><li><code>/ja/archives/</code>（日文）</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span>  <span class="token key atrule">yearly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">monthly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><h3 id="4-分类页面">4. 分类页面</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-category">hexo-generator-i18n-category</a></p><p>为每种语言生成带有翻译分类名称的分类页面：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="5-标签页面">5. 标签页面</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-generator-i18n-tag">hexo-generator-i18n-tag</a></p><p>创建按语言过滤的标签页面：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">24</span></code></pre><h3 id="6-规范标签">6. 规范标签</h3><p><strong>插件</strong>：<a href="https://github.com/neoalienson/hexo-plugin-i18n-canonical">hexo-plugin-i18n-canonical</a></p><p>通过添加适当的规范标签来防止重复内容惩罚。</p><p><strong>问题</strong>：搜索引擎将翻译页面视为重复内容：</p><ul><li><code>/2025/10/Article-Title/</code>（英文）</li><li><code>/zh-TW/2025/10/Article-Title/</code>（中文）</li><li><code>/ja/2025/10/Article-Title/</code>（日文）</li></ul><p>没有规范标签，Google 可能会：</p><ul><li>在翻译之间分散排名信号</li><li>索引错误的语言版本</li><li>因&quot;重复&quot;内容惩罚网站</li></ul><p><strong>解决方案</strong>：规范标签告诉搜索引擎哪个版本是主要版本：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment"><!-- 所有语言版本都指向英文作为规范版本 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canonical<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://neo01.com/2025/10/Article-Title/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">default_lang</span><span class="token punctuation">:</span> en  <span class="token comment"># 主要语言</span>  <span class="token key atrule">languages</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> en    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW    <span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN    <span class="token punctuation">-</span> ja</code></pre><p><strong>结果</strong>：搜索引擎理解这些是翻译，而不是重复内容，保留 SEO 价值。</p><h2 id="通过片段缓存进行性能优化">通过片段缓存进行性能优化</h2><h3 id="多语言性能挑战">多语言性能挑战</h3><p>本网站支持 4 种语言（en、zh-TW、zh-CN、ja），这意味着：</p><ul><li><strong>生成 4× 页面</strong>：每篇文章创建 4 个索引条目、4 个归档页面、4 个分类页面、4 个标签页面</li><li><strong>渲染 4× 模板</strong>：每种页面类型的页眉、页脚、侧边栏渲染 4 次</li><li><strong>使用 4× 内存</strong>：每种语言维护单独的页面对象</li><li><strong>指数增长</strong>：100 篇文章 × 4 种语言 = 400+ 页面（不包括归档/分类/标签）</li></ul><p><strong>一般规则</strong>：对于 N 种语言，在没有优化的情况下，预计构建时间和内存使用量为 N×。</p><h3 id="片段缓存解决方案">片段缓存解决方案</h3><p>Hexo 的 <code>fragment_cache()</code> 函数保存渲染的模板内容并在页面之间重用。对于不随页面变化的组件至关重要。</p><p><strong>关键原则</strong>：按语言缓存，而不是全局缓存。</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>relative_link<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span></code></pre><p><strong>缓存键策略</strong>：</p><ul><li><code>header-en</code>、<code>header-zh-TW</code>、<code>header-zh-CN</code>、<code>header-ja</code>（4 个缓存条目）</li><li>每种语言获得隔离的缓存</li><li>在该语言的所有页面中重用</li></ul><h3 id="缓存什么">缓存什么</h3><p><strong>页眉</strong>（<code>layout.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'header-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/header'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>导航、语言选择器、徽标</li><li>4 个缓存条目（每种语言一个）</li><li>在每种语言的约 100+ 页面中重用</li></ul><p><strong>侧边栏</strong>（<code>sidebar.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'sidebar-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/sidebar-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>社交链接、结构</li><li>小部件按语言单独缓存</li></ul><p><strong>小部件</strong>（<code>sidebar-widgets.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'widget-recent_posts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'widget/recent_posts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>在模板中按语言过滤的最近文章：</li></ul><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%_</span><span class="token language-javascript"> site<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span> <span class="token operator">===</span> currentLang<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">_%></span></span></code></pre><ul><li>在该语言的所有页面中显示相同的 5 篇文章</li></ul><p><strong>页脚</strong>（<code>footer.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'footer-static-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-static'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/footer-dynamic'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>静态：版权、致谢（已缓存）</li><li>动态：二维码（特定于页面）</li></ul><p><strong>脚本</strong>（<code>layout.ejs</code>）：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'scripts-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/scripts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><ul><li>JavaScript 包含按语言缓存</li></ul><h3 id="配置要求">配置要求</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">relative_link</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 安全缓存所需</span></code></pre><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>⚠️ 相对链接破坏缓存</p><div class="admonition-content"><p>片段缓存捕获页面对象。使用 <code>relative_link: true</code> 时，缓存的内容包含错误的路径。启用缓存时始终使用绝对路径。</p></div></div><h3 id="客户端语言选择器">客户端语言选择器</h3><p>服务器端语言切换会破坏片段缓存。解决方案：基于 JavaScript 的 URL 生成。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 检测当前路径</span><span class="token keyword">var</span> currentPath <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">;</span><span class="token keyword">var</span> basePath <span class="token operator">=</span> currentPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\/[a-z]&#123;2&#125;(-[A-Z]&#123;2&#125;)?\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 生成语言特定的 URL</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'[data-lang]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> targetLang <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'data-lang'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> targetUrl <span class="token operator">=</span> targetLang <span class="token operator">===</span> <span class="token string">'en'</span> <span class="token operator">?</span> basePath <span class="token operator">:</span> <span class="token string">'/'</span> <span class="token operator">+</span> targetLang <span class="token operator">+</span> basePath<span class="token punctuation">;</span>    link<span class="token punctuation">.</span>href <span class="token operator">=</span> targetUrl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>优点</strong>：</p><ul><li>语言选择器 HTML 按语言缓存</li><li>URL 从真实浏览器位置生成</li><li>没有过时的页面对象问题</li></ul><h3 id="性能影响">性能影响</h3><p><strong>优化前</strong>（本站 4 种语言）：</p><ul><li>构建时间：约 1 分钟，400+ 页面（4 种语言 × 100+ 篇文章）</li><li>内存使用：高模板渲染开销</li><li>每个页面从头开始渲染页眉/页脚/侧边栏</li></ul><p><strong>优化后</strong>：</p><ul><li>构建时间：约 40 秒（减少 60%）</li><li>内存使用：显著降低</li><li>缓存命中率：每种语言 80-95%</li></ul><p><strong>本站的数学计算</strong>：</p><ul><li>无缓存：400 页 × 5 个组件 = 2,000 次渲染</li><li>有缓存：20 个缓存条目（4 种语言 × 5 个组件）+ 400 次动态渲染</li><li><strong>一般公式</strong>：每个组件 N 个缓存条目，而不是（页面 × N）次渲染</li></ul><h2 id="内容管理工作流程">内容管理工作流程</h2><h3 id="创建新文章">创建新文章</h3><ol><li><strong>首先编写英文版本</strong>（真实来源）：</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"Article Title"</span><span class="token comment"># 创建：source/_posts/Article-Title.md</span></code></pre><ol start="2"><li><strong>添加语言元数据</strong>：</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Article Title"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"英文引人注目的摘要"</span><span class="token punctuation">---</span></code></pre><ol start="3"><li><strong>使用语言后缀创建翻译</strong>：</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在文件名中使用语言后缀</span><span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-TW.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-zh-CN.md<span class="token function">cp</span> source/_posts/Article-Title.md source/_posts/Article-Title-ja.md</code></pre><ol start="4"><li><strong>更新翻译元数据</strong>（不需要固定链接）：</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"文章标题"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token comment"># 补丁自动生成：/zh-CN/2025/10/Article-Title/</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> Development<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"简体中文摘要"</span><span class="token punctuation">---</span></code></pre><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 自动 URL 生成</p><div class="admonition-content"><p>应用补丁后：</p><ul><li><code>Article-Title-zh-TW.md</code> → <code>/zh-TW/2025/10/Article-Title/</code></li><li><code>Article-Title-ja.md</code> → <code>/ja/2025/10/Article-Title/</code></li><li>语言后缀自动从 URL 中去除</li><li>不需要手动 <code>permalink</code> 配置</li></ul></div></div><h3 id="处理未翻译的内容">处理未翻译的内容</h3><p>对于仅以一种语言提供的内容，使用 <code>original_lang_url</code>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"CISP 认证"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2025-10-30</span><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN<span class="token key atrule">categories</span><span class="token punctuation">:</span> Cybersecurity<span class="token key atrule">original_lang_url</span><span class="token punctuation">:</span> /zh<span class="token punctuation">-</span>CN/2025/10/cisp<span class="token punctuation">-</span>certification/<span class="token punctuation">---</span></code></pre><p>这会显示重定向通知而不是内容，将读者引导到可用的语言版本。</p><h2 id="资源管理">资源管理</h2><h3 id="图片和资源">图片和资源</h3><p><strong>英文文章</strong>：使用相对路径</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">图表</span>](<span class="token url">diagram.png</span>)</span></code></pre><p><strong>翻译文章</strong>：使用指向英文资源的绝对路径</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">图表</span>](<span class="token url">/2025/10/Article-Title/diagram.png</span>)</span></code></pre><p><strong>优点</strong>：</p><ul><li>无资源重复</li><li>单一真实来源</li><li>更易维护</li></ul><h3 id="内部链接">内部链接</h3><p>始终使用带语言前缀的绝对路径：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token comment"><!-- 英文 --></span><span class="token url">[<span class="token content">Tools</span>](<span class="token url">/tools/</span>)</span><span class="token url">[<span class="token content">Previous Post</span>](<span class="token url">/2025/09/Previous-Article/</span>)</span><span class="token comment"><!-- 简体中文 --></span><span class="token url">[<span class="token content">工具</span>](<span class="token url">/zh-CN/tools/</span>)</span><span class="token url">[<span class="token content">上一篇文章</span>](<span class="token url">/zh-CN/2025/09/Previous-Article/</span>)</span></code></pre><h2 id="SEO-注意事项">SEO 注意事项</h2><h3 id="摘要管理">摘要管理</h3><p>每种语言具有不同的字符密度：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt_length</span><span class="token punctuation">:</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token number">200</span>  <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token number">100</span></code></pre><p>始终在前置数据中提供手动摘要以获得更好的控制：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt</span><span class="token punctuation">:</span> <span class="token string">"通过自定义插件掌握 Hexo 中的多语言内容管理。"</span></code></pre><h3 id="分类翻译">分类翻译</h3><p>保持分类键为英文，翻译显示名称：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">category_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">Development</span><span class="token punctuation">:</span>    <span class="token key atrule">en</span><span class="token punctuation">:</span> <span class="token string">"Development"</span>    <span class="token key atrule">zh-TW</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">zh-CN</span><span class="token punctuation">:</span> <span class="token string">"开发"</span>    <span class="token key atrule">ja</span><span class="token punctuation">:</span> <span class="token string">"開発"</span></code></pre><h3 id="标签">标签</h3><p><strong>无论内容语言如何，始终使用英文标签</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Hexo  <span class="token punctuation">-</span> i18n  <span class="token punctuation">-</span> Static Site</code></pre><p>这确保了跨语言的一致标签页面。</p><h2 id="其他性能提示">其他性能提示</h2><h3 id="开发期间禁用插件">开发期间禁用插件</h3><p>许多 i18n 插件可以在本地预览期间禁用以加快开发速度：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">i18n_archive_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 预览时禁用</span>  <span class="token key atrule">i18n_category_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 预览时禁用</span>  <span class="token key atrule">i18n_tag_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 预览时禁用</span>  <span class="token key atrule">sitemap_i18n</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 预览时禁用</span>  <span class="token key atrule">canonical_multilang</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 预览时禁用</span></code></pre><p><strong>部署前启用</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 部署前为所有插件设置 enable: true</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo generate</code></pre><p><strong>优点</strong>：</p><ul><li>更快的本地构建（秒而不是分钟）</li><li>内容创建期间更快的迭代</li><li>仅在生产需要时才具有完整功能</li></ul><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 开发工作流程</p><div class="admonition-content"><p>在日常工作中保持插件在 <code>_config.yml</code> 中禁用。仅在 CI/CD 管道中或手动部署前启用它们。</p></div></div><h2 id="故障排除">故障排除</h2><h3 id="出现错误语言内容">出现错误语言内容</h3><p><strong>原因</strong>：片段缓存未使用语言特定的键</p><p><strong>解决方案</strong>：验证缓存键包含 <code>page.lang</code>：</p><pre class="language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">fragment_cache</span><span class="token punctuation">(</span><span class="token string">'component-'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'common/component'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span></code></pre><h3 id="语言选择器显示-404">语言选择器显示 404</h3><p><strong>原因</strong>：服务器端路径检测与片段缓存</p><p><strong>解决方案</strong>：实现客户端 URL 生成（见上文）</p><h3 id="构建性能下降">构建性能下降</h3><p><strong>原因</strong>：缓存已禁用或 <code>relative_link: true</code></p><p><strong>解决方案</strong>：</p><ol><li>设置 <code>relative_link: false</code></li><li>清除缓存：<code>hexo clean</code></li><li>重新生成：<code>hexo generate</code></li></ol><h3 id="翻译未出现">翻译未出现</h3><p><strong>原因</strong>：缺少 <code>lang</code> 元数据或固定链接不正确</p><p><strong>解决方案</strong>：验证前置数据包含：</p><ul><li><code>lang: zh-CN</code>（或适当的语言代码）</li><li>使用语言后缀的文件名（例如 <code>Article-Title-zh-CN.md</code>）</li></ul><h2 id="结论">结论</h2><p>构建多语言 Hexo 博客需要自定义插件和仔细优化，但结果是一个快速、SEO 友好的网站，为全球受众提供服务。关键见解：</p><ul><li><strong>分离关注点</strong>：文章集中化，页面基于目录</li><li><strong>积极缓存</strong>：每种语言的片段缓存将构建时间减少 60%</li><li><strong>客户端增强</strong>：JavaScript 处理动态元素而不破坏缓存</li><li><strong>一致的结构</strong>：英文作为真实来源，翻译遵循既定模式</li></ul><p>此实现为跨 4 种语言的 400+ 页面博客提供支持，在不到 2 分钟内构建，同时保持出色的性能和 SEO。</p><p>静态网站生成的未来是多语言的，通过正确的架构，Hexo 可以提供世界级的结果。</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">通过自定义插件、URL 策略和片段缓存性能优化，掌握 Hexo 中的多语言内容管理。</summary>
    
    
    
    <category term="Development" scheme="https://neo01.com/categories/Development/"/>
    
    
    <category term="Hexo" scheme="https://neo01.com/tags/Hexo/"/>
    
    <category term="i18n" scheme="https://neo01.com/tags/i18n/"/>
    
    <category term="Static Site" scheme="https://neo01.com/tags/Static-Site/"/>
    
  </entry>
  
  <entry>
    <title>CISP学習ガイド：高度なセキュリティトピック</title>
    <link href="https://neo01.com/ja/2025/10/CISP-Advanced-Security-Topics/"/>
    <id>https://neo01.com/ja/2025/10/CISP-Advanced-Security-Topics/</id>
    <published>2025-10-23T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.128Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">このコンテンツは元の言語でのみ利用可能です。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP Learning Guide: Advanced Security Topics</title>
    <link href="https://neo01.com/2025/10/CISP-Advanced-Security-Topics/"/>
    <id>https://neo01.com/2025/10/CISP-Advanced-Security-Topics/</id>
    <published>2025-10-23T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.130Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">This content is only available in the original language.</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP學習指南：高級安全主題</title>
    <link href="https://neo01.com/zh-TW/2025/10/CISP-Advanced-Security-Topics/"/>
    <id>https://neo01.com/zh-TW/2025/10/CISP-Advanced-Security-Topics/</id>
    <published>2025-10-23T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.129Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">此內容僅提供原始語言版本。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP学習ガイド：電子メールセキュリティとネットワークプロトコル</title>
    <link href="https://neo01.com/ja/2025/10/CISP-Email-Security/"/>
    <id>https://neo01.com/ja/2025/10/CISP-Email-Security/</id>
    <published>2025-10-23T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.147Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">このコンテンツは元の言語でのみ利用可能です。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP Learning Guide: Email Security and Network Protocols</title>
    <link href="https://neo01.com/2025/10/CISP-Email-Security/"/>
    <id>https://neo01.com/2025/10/CISP-Email-Security/</id>
    <published>2025-10-23T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.148Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">This content is only available in the original language.</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP學習指南：電子郵件安全與網路協定</title>
    <link href="https://neo01.com/zh-TW/2025/10/CISP-Email-Security/"/>
    <id>https://neo01.com/zh-TW/2025/10/CISP-Email-Security/</id>
    <published>2025-10-23T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.148Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">此內容僅提供原始語言版本。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP学习指南：高级安全主题</title>
    <link href="https://neo01.com/zh-CN/2025/10/CISP-Advanced-Security-Topics/"/>
    <id>https://neo01.com/zh-CN/2025/10/CISP-Advanced-Security-Topics/</id>
    <published>2025-10-22T16:00:00.000Z</published>
    <updated>2025-10-27T14:24:26.563Z</updated>
    
    <content type="html"><![CDATA[<p>本指南涵盖CISP认证中的高级安全主题，包括缓冲区溢出漏洞、IP欺骗攻击、漏洞扫描工具、DHCP Snooping、数据库完整性约束和恶意软件识别等关键知识点。</p><h2 id="八、IIS访问控制">八、IIS访问控制</h2><h3 id="8-1-IIS服务器访问控制">8.1 IIS服务器访问控制</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🌐 IIS访问控制</p><div class="admonition-content"><p>**IIS（Internet Information Services）**是微软的Web服务器，支持多种访问控制机制。</p><p><strong>支持的访问控制类型：</strong></p><ul><li>✅ 网络地址访问控制</li><li>✅ Web服务器许可</li><li>✅ NTFS许可</li><li>❌ 异常行为过滤（不是IIS的访问控制类型）</li></ul></div></div><h3 id="7-2-IIS访问控制类型详解">7.2 IIS访问控制类型详解</h3><p><strong>网络地址访问控制（IP Address and Domain Restrictions）：</strong></p><pre class="language-none"><code class="language-none">网络地址访问控制：├── 基于IP地址│   ├── 允许特定IP访问│   ├── 拒绝特定IP访问│   ├── IP地址范围│   └── 子网掩码├── 基于域名│   ├── 允许特定域│   └── 拒绝特定域├── 配置位置│   ├── 服务器级别│   ├── 站点级别│   └── 应用程序级别└── 应用场景    ├── 限制访问来源    ├── 防止恶意IP    └── 地理位置限制</code></pre><p><strong>Web服务器许可（Web Permissions）：</strong></p><pre class="language-none"><code class="language-none">Web服务器许可：├── 权限类型│   ├── 读取（Read）│   ├── 写入（Write）│   ├── 脚本执行（Script）│   ├── 执行（Execute）│   └── 浏览目录（Directory Browsing）├── 配置级别│   ├── 虚拟目录│   ├── 物理目录│   └── 文件├── 安全原则│   ├── 最小权限原则│   ├── 禁用不需要的权限│   └── 分离静态和动态内容└── 常见配置    ├── 静态内容：只读    ├── 上传目录：读写，禁止执行    └── 脚本目录：读取+脚本执行</code></pre><p><strong>NTFS许可（NTFS Permissions）：</strong></p><pre class="language-none"><code class="language-none">NTFS许可：├── 文件系统级别权限│   ├── 完全控制│   ├── 修改│   ├── 读取和执行│   ├── 读取│   └── 写入├── 与Web权限关系│   ├── 两者都必须允许│   ├── 取最严格的权限│   └── NTFS是底层保护├── 用户账户│   ├── IIS应用程序池标识│   ├── IUSR（匿名用户）│   └── 认证用户└── 最佳实践    ├── 限制IIS账户权限    ├── 分离内容和日志目录    └── 定期审计权限</code></pre><p><strong>为什么异常行为过滤不是IIS访问控制类型：</strong></p><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>💡 异常行为过滤</p><div class="admonition-content"><p><strong>异常行为过滤</strong>是IDS/IPS或WAF（Web应用防火墙）的功能，不是IIS的访问控制类型。</p><p><strong>区别：</strong></p><ul><li>IIS访问控制：基于静态规则（IP、权限）</li><li>异常行为过滤：基于动态分析（行为模式）</li><li>IIS：Web服务器</li><li>IDS/WAF：安全检测设备</li></ul></div></div><h3 id="7-3-IIS访问控制配置示例">7.3 IIS访问控制配置示例</h3><p><strong>IP地址限制配置：</strong></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment"><!-- IIS配置文件示例 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>system.webServer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>security</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ipSecurity</span> <span class="token attr-name">allowUnlisted</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment"><!-- 允许特定IP --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>add</span> <span class="token attr-name">ipAddress</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>192.168.1.100<span class="token punctuation">"</span></span> <span class="token attr-name">allowed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment"><!-- 允许IP段 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>add</span> <span class="token attr-name">ipAddress</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10.0.0.0<span class="token punctuation">"</span></span> <span class="token attr-name">subnetMask</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>255.255.255.0<span class="token punctuation">"</span></span> <span class="token attr-name">allowed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment"><!-- 拒绝特定IP --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>add</span> <span class="token attr-name">ipAddress</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>203.0.113.50<span class="token punctuation">"</span></span> <span class="token attr-name">allowed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ipSecurity</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>security</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>system.webServer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><p><strong>Web权限配置：</strong></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>system.webServer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directoryBrowse</span> <span class="token attr-name">enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>handlers</span> <span class="token attr-name">accessPolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Read, Script<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>system.webServer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h3 id="7-4-IIS访问控制最佳实践">7.4 IIS访问控制最佳实践</h3><p><strong>安全配置建议：</strong></p><pre class="language-none"><code class="language-none">IIS安全最佳实践：├── 网络层│   ├── 限制管理端口访问│   ├── 使用IP白名单│   └── 配置防火墙规则├── 权限层│   ├── 最小权限原则│   ├── 禁用目录浏览│   ├── 分离执行权限│   └── 限制上传目录权限├── 认证层│   ├── 禁用匿名访问（敏感区域）│   ├── 使用Windows认证│   ├── 实施强密码策略│   └── 启用SSL&#x2F;TLS├── 监控层│   ├── 启用日志记录│   ├── 监控失败登录│   ├── 审计权限变更│   └── 定期安全审计└── 维护层    ├── 及时安装补丁    ├── 删除默认站点    ├── 移除示例应用    └── 定期备份配置</code></pre><h2 id="九、缓冲区溢出漏洞">九、缓冲区溢出漏洞</h2><h3 id="9-1-缓冲区溢出概述">9.1 缓冲区溢出概述</h3><div class="admonition danger"><p class="admonition-title"><span class="mdi mdi-alert-circle-outline admonition-icon"></span>🚨 缓冲区溢出漏洞</p><div class="admonition-content"><p>**缓冲区溢出（Buffer Overflow）**是指当计算机向缓冲区内填充数据位数时超过了缓冲区本身的容量，溢出的数据会覆盖在合法数据上，可能导致程序崩溃或被攻击者利用执行恶意代码。</p><p><strong>核心特征：</strong></p><ul><li>数据超过缓冲区容量</li><li>溢出数据覆盖相邻内存</li><li>可能覆盖返回地址</li><li>可被利用执行任意代码</li></ul></div></div><h3 id="9-2-漏洞类型辨析">9.2 漏洞类型辨析</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>💡 漏洞类型对比</p><div class="admonition-content"><p><strong>A. SQL注入</strong></p><ul><li>❌ 不是缓冲区溢出</li><li>攻击数据库</li><li>通过恶意SQL语句</li><li>利用输入验证不足</li></ul><p><strong>B. XSS（跨站脚本攻击）</strong></p><ul><li>❌ 不是缓冲区溢出</li><li>攻击Web应用</li><li>注入恶意脚本</li><li>在浏览器中执行</li></ul><p><strong>C. 缓冲区溢出</strong></p><ul><li>✅ 正确描述</li><li>数据超过缓冲区容量</li><li>溢出数据覆盖合法数据</li><li>可导致代码执行</li></ul><p><strong>D. 信息技术缺陷</strong></p><ul><li>❌ 过于宽泛</li><li>不是具体漏洞类型</li><li>是一般性描述</li></ul></div></div><p><strong>漏洞类型对比表：</strong></p><table><thead><tr><th>漏洞类型</th><th>攻击目标</th><th>攻击方式</th><th>影响</th></tr></thead><tbody><tr><td>SQL注入</td><td>数据库</td><td>恶意SQL语句</td><td>数据泄露、篡改</td></tr><tr><td>XSS</td><td>Web浏览器</td><td>恶意脚本注入</td><td>会话劫持、钓鱼</td></tr><tr><td>缓冲区溢出</td><td>内存</td><td>超长数据输入</td><td>代码执行、权限提升</td></tr><tr><td>CSRF</td><td>Web应用</td><td>伪造请求</td><td>未授权操作</td></tr></tbody></table><h3 id="9-3-缓冲区溢出原理">9.3 缓冲区溢出原理</h3><p><strong>内存布局示意：</strong></p><pre class="language-none"><code class="language-none">正常内存布局：┌─────────────────┐ 高地址│  命令行参数      │├─────────────────┤│  环境变量        │├─────────────────┤│  栈（Stack）     ││  ├─返回地址      ││  ├─保存的EBP     ││  ├─局部变量      ││  └─缓冲区        │ ← 正常数据填充├─────────────────┤│  堆（Heap）      │├─────────────────┤│  BSS段          │├─────────────────┤│  数据段          │├─────────────────┤│  代码段          │└─────────────────┘ 低地址缓冲区溢出：┌─────────────────┐│  返回地址        │ ← 被覆盖！├─────────────────┤│  保存的EBP       │ ← 被覆盖！├─────────────────┤│  局部变量        │ ← 被覆盖！├─────────────────┤│  缓冲区          ││  [正常数据]      ││  [溢出数据]      │ ← 超出缓冲区│  [溢出数据]      │ ← 覆盖相邻内存│  [恶意代码地址]  │ ← 覆盖返回地址└─────────────────┘</code></pre><p><strong>攻击流程：</strong></p><div class="mermaid">sequenceDiagram    participant A as 攻击者    participant P as 易受攻击程序    participant M as 内存    participant C as CPU        A->>P: 发送超长输入    P->>M: 写入缓冲区        Note over M: 数据超过缓冲区大小        M->>M: 溢出数据覆盖相邻内存    M->>M: 覆盖返回地址        Note over M: 返回地址被修改为<br/>恶意代码地址        P->>C: 函数返回    C->>M: 读取返回地址    C->>C: 跳转到恶意代码        Note over C: 执行攻击者的代码</div><h3 id="9-4-缓冲区溢出类型">9.4 缓冲区溢出类型</h3><p><strong>按位置分类：</strong></p><pre class="language-none"><code class="language-none">缓冲区溢出类型：├── 栈溢出（Stack Overflow）│   ├── 最常见的类型│   ├── 覆盖返回地址│   ├── 控制程序流程│   └── 执行任意代码├── 堆溢出（Heap Overflow）│   ├── 覆盖堆中的数据│   ├── 破坏数据结构│   ├── 利用相对复杂│   └── 可能导致代码执行├── 整数溢出（Integer Overflow）│   ├── 整数运算结果超出范围│   ├── 导致缓冲区大小计算错误│   ├── 间接导致缓冲区溢出│   └── 难以检测└── 格式化字符串漏洞    ├── 不正确使用printf等函数    ├── 读取或写入任意内存    ├── 可导致信息泄露    └── 可导致代码执行</code></pre><h3 id="9-5-缓冲区溢出示例">9.5 缓冲区溢出示例</h3><p><strong>易受攻击的代码：</strong></p><pre class="language-c" data-language="c"><code class="language-c"><span class="token comment">// 易受攻击的C代码</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">void</span> <span class="token function">vulnerable_function</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> buffer<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 64字节的缓冲区</span>        <span class="token comment">// 危险！没有检查输入长度</span>    <span class="token function">strcpy</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 如果input超过64字节，会溢出</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"You entered: %s\n"</span><span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">vulnerable_function</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>攻击示例：</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 正常输入（不会溢出）</span>./vulnerable_program <span class="token string">"Hello World"</span><span class="token comment"># 恶意输入（导致溢出）</span>./vulnerable_program <span class="token string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<span class="token entity" title="\x90">\x90</span><span class="token entity" title="\x90">\x90</span><span class="token entity" title="\x90">\x90</span><span class="token entity" title="\x90">\x90</span><span class="token entity" title="\xef">\xef</span><span class="token entity" title="\xbe">\xbe</span><span class="token entity" title="\xad">\xad</span><span class="token entity" title="\xde">\xde</span>"</span><span class="token comment">#                     ↑ 64个A填满缓冲区                                                              ↑ NOP滑梯  ↑ 返回地址</span></code></pre><p><strong>安全的代码：</strong></p><pre class="language-c" data-language="c"><code class="language-c"><span class="token comment">// 安全的C代码</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">void</span> <span class="token function">safe_function</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> buffer<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 安全！限制复制的字节数</span>    <span class="token function">strncpy</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> input<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    buffer<span class="token punctuation">[</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span>  <span class="token comment">// 确保字符串终止</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"You entered: %s\n"</span><span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">safe_function</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="9-6-缓冲区溢出防护">9.6 缓冲区溢出防护</h3><p><strong>防护措施：</strong></p><pre class="language-none"><code class="language-none">缓冲区溢出防护：├── 编码层面│   ├── 使用安全函数│   │   ├── strncpy代替strcpy│   │   ├── snprintf代替sprintf│   │   ├── fgets代替gets│   │   └── strncat代替strcat│   ├── 输入验证│   │   ├── 检查输入长度│   │   ├── 验证数据类型│   │   └── 边界检查│   └── 代码审查│       ├── 静态代码分析│       ├── 人工审查│       └── 安全编码规范├── 编译器保护│   ├── 栈保护（Stack Canary）│   │   ├── 在返回地址前放置金丝雀值│   │   ├── 函数返回前检查│   │   └── GCC: -fstack-protector│   ├── ASLR（地址空间布局随机化）│   │   ├── 随机化内存布局│   │   ├── 增加攻击难度│   │   └── 操作系统级别│   ├── DEP&#x2F;NX（数据执行保护）│   │   ├── 标记内存页为不可执行│   │   ├── 防止代码注入│   │   └── 硬件支持│   └── PIE（位置无关可执行文件）│       ├── 代码段地址随机化│       └── 配合ASLR使用├── 运行时保护│   ├── 内存安全工具│   │   ├── Valgrind│   │   ├── AddressSanitizer│   │   └── MemorySanitizer│   ├── 沙箱技术│   │   ├── 限制程序权限│   │   ├── 隔离执行环境│   │   └── 容器化│   └── 监控和检测│       ├── IDS&#x2F;IPS│       ├── 异常检测│       └── 日志分析└── 语言选择    ├── 使用内存安全语言    │   ├── Java    │   ├── Python    │   ├── Rust    │   └── Go    └── 避免不安全的C&#x2F;C++特性</code></pre><p><strong>编译器保护选项：</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># GCC编译选项</span>gcc -fstack-protector-all <span class="token punctuation">\</span>  <span class="token comment"># 栈保护</span>    <span class="token parameter variable">-D_FORTIFY_SOURCE</span><span class="token operator">=</span><span class="token number">2</span> <span class="token punctuation">\</span>     <span class="token comment"># 运行时检查</span>    <span class="token parameter variable">-fPIE</span> <span class="token parameter variable">-pie</span> <span class="token punctuation">\</span>              <span class="token comment"># 位置无关可执行文件</span>    -Wl,-z,relro <span class="token punctuation">\</span>            <span class="token comment"># 只读重定位</span>    -Wl,-z,now <span class="token punctuation">\</span>              <span class="token comment"># 立即绑定</span>    <span class="token parameter variable">-o</span> program program.c<span class="token comment"># 检查保护机制</span>checksec <span class="token parameter variable">--file</span><span class="token operator">=</span>program</code></pre><h3 id="9-7-著名的缓冲区溢出漏洞">9.7 著名的缓冲区溢出漏洞</h3><p><strong>历史上的重大漏洞：</strong></p><table><thead><tr><th>漏洞名称</th><th>年份</th><th>影响</th><th>描述</th></tr></thead><tbody><tr><td>Morris蠕虫</td><td>1988</td><td>互联网瘫痪</td><td>利用fingerd缓冲区溢出</td></tr><tr><td>Code Red</td><td>2001</td><td>数十万服务器</td><td>IIS缓冲区溢出</td></tr><tr><td>Slammer</td><td>2003</td><td>全球网络减速</td><td>SQL Server缓冲区溢出</td></tr><tr><td>Heartbleed</td><td>2014</td><td>OpenSSL</td><td>堆缓冲区过度读取</td></tr><tr><td>EternalBlue</td><td>2017</td><td>WannaCry勒索软件</td><td>SMB协议缓冲区溢出</td></tr></tbody></table><h2 id="十、IP欺骗政击">十、IP欺骗政击</h2><h3 id="10-1-IP欺骗原理">10.1 IP欺骗原理</h3><div class="admonition danger"><p class="admonition-title"><span class="mdi mdi-alert-circle-outline admonition-icon"></span>🎭 IP欺骗攻击</p><div class="admonition-content"><p><strong>IP欺骗（IP Spoof）<strong>是利用TCP/IP协议中</strong>对源IP地址的鉴别方式</strong>的漏洞进行攻击的。</p><p><strong>核心漏洞：</strong></p><ul><li>TCP/IP协议不验证源IP地址的真实性</li><li>攻击者可以伪造源IP地址</li><li>利用IP协议寻址机制的缺陷</li><li>绕过基于IP地址的访问控制</li></ul></div></div><h3 id="10-2-IP欺骗攻击类型">10.2 IP欺骗攻击类型</h3><p><strong>常见的IP欺骗攻击：</strong></p><pre class="language-none"><code class="language-none">IP欺骗攻击类型：├── 非盲攻IP欺骗│   ├── 攻击者在同一网段│   ├── 可以监听响应│   ├── 利用信任关系│   └── 示例：ARP欺骗配合IP欺骗├── 盲攻IP欺骗│   ├── 攻击者不在同一网段│   ├── 无法监听响应│   ├── 需要预测序列号│   └── 示例：TCP序列号预测攻击└── DoS攻击中IP欺骗    ├── Smurf攻击    ├── Land攻击    └── 隐藏攻击源</code></pre><h3 id="10-3-IP欺骗攻击示例">10.3 IP欺骗攻击示例</h3><p><strong>TCP序列号预测攻击：</strong></p><div class="mermaid">sequenceDiagram    participant A as 攻击者    participant V as 受害者    participant T as 目标服务器        Note over A: 1. 监听通信，预测TCP序列号        A->>T: 伪造源IP（受害者IP）<br/>SYN包    T->>V: SYN-ACK（发送给受害者）        Note over A: 2. 政击者预测序列号        A->>T: 伪造源IP<br/>ACK包（预测的序列号）        Note over T: 3. 连接建立，认为来自受害者        A->>T: 伪造源IP<br/>恶意命令        Note over T: 4. 执行命令，认为是受害者发送</div><h3 id="10-4-IP欺骗防护措施">10.4 IP欺骗防护措施</h3><p><strong>防护策略：</strong></p><pre class="language-none"><code class="language-none">IP欺骗防护措施：├── 网络层防护│   ├── 入站过滤（Ingress Filtering）│   │   ├── 过滤来自外部的内部IP│   │   ├── 过滤私有IP地址│   │   └── RFC 2827标准│   ├── 出站过滤（Egress Filtering）│   │   ├── 防止内部主机伪造IP│   │   ├── 限制源IP地址范围│   │   └── 防止成为攻击源│   └── 反向路径转发（RPF）│       ├── 验证源IP地址可达性│       └── 丢弃不可达源IP的数据包├── 传输层防护│   ├── TCP序列号随机化│   ├── SYN Cookie│   └── 连接状态跟踪├── 应用层防护│   ├── 强身份认证│   ├── 不仅依赖IP地址│   ├── 使用加密通信│   └── 数字签名验证└── 监控和检测    ├── 入侵检测系统    ├── 异常流量分析    └── 日志审计</code></pre><h2 id="十一、漏洞扫描工具">十一、漏洞扫描工具</h2><h3 id="11-1-常用漏洞扫描工具">11.1 常用漏洞扫描工具</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🔍 漏洞扫描工具</p><div class="admonition-content"><p>常用的漏洞扫描工具包括：</p><p><strong>✅ BT5（BackTrack 5）</strong></p><ul><li>渗透测试操作系统</li><li>集成多种安全工具</li><li>支持漏洞扫描</li></ul><p><strong>✅ NMAP</strong></p><ul><li>网络扫描工具</li><li>端口扫描和服务识别</li><li>支持漏洞检测脚本</li></ul><p><strong>✅ Nessus</strong></p><ul><li>专业漏洞扫描器</li><li>广泛的漏洞库</li><li>自动化扫描和报告</li></ul></div></div><h3 id="11-2-不支持漏洞扫描的工具">11.2 不支持漏洞扫描的工具</h3><div class="admonition warning"><p class="admonition-title"><span class="mdi mdi-alert-outline admonition-icon"></span>❌ Wireshark不支持漏洞扫描</p><div class="admonition-content"><p><strong>Wireshark</strong>不支持漏洞扫描。</p><p><strong>原因：</strong></p><ul><li>Wireshark是网络协议分析器</li><li>用于捕获和分析网络数据包</li><li>不具备主动扫描功能</li><li>不包含漏洞检测逻辑</li></ul></div></div><p><strong>工具功能对比：</strong></p><table><thead><tr><th>工具</th><th>类型</th><th>主要功能</th><th>支持漏洞扫描</th></tr></thead><tbody><tr><td>BT5</td><td>渗透测试系统</td><td>集成安全工具集</td><td>✅ 是</td></tr><tr><td>NMAP</td><td>网络扫描</td><td>端口扫描、服务识别</td><td>✅ 是（通过NSE）</td></tr><tr><td>Wireshark</td><td>协议分析</td><td>数据包捕获和分析</td><td>❌ 否</td></tr><tr><td>Nessus</td><td>漏洞扫描</td><td>专业漏洞扫描</td><td>✅ 是</td></tr></tbody></table><h2 id="十二、DHCP-Snooping">十二、DHCP Snooping</h2><h3 id="12-1-DHCP-Snooping概述">12.1 DHCP Snooping概述</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🔒 DHCP Snooping安全特性</p><div class="admonition-content"><p>**DHCP监听（DHCP Snooping）**是一种DHCP安全特性，可以有效防范DHCP攻击。</p><p><strong>主要功能：</strong></p><ul><li>防止伪造DHCP服务器</li><li>防止DHCP饵饿攻击</li><li>防止IP地址欺骗</li><li>保护DHCP服务器</li></ul></div></div><h3 id="12-2-DHCP-Snooping安全特性">12.2 DHCP Snooping安全特性</h3><p><strong>DHCP Snooping的安全特性：</strong></p><pre class="language-none"><code class="language-none">DHCP Snooping安全特性：├── ✅ 比较DHCP请求报文的源MAC地址和CHADDR字段是否一致│   ├── 防止MAC地址伪造│   ├── 确保请求来源真实性│   └── 丢弃不一致的请求├── ✅ 将交换机端口划分为信任端口和非信任端口两类│   ├── 信任端口：连接DHCP服务器或上行设备│   ├── 非信任端口：连接用户设备│   ├── 只允许信任端口发送DHCP服务器响应│   └── 防止伪造DHCP服务器├── ❌ 限制端口被允许访问的MAC地址的最大条目│   ├── 这是端口安全（Port Security）的功能│   ├── 不是DHCP Snooping的特性│   └── 两者可以配合使用└── ✅ 对端口的DHCP报文进行限速    ├── 防止DHCP饵饿攻击    ├── 限制DHCP请求速率    └── 保护DHCP服务器资源</code></pre><h3 id="12-3-DHCP-Snooping配置示例">12.3 DHCP Snooping配置示例</h3><p><strong>Cisco交换机DHCP Snooping配置：</strong></p><pre class="language-cisco" data-language="cisco"><code class="language-cisco">! 启用DHCP Snoopingip dhcp snoopingip dhcp snooping vlan 10,20! 配置信任端口（连接DHCP服务器）interface GigabitEthernet0&#x2F;1  description &quot;To DHCP Server&quot;  ip dhcp snooping trust  ! 配置非信任端口（连接用户）interface range GigabitEthernet0&#x2F;2-24  description &quot;User Ports&quot;  ip dhcp snooping limit rate 10  ! 启用MAC地址验证ip dhcp snooping verify mac-address! 查看DHCP Snooping绑定表show ip dhcp snooping binding</code></pre><h3 id="12-4-DHCP-Snooping与端口安全的区别">12.4 DHCP Snooping与端口安全的区别</h3><p><strong>DHCP Snooping vs 端口安全：</strong></p><table><thead><tr><th>特性</th><th>DHCP Snooping</th><th>端口安全（Port Security）</th></tr></thead><tbody><tr><td>主要功能</td><td>防止DHCP攻击</td><td>限制MAC地址数量</td></tr><tr><td>作用层次</td><td>DHCP协议</td><td>数据链路层</td></tr><tr><td>信任端口</td><td>✅ 支持</td><td>❌ 不支持</td></tr><tr><td>MAC验证</td><td>✅ 支持</td><td>✅ 支持</td></tr><tr><td>限制MAC数量</td><td>❌ 不支持</td><td>✅ 支持</td></tr><tr><td>限速</td><td>✅ 支持</td><td>❌ 不支持</td></tr></tbody></table><h2 id="十三、数据库完整性">十三、数据库完整性</h2><h3 id="8-1-数据库完整性约束">8.1 数据库完整性约束</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🗄️ 数据库完整性</p><div class="admonition-content"><p><strong>数据库完整性约束</strong>确保数据的准确性和一致性。</p><p><strong>三类完整性约束：</strong></p><ol><li><strong>实体完整性</strong></li><li><strong>参照完整性</strong></li><li><strong>用户定义完整性</strong></li></ol></div></div><h3 id="8-2-实体完整性">8.2 实体完整性</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🔑 实体完整性约束</p><div class="admonition-content"><p><strong>实体完整性</strong>要求表中的每一行都有唯一标识，通过**主键（PRIMARY KEY）**实现。</p><p><strong>主键约束：</strong></p><ul><li>唯一性：主键值必须唯一</li><li>非空性：主键不能为NULL</li><li>不可变性：主键值不应改变</li></ul></div></div><p><strong>SQL示例分析：</strong></p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Student <span class="token punctuation">(</span>  id <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Sname <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  Sage <span class="token keyword">SMALLINT</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><strong>约束类型识别：</strong></p><table><thead><tr><th>约束</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>PRIMARY KEY(id)</code></td><td>✅ 实体完整性</td><td>定义主键，确保每行唯一</td></tr><tr><td><code>NOT NULL</code></td><td>用户定义完整性</td><td>列级约束，不允许空值</td></tr></tbody></table><h3 id="8-3-三类完整性约束详解">8.3 三类完整性约束详解</h3><p><strong>实体完整性（Entity Integrity）：</strong></p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 实体完整性示例</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Employee <span class="token punctuation">(</span>  emp_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>           <span class="token comment">-- 主键约束</span>  emp_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  dept_id <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 或使用表级约束</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Employee <span class="token punctuation">(</span>  emp_id <span class="token keyword">INT</span><span class="token punctuation">,</span>  emp_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  dept_id <span class="token keyword">INT</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>emp_id<span class="token punctuation">)</span>              <span class="token comment">-- 表级主键约束</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 复合主键</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Enrollment <span class="token punctuation">(</span>  student_id <span class="token keyword">INT</span><span class="token punctuation">,</span>  course_id <span class="token keyword">INT</span><span class="token punctuation">,</span>  grade <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>student_id<span class="token punctuation">,</span> course_id<span class="token punctuation">)</span>  <span class="token comment">-- 复合主键</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>参照完整性（Referential Integrity）：</strong></p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 参照完整性示例</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Department <span class="token punctuation">(</span>  dept_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  dept_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Employee <span class="token punctuation">(</span>  emp_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  emp_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  dept_id <span class="token keyword">INT</span><span class="token punctuation">,</span>  <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>dept_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> Department<span class="token punctuation">(</span>dept_id<span class="token punctuation">)</span>  <span class="token comment">-- 外键约束</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>用户定义完整性（User-Defined Integrity）：</strong></p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 用户定义完整性示例</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Student <span class="token punctuation">(</span>  id <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  Sname <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>          <span class="token comment">-- 非空约束</span>  Sage <span class="token keyword">SMALLINT</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span>Sage <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">AND</span> Sage <span class="token operator">&lt;=</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 检查约束</span>  Gender <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span>Gender <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment">-- 值域约束</span>  Email <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span>         <span class="token comment">-- 唯一约束</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="8-4-完整性约束对比">8.4 完整性约束对比</h3><p><strong>三类约束对比表：</strong></p><table><thead><tr><th>约束类型</th><th>目的</th><th>实现方式</th><th>示例</th></tr></thead><tbody><tr><td>实体完整性</td><td>确保每行唯一可识别</td><td>PRIMARY KEY</td><td><code>PRIMARY KEY(id)</code></td></tr><tr><td>参照完整性</td><td>维护表间关系一致性</td><td>FOREIGN KEY</td><td><code>FOREIGN KEY(dept_id)</code></td></tr><tr><td>用户定义完整性</td><td>满足业务规则</td><td>NOT NULL, CHECK, UNIQUE</td><td><code>CHECK (age &gt;= 0)</code></td></tr></tbody></table><h3 id="8-5-完整性约束的重要性">8.5 完整性约束的重要性</h3><p><strong>数据完整性的作用：</strong></p><pre class="language-none"><code class="language-none">数据完整性的重要性：├── 数据质量保证│   ├── 防止无效数据│   ├── 确保数据准确性│   └── 维护数据一致性├── 业务规则实施│   ├── 强制业务逻辑│   ├── 自动验证│   └── 减少应用层代码├── 数据安全│   ├── 防止数据损坏│   ├── 维护引用关系│   └── 避免孤立记录└── 系统可靠性    ├── 减少错误    ├── 简化维护    └── 提高信任度</code></pre><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">深入解析CISP认证中的缓冲区溢出、IP欺骗、漏洞扫描工具、DHCP Snooping、数据库完整性和恶意软件识别等高级主题。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP学习指南：电子邮件安全与网络协议</title>
    <link href="https://neo01.com/zh-CN/2025/10/CISP-Email-Security/"/>
    <id>https://neo01.com/zh-CN/2025/10/CISP-Email-Security/</id>
    <published>2025-10-22T16:00:00.000Z</published>
    <updated>2025-10-27T14:24:26.596Z</updated>
    
    <content type="html"><![CDATA[<p>本指南涵盖CISP认证中的电子邮件安全、DNS协议、安全设备等关键知识点。</p><h2 id="一、电子邮件炸弹">一、电子邮件炸弹</h2><h3 id="1-1-电子邮件炸弹定义">1.1 电子邮件炸弹定义</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>💣 电子邮件炸弹</p><div class="admonition-content"><p><strong>电子邮件炸弹是在短时间内发送大量邮件的软件，可以造成目标邮箱爆满</strong></p><p><strong>电子邮件炸弹的特征：</strong></p><p>📧 <strong>大量邮件</strong></p><ul><li>短时间内发送海量邮件</li><li>可能是数千甚至数万封</li><li>目标是填满邮箱</li></ul><p>⚡ <strong>快速发送</strong></p><ul><li>使用自动化工具</li><li>高速批量发送</li><li>难以手动阻止</li></ul><p>🎯 <strong>目标明确</strong></p><ul><li>针对特定邮箱</li><li>造成邮箱不可用</li><li>影响正常通信</li></ul></div></div><p><strong>常见误解澄清：</strong></p><table><thead><tr><th>概念</th><th>说明</th><th>与邮件炸弹的区别</th></tr></thead><tbody><tr><td>钓鱼邮件</td><td>邮件正文中包含恶意网站链接</td><td>目的是窃取信息，不是填满邮箱</td></tr><tr><td>病毒邮件</td><td>邮件附件中具有强破坏性的病毒</td><td>目的是破坏系统，不是填满邮箱</td></tr><tr><td>社会工程邮件</td><td>具有恐吓内容的邮件</td><td>目的是心理操纵，不是填满邮箱</td></tr><tr><td>邮件炸弹</td><td>短时间内发送大量邮件的软件</td><td>✅ 目的是造成邮箱爆满</td></tr></tbody></table><p><strong>电子邮件炸弹的影响：</strong></p><div class="mermaid">graph TB    A["电子邮件炸弹"]        B["邮箱爆满"]    C["服务拒绝"]    D["资源消耗"]    E["业务影响"]        A --> B    A --> C    A --> D    A --> E        B --> B1["无法接收新邮件"]    B --> B2["存储空间耗尽"]        C --> C1["邮件服务器过载"]    C --> C2["正常邮件被阻塞"]        D --> D1["网络带宽占用"]    D --> D2["服务器资源消耗"]        E --> E1["通信中断"]    E --> E2["工作效率下降"]        style A fill:#ffcdd2,stroke:#c62828    style B fill:#ff9800,stroke:#e65100    style C fill:#f44336,stroke:#b71c1c    style D fill:#fff3e0,stroke:#f57c00    style E fill:#ffebee,stroke:#d32f2f</div><h3 id="1-2-电子邮件炸弹防护">1.2 电子邮件炸弹防护</h3><p><strong>防护措施：</strong></p><pre class="language-none"><code class="language-none">邮件炸弹防护措施：├── 邮件网关层│   ├── 速率限制│   ├── 发件人验证│   ├── 黑名单过滤│   └── 异常检测├── 邮件服务器层│   ├── 邮箱配额限制│   ├── 连接数限制│   ├── 邮件大小限制│   └── 反垃圾邮件├── 客户端层│   ├── 邮件规则│   ├── 垃圾邮件过滤│   ├── 黑名单设置│   └── 自动删除└── 应急响应    ├── 快速识别    ├── 临时阻断    ├── 清理邮箱    └── 恢复服务</code></pre><h2 id="二、DNS协议">二、DNS协议</h2><h3 id="2-1-DNS协议的传输层支持">2.1 DNS协议的传输层支持</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🌐 DNS协议的传输层</p><div class="admonition-content"><p><strong>在应用层协议中，DNS可使用传输层的TCP协议，又可用UDP协议</strong></p><p><strong>DNS使用TCP和UDP的场景：</strong></p><p>📊 <strong>UDP（主要使用）</strong></p><ul><li>端口：53</li><li>用途：标准DNS查询</li><li>特点：快速、轻量</li><li>限制：消息大小≤512字节</li></ul><p>📊 <strong>TCP（特殊场景）</strong></p><ul><li>端口：53</li><li>用途：区域传输、大响应</li><li>特点：可靠、无大小限制</li><li>场景：主从同步、DNSSEC</li></ul></div></div><p><strong>其他协议的传输层使用：</strong></p><table><thead><tr><th>协议</th><th>传输层</th><th>端口</th><th>说明</th></tr></thead><tbody><tr><td>DNS</td><td>TCP + UDP</td><td>53</td><td>✅ 两者都用</td></tr><tr><td>SMTP</td><td>TCP</td><td>25</td><td>只用TCP</td></tr><tr><td>HTTP</td><td>TCP</td><td>80</td><td>只用TCP</td></tr><tr><td>FTP</td><td>TCP</td><td>20/21</td><td>只用TCP</td></tr><tr><td>DHCP</td><td>UDP</td><td>67/68</td><td>只用UDP</td></tr><tr><td>TFTP</td><td>UDP</td><td>69</td><td>只用UDP</td></tr></tbody></table><h3 id="2-2-DNS使用UDP和TCP的详细说明">2.2 DNS使用UDP和TCP的详细说明</h3><p><strong>协议选择场景：</strong></p><pre class="language-none"><code class="language-none">DNS协议传输层使用：├── UDP使用场景（主要）│   ├── 标准DNS查询│   │   ├── 客户端查询│   │   ├── 递归查询│   │   └── 迭代查询│   ├── 优点│   │   ├── 速度快│   │   ├── 开销小│   │   └── 无需建立连接│   └── 限制│       └── 消息大小≤512字节├── TCP使用场景（特殊）│   ├── 区域传输（Zone Transfer）│   │   ├── 主DNS到从DNS│   │   ├── AXFR（完整传输）│   │   └── IXFR（增量传输）│   ├── 大响应│   │   ├── 响应&gt;512字节│   │   ├── DNSSEC签名│   │   └── 大量记录│   └── 优点│       ├── 可靠传输│       ├── 无大小限制│       └── 支持大数据└── 选择原则    ├── 默认使用UDP    ├── 响应过大时切换TCP    └── 区域传输使用TCP</code></pre><h2 id="三、漏洞扫描器">三、漏洞扫描器</h2><h3 id="3-1-漏洞扫描器的用途">3.1 漏洞扫描器的用途</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🔍 漏洞扫描器</p><div class="admonition-content"><p><strong>漏洞扫描器常用于识别系统中存在的脆弱性</strong></p><p><strong>漏洞扫描器的功能：</strong></p><p>🔎 <strong>漏洞发现</strong></p><ul><li>扫描系统漏洞</li><li>识别配置错误</li><li>发现安全弱点</li></ul><p>📊 <strong>风险评估</strong></p><ul><li>评估漏洞严重程度</li><li>提供修复建议</li><li>生成评估报告</li></ul></div></div><p><strong>安全设备功能对比：</strong></p><table><thead><tr><th>设备类型</th><th>主要功能</th><th>是否识别脆弱性</th></tr></thead><tbody><tr><td>防火墙</td><td>访问控制</td><td>❌ 否</td></tr><tr><td>IDS</td><td>入侵检测</td><td>❌ 否</td></tr><tr><td>漏洞扫描器</td><td>识别脆弱性</td><td>✅ 是</td></tr><tr><td>UTM</td><td>统一威胁管理</td><td>🟡 部分</td></tr></tbody></table><h3 id="3-2-漏洞扫描器工作流程">3.2 漏洞扫描器工作流程</h3><p><strong>扫描流程：</strong></p><pre class="language-none"><code class="language-none">漏洞扫描流程：├── 1. 资产发现│   ├── 主机发现│   ├── 端口扫描│   └── 服务识别├── 2. 漏洞检测│   ├── 已知漏洞匹配│   ├── 配置检查│   └── 弱点分析├── 3. 风险评估│   ├── 漏洞严重程度│   ├── 可利用性分析│   └── 影响评估└── 4. 报告生成    ├── 漏洞列表    ├── 修复建议    └── 优先级排序</code></pre><h2 id="四、包过滤防火墙">四、包过滤防火墙</h2><h3 id="4-1-包过滤防火墙的特点">4.1 包过滤防火墙的特点</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>📦 包过滤防火墙</p><div class="admonition-content"><p><strong>包过滤防火墙的缺点是没有办法从非常细微之处来分析数据包，但它的优点是非常快</strong></p><p><strong>包过滤防火墙特点：</strong></p><p>⚡ <strong>速度快</strong></p><ul><li>只检查包头</li><li>处理简单</li><li>延迟低</li></ul><p>❌ <strong>分析能力有限</strong></p><ul><li>无法检查数据内容</li><li>无法识别应用层攻击</li><li>无状态检查</li></ul></div></div><p><strong>防火墙类型对比：</strong></p><table><thead><tr><th>防火墙类型</th><th>检查深度</th><th>速度</th><th>安全性</th></tr></thead><tbody><tr><td>包过滤</td><td>包头</td><td>⚡⚡⚡⚡⚡ 最快</td><td>⭐⭐ 低</td></tr><tr><td>状态检测</td><td>包头+状态</td><td>⚡⚡⚡⚡ 快</td><td>⭐⭐⭐ 中</td></tr><tr><td>应用层</td><td>全部内容</td><td>⚡⚡ 慢</td><td>⭐⭐⭐⭐⭐ 高</td></tr></tbody></table><h3 id="4-2-防火墙技术演进">4.2 防火墙技术演进</h3><p><strong>防火墙发展历程：</strong></p><div class="mermaid">graph LR    A["包过滤防火墙"] --> B["状态检测防火墙"]    B --> C["应用层防火墙"]    C --> D["下一代防火墙<br/>NGFW"]        style A fill:#e3f2fd,stroke:#1976d2    style B fill:#e8f5e9,stroke:#388e3d    style C fill:#fff3e0,stroke:#f57c00    style D fill:#f3e5f5,stroke:#7b1fa2</div><h2 id="五、社会工程攻击">五、社会工程攻击</h2><h3 id="5-1-社会工程攻击识别">5.1 社会工程攻击识别</h3><div class="admonition anote"><p class="admonition-title"><span class="mdi mdi-note-outline admonition-icon"></span>🎭 社会工程攻击</p><div class="admonition-content"><p><strong>电话联系组织机构的接线员询问用户名和口令是社会工程攻击</strong></p><p><strong>社会工程攻击特点：</strong></p><p>👥 <strong>利用人性弱点</strong></p><ul><li>信任</li><li>好奇</li><li>恐惧</li><li>贪婪</li></ul><p>🎯 <strong>非技术手段</strong></p><ul><li>不依赖技术漏洞</li><li>利用心理操纵</li><li>诱骗信息</li></ul></div></div><p><strong>攻击类型对比：</strong></p><table><thead><tr><th>攻击类型</th><th>技术性</th><th>目标</th><th>防御方法</th></tr></thead><tbody><tr><td>缓冲器溢出</td><td>高</td><td>系统漏洞</td><td>补丁、代码审查</td></tr><tr><td>SQL注入</td><td>高</td><td>应用漏洞</td><td>输入验证、参数化查询</td></tr><tr><td>社会工程</td><td>低</td><td>人的弱点</td><td>安全意识培训</td></tr><tr><td>PKI/CA</td><td>-</td><td>安全机制</td><td>不是攻击</td></tr></tbody></table><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>🔗 社会工程详细内容</p><div class="admonition-content"><p><strong>关于社会工程学攻击的详细手法和防护，请参考：</strong></p><p>📚 <a href="/zh-CN/2025/10/CISP-Malware-Propagation-Methods/#%E5%85%AB%E3%80%81%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6%E4%BC%A0%E6%92%AD">恶意代码与病毒 - 社会工程学传播</a></p></div></div><h2 id="六、总结">六、总结</h2><h3 id="6-1-核心知识点回顾">6.1 核心知识点回顾</h3><p><strong>电子邮件安全：</strong></p><ul><li>电子邮件炸弹：短时间大量邮件，造成邮箱爆满</li><li>防护措施：速率限制、配额管理、异常检测</li></ul><p><strong>网络协议：</strong></p><ul><li>DNS协议：可使用TCP和UDP两种传输层协议</li><li>UDP用于标准查询，TCP用于区域传输和大响应</li></ul><p><strong>安全设备：</strong></p><ul><li>漏洞扫描器：识别系统脆弱性</li><li>包过滤防火墙：速度快但分析能力有限</li><li>社会工程：利用人性弱点的非技术攻击</li></ul><div class="admonition success"><p class="admonition-title"><span class="mdi mdi-check-circle-outline admonition-icon"></span>🎯 关键要点</p><div class="admonition-content"><p><strong>邮件安全：</strong></p><ul><li>邮件炸弹是大量邮件攻击，不是病毒或钓鱼</li><li>需要多层防护：网关、服务器、客户端</li></ul><p><strong>网络协议：</strong></p><ul><li>DNS可以使用TCP和UDP</li><li>UDP用于快速查询，TCP用于可靠传输</li></ul><p><strong>安全技术：</strong></p><ul><li>漏洞扫描器用于识别脆弱性</li><li>包过滤防火墙速度快但功能有限</li><li>社会工程是非技术攻击</li></ul></div></div><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>🔗 相关内容</p><div class="admonition-content"><p><strong>更多相关知识点：</strong></p><ul><li>恶意代码详细分类和传播方式 → <a href="/zh-CN/2025/10/CISP-Malware-Propagation-Methods/">恶意代码与病毒</a></li></ul></div></div><div class="admonition tip"><p class="admonition-title"><span class="mdi mdi-lightbulb-on-outline admonition-icon"></span>💡 考试提示</p><div class="admonition-content"><ul><li>理解邮件炸弹的定义和特征</li><li>掌握DNS使用TCP和UDP的场景</li><li>了解各种安全设备的主要功能</li><li>识别社会工程攻击的特点</li><li>区分不同类型的防火墙特性</li></ul></div></div><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">深入解析CISP认证中的电子邮件安全、DNS协议、安全设备等核心知识点。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP學習指南：訪問控制機制、蜜網、稽核系統與WAPI</title>
    <link href="https://neo01.com/zh-TW/2025/10/CISP-Access-Control-Audit-WAPI/"/>
    <id>https://neo01.com/zh-TW/2025/10/CISP-Access-Control-Audit-WAPI/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.125Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">此內容僅提供原始語言版本。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP学習ガイド：アクセス制御メカニズム、ハニーネット、監査システムとWAPI</title>
    <link href="https://neo01.com/ja/2025/10/CISP-Access-Control-Audit-WAPI/"/>
    <id>https://neo01.com/ja/2025/10/CISP-Access-Control-Audit-WAPI/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.124Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">このコンテンツは元の言語でのみ利用可能です。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP Learning Guide: Access Control Mechanisms, Honeynets, Audit Systems and WAPI</title>
    <link href="https://neo01.com/2025/10/CISP-Access-Control-Audit-WAPI/"/>
    <id>https://neo01.com/2025/10/CISP-Access-Control-Audit-WAPI/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.126Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">This content is only available in the original language.</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP学習ガイド：中国情報セキュリティ法律法規体系</title>
    <link href="https://neo01.com/ja/2025/10/CISP-China-Information-Security-Laws/"/>
    <id>https://neo01.com/ja/2025/10/CISP-China-Information-Security-Laws/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.136Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">このコンテンツは元の言語でのみ利用可能です。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP學習指南：中國資訊安全法律法規體系</title>
    <link href="https://neo01.com/zh-TW/2025/10/CISP-China-Information-Security-Laws/"/>
    <id>https://neo01.com/zh-TW/2025/10/CISP-China-Information-Security-Laws/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.137Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">此內容僅提供原始語言版本。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP Learning Guide: China Information Security Laws and Regulations System</title>
    <link href="https://neo01.com/2025/10/CISP-China-Information-Security-Laws/"/>
    <id>https://neo01.com/2025/10/CISP-China-Information-Security-Laws/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.137Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">This content is only available in the original language.</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP学習ガイド：ファイアウォールと侵入検知技術</title>
    <link href="https://neo01.com/ja/2025/10/CISP-Firewall-IDS-Technologies/"/>
    <id>https://neo01.com/ja/2025/10/CISP-Firewall-IDS-Technologies/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.151Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">このコンテンツは元の言語でのみ利用可能です。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
  <entry>
    <title>CISP學習指南：防火牆與入侵檢測技術</title>
    <link href="https://neo01.com/zh-TW/2025/10/CISP-Firewall-IDS-Technologies/"/>
    <id>https://neo01.com/zh-TW/2025/10/CISP-Firewall-IDS-Technologies/</id>
    <published>2025-10-22T00:00:00.000Z</published>
    <updated>2025-10-30T03:02:44.152Z</updated>
    
    <content type="html"><![CDATA[<!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
    
    
    <summary type="html">此內容僅提供原始語言版本。</summary>
    
    
    
    <category term="Cybersecurity" scheme="https://neo01.com/categories/Cybersecurity/"/>
    
    
    <category term="CISP" scheme="https://neo01.com/tags/CISP/"/>
    
  </entry>
  
</feed>
