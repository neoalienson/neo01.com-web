{"meta":{"title":"Decoding Digital Anomalies","subtitle":"Sometimes the feature is the bug in the digital rabbit hole, and vice versa","description":null,"author":"Neo Alienson","url":"http://neo01.com","root":"/"},"pages":[{"title":"Games","date":"2025-10-01T14:12:29.944Z","updated":"2025-10-01T14:12:29.944Z","comments":true,"path":"games.html","permalink":"http://neo01.com/games.html","excerpt":"","text":"A curated collection of minigames developed with AI assisted. 3D üéÆ Connected 4 3D A three-dimensional twist on the classic Connect Four game. Drop pieces in a 4x4x4 cube and try to get four in a row in any direction. 3D gameplay mechanics Interactive 3D visualization prompt More tools coming soon‚Ä¶ .tools-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); gap: 1.5rem; margin: 2rem 0; } .tool-card { position: relative; background: #fff; border: 1px solid #e1e5e9; border-radius: 8px; padding: 1.5rem; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0,0,0,0.1); } .tool-card:hover { transform: translateY(-2px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); border-color: #007acc; } .tool-link { display: block; text-decoration: none; color: inherit; } .tool-link:hover { text-decoration: none; } .prompt-link { position: absolute; bottom: 1rem; right: 1rem; font-size: 0.8rem; color: #666; text-decoration: none; } .prompt-link:hover { color: #007acc; text-decoration: underline; } .article-entry a:hover { text-decoration: none; } .tool-card h3 { margin: 0 0 0.5rem 0; color: #2c3e50; } .tool-description { color: #666; margin-bottom: 1rem; line-height: 1.5; } .tool-features { list-style-type: none; padding: 0; margin: 0; } .tool-features li { padding: 0.25rem 0; color: #555; position: relative; padding-left: 1rem; } .article-entry ul, .article-entry ol { list-style-type: none; } .tool-features li:before { content: \"‚úì\"; position: absolute; left: 0; color: #28a745; font-weight: bold; } .category-header { text-align: center; margin: 3rem 0 2rem 0; padding: 1rem; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 8px; } .category-header h2 { margin: 0; font-size: 1.5rem; } @media (max-width: 768px) { .tools-grid { grid-template-columns: 1fr; gap: 1rem; } .tool-card { padding: 1rem; } } commentBox('5765834504929280-proj')"},{"title":"Home","date":"2020-12-05T08:38:54.000Z","updated":"2025-07-01T13:36:08.042Z","comments":false,"path":"index.html","permalink":"http://neo01.com/index.html","excerpt":"","text":"Recent posts"},{"title":"Tools","date":"2024-12-31T16:00:00.000Z","updated":"2025-10-01T16:43:26.376Z","comments":true,"path":"tools.html","permalink":"http://neo01.com/tools.html","excerpt":"","text":"A curated collection of useful tools for developers and content creators üìù Text Processing üìä Text Statistics Analyze text and get comprehensive statistics including character count, word count, and LLM token estimation. Perfect for content writing and API planning. 8 different text metrics LLM token estimation Reading time calculation üî§ Case Converter Convert text between different case formats including camelCase, snake_case, kebab-case, and more. Essential for developers working with different naming conventions. 15 different case formats Grid layout for easy comparison üé® ASCII Text Drawer Convert text into ASCII art using various fonts. Perfect for creating banners, headers, and decorative text for documentation or terminal applications. Multiple ASCII art fonts Clean, responsive interface üìª NATO Alphabet Converter Convert text to NATO phonetic alphabet for clear communication. Essential for radio communications, spelling out information, and military/aviation contexts. 6 different output formats Handles letters, numbers, and special characters üòÄ Emoji Picker Browse emojis with search and category filtering. Perfect for social media, messaging, and content creation. Category-based browsing Search by emoji name 500+ emojis across all categories üîß Encoding & Formatting üîê Base64 Encoder/Decoder Encode and decode Base64 strings with optional URL-safe mode. Essential for data encoding, API integration, and secure data transmission. Standard and URL-safe Base64 encoding Bidirectional conversion (encode/decode) Unicode and special character support Error handling for invalid input üåê URL Encoder/Decoder Encode and decode URLs and text for safe transmission over the internet. Essential for web development and API work. Manual encode/decode controls Error handling for invalid input üè∑Ô∏è HTML Entities Escape/Unescape Escape and unescape HTML entities for safe web content display. Essential for web development, preventing XSS attacks, and handling special characters. Bidirectional conversion (escape/unescape) Handles common and numeric entities üìã JSON Validator & Formatter Validate, format, and minify JSON with detailed error messages. Complete JSON tool with vertical layout and advanced formatting options. Validation with error details Sort keys alphabetically option Customizable indentation (2 spaces, 4 spaces, tabs) Format and minify operations üîí Security & Analysis üîí Hash Text Generate cryptographic hashes for any text using various algorithms. Useful for data integrity verification, password hashing, and security applications. 7 hash algorithms (MD5, SHA1, SHA256, SHA512, SHA3-256, SHA3-512, RIPEMD160) Secure client-side processing üîç URL Parser Parse and analyze URL components including protocol, host, path, query parameters, and fragments. Perfect for debugging and URL analysis. Extract all URL components Query parameter table view ‚öôÔ∏è System Administration üîß Chmod Calculator Calculate Unix file permissions in octal and symbolic notation. Essential for system administration and file security. Interactive permission checkboxes Octal and symbolic notation display Bidirectional conversion Common permission examples ‚è∞ Crontab Generator Generate cron expressions with visual interface and human-readable descriptions. Perfect for scheduling tasks and automation. Visual dropdown interface Human-friendly descriptions Common scheduling patterns üåê IPv4 Subnet Calculator Calculate IPv4 subnet information from CIDR notation with comprehensive network details. Essential for network administration and planning. Complete subnet information Network and broadcast addresses Host range and count calculations Binary subnet mask display üõ†Ô∏è Utilities üå°Ô∏è Temperature Converter Convert temperatures between Celsius, Fahrenheit, Kelvin, and Rankine scales. Essential for scientific calculations and international communication. 4 temperature scales (¬∞C, ¬∞F, K, ¬∞R) Interactive scale switching ‚è±Ô∏è Chronometer Precise stopwatch and timer with lap functionality. Perfect for timing activities, workouts, or any time-sensitive tasks. Millisecond precision timing Start, pause, stop, and reset controls Lap time recording with individual durations Responsive design for mobile use üñºÔ∏è PNG Metadata Checker Extract and analyze metadata from PNG files with drag and drop support. View image properties, textual data, timestamps, and technical information. Drag and drop file upload Complete PNG metadata extraction Image properties and color information Textual data with formatted display üåç World Clock Display multiple timezone clocks simultaneously. Perfect for coordinating across time zones, scheduling international meetings, or tracking global time. Multiple timezone display with updates Add/remove timezones with easy selection Shows date, time, and timezone information 35+ major cities and timezones included üì± Device Information Display comprehensive information about your device, browser, and screen. Includes advanced user agent parsing and AI capabilities detection. Screen size and orientation details Browser vendor and platform info Editable user agent parsing AI capabilities detection (Chrome's built-in AI) üìä Mermaid Diagram Editor Create and edit Mermaid diagrams with live preview and interactive controls. Perfect for creating flowcharts, sequence diagrams, and other visual documentation. Diagram rendering with updates Multiple diagram types (flowchart, sequence, gantt, pie, class) Zoom and pan controls for large diagrams Example templates for quick start Unit Tests - JavaScript unit tests for the developer tools. More tools coming soon‚Ä¶ .tools-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); gap: 1.5rem; margin: 2rem 0; } .tool-card { display: block; background: #fff; border: 1px solid #e1e5e9; border-radius: 8px; padding: 1.5rem; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0,0,0,0.1); text-decoration: none; color: inherit; } .tool-card:hover { transform: translateY(-2px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); border-color: #007acc; text-decoration: none; } .article-entry a:hover { text-decoration: none; } .tool-card h3 { margin: 0 0 0.5rem 0; color: #2c3e50; } .tool-description { color: #666; margin-bottom: 1rem; line-height: 1.5; } .tool-features { list-style-type: none; padding: 0; margin: 0; } .tool-features li { padding: 0.25rem 0; color: #555; position: relative; padding-left: 1rem; } .article-entry ul, .article-entry ol { list-style-type: none; } .tool-features li:before { content: \"‚úì\"; position: absolute; left: 0; color: #28a745; font-weight: bold; } .category-header { text-align: center; margin: 3rem 0 2rem 0; padding: 1rem; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 8px; } .category-header h2 { margin: 0; font-size: 1.5rem; } @media (max-width: 768px) { .tools-grid { grid-template-columns: 1fr; gap: 1rem; } .tool-card { padding: 1rem; } } commentBox('5765834504929280-proj')"},{"title":"About Me","date":"2008-07-03T09:18:24.000Z","updated":"2025-09-29T15:24:49.829Z","comments":false,"path":"about-me/index.html","permalink":"http://neo01.com/about-me/index.html","excerpt":"","text":"I‚Äôm a technology professional with expertise spanning AI, cloud architecture and cybersecurity. My journey in the tech industry has led me to pursue continuous learning through professional certifications across major cloud platforms and security frameworks. The certificates displayed below represent hands-on experience with enterprise-grade technologies and demonstrate my commitment to staying current with industry best practices and emerging technologies. All certificates shown on this page are earned through proctored examinations. Proctored exams are supervised assessments conducted under strict security measures, including identity verification, live monitoring, and controlled testing environments to ensure exam integrity. This differs from non-proctored assessments, which are typically online courses or self-paced learning modules without supervised testing. The rigorous nature of proctored certifications provides greater assurance of the candidate‚Äôs verified knowledge and skills. Non-proctored course completions are listed on a separate page. Beyond formal certifications, I actively engage with emerging technologies through various learning platforms and vendor training programs. My collection includes digital badges from completion certificates. and more ‚Ä¶ Certificates Google Microsoft Microsoft and LinkedIn ISC2 Alibaba Cloud AWS Other .caption { padding: 15px; } .certs-1 > ul > li > a> img { box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset; border: 1px solid #000; } .certs-1 > ul > li { text-align: center; margin-bottom: 10px; margin-right: 30px; list-style: none; } .certs > ul { padding: 0; margin: 0; -ms-box-orient: horizontal; display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -moz-flex; display: -webkit-flex; display: flex; -webkit-flex-wrap: wrap; flex-wrap: wrap; -webkit-flex-direction: row; flex-direction: row; } .certs > ul > li { width: 360px; text-align: center; margin-bottom: 10px; list-style: none; } .certs > ul > li > a> img { width: 250px; box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset; border: 1px solid #000; }"},{"title":"My Badges","date":"2008-07-02T16:00:00.000Z","updated":"2024-03-26T16:00:00.000Z","comments":false,"path":"about-me/badges.html","permalink":"http://neo01.com/about-me/badges.html","excerpt":"","text":"Badges Microsoft ISC2 Google Skillshop AWS Alibaba Cloud IBM PMP Other .badges ul { padding: 0; margin: 0; -ms-box-orient: horizontal; display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -moz-flex; display: -webkit-flex; display: flex; -webkit-flex-wrap: wrap; flex-wrap: wrap; -webkit-flex-direction: row; flex-direction: row; } .badges > ul > li { width: 200px; text-align: center; margin: 10px; list-style: none; }"},{"title":"AI Playground","date":"2024-12-31T16:00:00.000Z","updated":"2025-10-01T12:44:22.300Z","comments":true,"path":"ai/index.html","permalink":"http://neo01.com/ai/index.html","excerpt":"","text":"Experimental tools using Chrome‚Äôs built-in AI APIs. These tools require Chrome Canary with AI features enabled. Text Processing Text Summarizer Generate summaries of text using Chrome‚Äôs built-in Summarization API. Choose from different summary types, lengths, and formats. Features: Multiple summary types (Key Points, TL;DR, Teaser, Headline) Adjustable length (Short, Medium, Long) Output formats (Markdown, Plain text) Real-time token usage tracking Prompt API Playground Interact with Chrome‚Äôs built-in Language Model (Gemini Nano) through a conversational interface. Experiment with different parameters and see real-time responses. Features: Streaming responses with markdown support Adjustable temperature and top-k parameters Session management and token tracking Conversation history display Raw response inspection Note: These tools require Chrome Canary/Beta with experimental AI features enabled. Visit chrome://flags/#optimization-guide-on-device-model to enable AI features. commentBox('5765834504929280-proj')"},{"title":"More About Me","date":"2008-07-03T09:18:24.000Z","updated":"2025-09-20T16:12:43.511Z","comments":false,"path":"about-me/more.html","permalink":"http://neo01.com/about-me/more.html","excerpt":"","text":"My GitHub My GitHub Profile Contributions Gemini CLI - Fix invalid docker command and invalid JSON in the mcpServers example. HKOpenAI learnGitBranching - Translations - fix typo in zh_TW simple_animated_icon - Add web support in example simple_animated_icon - Upgrade to non-nullable respond6 - add docker file and readme respond6 - remind user the db config can be ignore respond6 - more instructions for setup gists-backup - hide password from prompt using sync-prompt react-chartjs - fix failed to update points for doughnut chart browsermob-proxy - Blacklist with method matcher OpenCV - Fix typos Robotium - Show error message from logcat when its return value is non-zero. chatty - my openshift doesn‚Äôt has OPENSHIFT_INTERNAL_PORT and OPENSHIFT_INTERNAL_IP My StackOverflow My desk 2006 Misc My Docker Hub When did I start using the name Neo Many people link my English name Neo with the film Matrix. In fact, I have been using this English name for over 20 years. Before the dawn of Internet, we communicate around the globe with Bulletin board system (BBS) over telephone lines with modems. My original English name Leo collides with other BBS users and I have to pick another one. I choose Neo and keep using it even it collides with other users from Latin America."},{"title":"Non Protracted Certifications","date":"2008-07-03T09:18:24.000Z","updated":"2025-09-29T15:23:30.931Z","comments":false,"path":"about-me/non_proctored_certs.html","permalink":"http://neo01.com/about-me/non_proctored_certs.html","excerpt":"","text":"Non-proctored certifications are digital credentials earned through online courses and assessments without supervised examination. These certifications demonstrate continuous learning and validate specific technical skills across various technology domains. While they may not carry the same weight as proctored professional certifications, they‚Äôre valuable for building my portfolios. Google Secure Code Warrior AWS Other .caption { padding: 15px; } .certs-1 > ul > li > a> img { box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset; border: 1px solid #000; } .certs-1 > ul > li { text-align: center; margin-bottom: 10px; margin-right: 30px; list-style: none; } .certs > ul { padding: 0; margin: 0; -ms-box-orient: horizontal; display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -moz-flex; display: -webkit-flex; display: flex; -webkit-flex-wrap: wrap; flex-wrap: wrap; -webkit-flex-direction: row; flex-direction: row; } .certs > ul > li { width: 360px; text-align: center; margin-bottom: 10px; list-style: none; } .certs > ul > li > a> img { width: 250px; box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset; border: 1px solid #000; }"},{"title":"Terms and Conditions","date":"2008-07-03T09:16:24.000Z","updated":"2025-07-01T13:54:58.312Z","comments":false,"path":"terms-and-conditions/index.html","permalink":"http://neo01.com/terms-and-conditions/index.html","excerpt":"","text":"Content All content provided on this blog is for informational purposes only. The owner of this blog makes no representations as to the accuracy or completeness of any information on this site or found by following any link on this site. The owner will not be liable for any errors or omissions in this information nor for the availability of this information. The owner will not be liable for any losses, injuries, or damages from the display or use of this information. Copyright All content on this website is the property of the blog owner and is protected by copyright laws. Any reproduction, retransmission, republication, or other use of all or part of this content is expressly prohibited, unless prior written permission has been granted by the blog owner. Links to Third-Party Websites This blog may contain links to third-party websites that are not controlled by the blog owner. These links are provided for your convenience, and the blog owner is not responsible for the content or accuracy of any linked websites. Privacy Policy Disclosure We partner with Microsoft Clarity and Microsoft Advertising to capture how you use and interact with our website through behavioral metrics, heatmaps, and session replay to improve and market our products/services. Website usage data is captured using first and third-party cookies and other tracking technologies to determine the popularity of products/services and online activity. Additionally, we use this information for site optimization, fraud/security purposes, and advertising. For more information about how Microsoft collects and uses your data, visit the Microsoft Privacy Statement AI Generated Content Disclosure This blog site utilizes generative AI tools to enhance our creative process, primarily focusing on writing assistance. Our AI systems, including LLaMA 2, LLaMA 3, and DALL-E, aid in improving readability, detecting spelling and grammar errors, and optimizing search engine rankings, but not limited to these functions. While we do not rely on AI-generated images or videos, human editors thoroughly review any AI-produced content to ensure its accuracy, relevance, and overall quality before incorporating it into this blog posts. This hybrid approach allows us to streamline our workflow while maintaining the highest standards of creative expression. Disclaimer of Warranties The information on this website is provided ‚Äúas is‚Äù without warranties of any kind, either expressed or implied, including but not limited to warranties of merchantability, fitness for a particular purpose, or non-infringement. Limitation of Liability In no event shall the blog owner be liable for any direct, indirect, incidental, special, consequential, or punitive damages arising out of or in connection with the use of, or inability to use, this website or any content on this website. Governing Law and Jurisdiction These terms and conditions shall be governed by and construed in accordance with the laws of the applicable jurisdiction. Any disputes arising from these terms and conditions will be subject to the exclusive jurisdiction of the courts of the applicable jurisdiction. Changes to Terms and Conditions These terms and conditions of use are subject to change at any time and without notice. Your continued use of this website constitutes acceptance of any changes to these terms and conditions. Contact Information If you have any questions or concerns regarding these terms and conditions, please contact the blog owner using the contact information provided on this website."},{"title":"Tools Unit Test","date":"2025-10-01T16:43:19.459Z","updated":"2025-10-01T16:43:19.459Z","comments":true,"path":"tools/test-runner.html","permalink":"http://neo01.com/tools/test-runner.html","excerpt":"","text":".console { background: #1e1e1e; color: #d4d4d4; padding: 15px; border-radius: 6px; white-space: pre-wrap; } .passed { color: #28a745; } .failed { color: #dc3545; } // Prevent auto-initialization in test environment const originalAddEventListener = document.addEventListener; document.addEventListener = (event, handler) => { if (event === 'DOMContentLoaded' && handler.toString().includes('new ')) { return; // Skip auto-initialization } originalAddEventListener.call(document, event, handler); }; // Initialize framework const framework = new TestFramework(); // Restore addEventListener document.addEventListener = originalAddEventListener; // Run tests when page loads document.addEventListener('DOMContentLoaded', () => { const output = document.getElementById('output'); const originalLog = console.log; console.log = (message) => { if (message.startsWith('‚úì')) { output.innerHTML += `${message}\\n`; } else if (message.startsWith('‚úó')) { output.innerHTML += `${message}\\n`; } else { output.textContent += message + '\\n'; } }; framework.run(); console.log = originalLog; }); commentBox('5765834504929280-proj')"},{"title":"Browser Prompt API Playground","date":"2025-10-01T12:38:11.427Z","updated":"2025-10-01T12:38:11.427Z","comments":true,"path":"ai/prompt/index.html","permalink":"http://neo01.com/ai/prompt/index.html","excerpt":"","text":".error { color: #dc3545; background: #f8d7da; padding: 15px; border-radius: 4px; margin: 20px 0; display: none; } form { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 20px; margin-bottom: 20px; } label { display: block; font-weight: 500; color: #495057; margin-bottom: 8px; } textarea { width: calc(100% - 28px); height: 120px; font-family: 'Courier New', monospace; font-size: 14px; border: 1px solid #ddd; border-radius: 4px; padding: 10px; resize: vertical; } .form-controls { display: flex; gap: 15px; margin: 15px 0; align-items: center; } button { padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; } button[type=\"submit\"] { background: #007acc; color: white; } button[type=\"button\"] { background: #6c757d; color: white; } .settings { display: flex; gap: 20px; align-items: center; } .settings label { margin: 0 5px 0 0; } input[type=\"number\"] { width: 80px; padding: 5px 8px; border: 1px solid #ddd; border-radius: 4px; } table { width: 100%; border-collapse: collapse; margin: 20px 0; background: #f8f9fa; } th, td { padding: 10px; text-align: left; border: 1px solid #ddd; } th { background: #e9ecef; font-weight: 500; } .conversation { margin: 20px 0; } .speech-bubble { padding: 15px; margin: 10px 0; border-radius: 8px; font-family: 'Courier New', monospace; } .prompt { background: #e3f2fd; border-left: 4px solid #2196f3; } .response { background: #f3e5f5; border-left: 4px solid #9c27b0; } details { margin: 20px 0; background: #f8f9fa; border: 1px solid #ddd; border-radius: 4px; padding: 10px; } summary { cursor: pointer; font-weight: 500; } #cost { color: #6c757d; font-size: 14px; margin-left: 10px; } This is a demo of Chrome's built-in Prompt API powered by Gemini Nano. Prompt What is the capital of France? Submit prompt Reset session Top-k Temperature Session stats Temperature Top-k Tokens so far Tokens left Total tokens &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Conversation Raw response commentBox('5765834504929280-proj')"},{"title":"Home","date":"2025-07-01T13:56:03.027Z","updated":"2025-07-01T13:56:03.027Z","comments":false,"path":"zh-TW/index.html","permalink":"http://neo01.com/zh-TW/index.html","excerpt":"","text":"ÊúÄËøëÁöÑÂ∏ñÂ≠ê"},{"title":"Browser Text Summarizer Playground","date":"2025-10-01T12:43:02.527Z","updated":"2025-10-01T12:43:02.527Z","comments":true,"path":"ai/summary/index.html","permalink":"http://neo01.com/ai/summary/index.html","excerpt":"","text":"fieldset { border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; margin-bottom: 20px; background: #f8f9fa; } legend { color: #007acc; font-weight: bold; padding: 0 10px; } textarea { height: 200px; font-family: 'Courier New', monospace; font-size: 14px; border: 1px solid #ddd; border-radius: 4px; padding: 10px; resize: vertical; } select { padding: 8px 12px; border: 1px solid #ddd; border-radius: 4px; font-size: 14px; margin-left: 10px; } label { font-weight: 500; color: #495057; } #output { background: #1e1e1e; color: #d4d4d4; padding: 15px; border-radius: 4px; font-family: 'Courier New', monospace; white-space: pre-wrap; min-height: 100px; border: 1px solid #ddd; } .settings-row { display: flex; gap: 20px; margin: 10px 0; align-items: center; } .token-usage { margin-top: 10px; font-size: 14px; color: #6c757d; } .error { color: #dc3545; background: #f8d7da; padding: 10px; border-radius: 4px; margin: 10px 0; } Prompt The quick brown fox jumps over the lazy dog. This is a sample text that demonstrates the summarization capabilities of Chrome's built-in AI. The text can be much longer and more complex, containing multiple paragraphs, technical details, and various topics that need to be condensed into a shorter, more digestible format. Token Usage: 0 Settings Summary Type: Key Points TL;DR Teaser Headline Length: Short Medium Long Format: Markdown Plain text Summary Enter text above to generate a summary... Summarization API is not supported in this browser. Please use Chrome Canary with AI features enabled. Summarization API is not available. Please check your browser settings. commentBox('5765834504929280-proj')"},{"title":"ASP.NET string.Format","date":"2008-08-29T10:38:31.000Z","updated":"2025-07-01T13:46:48.695Z","comments":true,"path":"pages/useful-information/aspnet-string-format.html","permalink":"http://neo01.com/pages/useful-information/aspnet-string-format.html","excerpt":"","text":"{0:d} YY-MM-DD {0:p} ÁôæÂàÜÊØî00.00% {0:N2} 12.68 {0:N0} 13 {0:c2} $12.68 {0:d} 3/23/2003 {0:T} 12:00:00 AM DataGrid-Êï∏ÊìöÊ†ºÂºèË®≠ÁΩÆË°®ÈÅîÂºè Êï∏ÊìöÊ†ºÂºèË®≠ÁΩÆË°®ÈÅîÂºè .NET Framework Ê†ºÂºèË®≠ÁΩÆË°®ÈÅîÂºèÔºåÂÆÉÂú®Êï∏ÊìöÈ°ØÁ§∫Âú®Âàó‰∏≠‰πãÂâçÂÖàÊáâÁî®‰∫éÊï∏Êìö„ÄÇÊ≠§Ë°®ÈÅîÂºèÁî±ÂèØÈÅ∏ÈùúÊÖãÊñáÊú¨ÂíåÁî®‰ª•‰∏ãÊ†ºÂºèË°®Á§∫ÁöÑÊ†ºÂºèË™™ÊòéÁ¨¶ÁµÑÊàêÔºö Èõ∂ÊòØÂèÉÊï∏Á¥¢ÂºïÔºåÂÆÉÊåáÁ§∫Âàó‰∏≠Ë¶ÅÊ†ºÂºèÂåñÁöÑÊï∏ÊìöÂÖÉÁ¥†ÔºõÂõ†Ê≠§ÔºåÈÄöÂ∏∏Áî®Èõ∂‰æÜÊåáÁ§∫Á¨¨‰∏ÄÂÄãÔºà‰∏îÂîØ‰∏ÄÁöÑÔºâÂÖÉÁ¥†„ÄÇformat specifier ÂâçÈù¢Êúâ‰∏ÄÂÄãÂÜíËôü (üòÉÔºåÂÆÉÁî±‰∏ÄÂÄãÊàñÂ§öÂÄãÂ≠óÊØçÁµÑÊàêÔºåÊåáÁ§∫Â¶Ç‰ΩïÊ†ºÂºèÂåñÊï∏Êìö„ÄÇÂèØ‰ª•‰ΩøÁî®ÁöÑÊ†ºÂºèË™™ÊòéÁ¨¶ÂèñÊ±∫‰∫éË¶ÅÊ†ºÂºèÂåñÁöÑÊï∏ÊìöÈ°ûÂûãÔºöÊó•Êúü„ÄÅÊï∏Â≠óÊàñÂÖ∂‰ªñÈ°ûÂûã„ÄÇ‰∏ãË°®È°ØÁ§∫‰∫Ü‰∏çÂêåÊï∏ÊìöÈ°ûÂûãÁöÑÊ†ºÂºèË®≠ÁΩÆË°®ÈÅîÂºèÁöÑÁ§∫‰æã„ÄÇÊúâÈóúÊ†ºÂºèË®≠ÁΩÆË°®ÈÅîÂºèÁöÑÊõ¥Â§ö‰ø°ÊÅØÔºåË´ãÂèÉË¶ãÊ†ºÂºèÂåñÈ°ûÂûã„ÄÇ Currency {0:C} numeric/decimal È°ØÁ§∫‚ÄúPrice:‚ÄùÔºåÂêéË∑ü‰ª•Ë≤®Âπ£Ê†ºÂºèË°®Á§∫ÁöÑÊï∏Â≠ó„ÄÇË≤®Âπ£Ê†ºÂºèÂèñÊ±∫‰∫éÈÄöÈÅé Page Êåá‰ª§Êàñ Web.config Êñá‰ª∂‰∏≠ÁöÑÂçÄÂüüÊÄßÂ±¨ÊÄßÊåáÂÆöÁöÑÂçÄÂüüÊÄßË®≠ÁΩÆ„ÄÇ Integer {0:D4} Êï¥Êï∏()‰∏çËÉΩÂíåÂ∞èÊï∏‰∏ÄËµ∑‰ΩøÁî®„ÄÇ) Âú®Áî±Èõ∂Â°´ÂÖÖÁöÑÂõõÂÄãÂ≠óÁ¨¶ÂØ¨ÁöÑÂ≠óÊÆµ‰∏≠È°ØÁ§∫Êï¥Êï∏„ÄÇ Numeric {0:N2}% È°ØÁ§∫Á≤æÁ¢∫Âà∞Â∞èÊï∏ÈªûÂêéÂÖ©‰ΩçÁöÑÊï∏Â≠óÔºåÂêéË∑ü‚Äú%‚Äù„ÄÇ Numeric/Decimal {0:000.0} ÂõõËàç‰∫îÂÖ•Âà∞Â∞èÊï∏ÈªûÂêé‰∏Ä‰ΩçÁöÑÊï∏Â≠ó„ÄÇ‰∏çÂà∞‰∏â‰ΩçÁöÑÊï∏Â≠óÁî®Èõ∂Â°´ÂÖÖ„ÄÇ Date/Datetime Long {0:D} Èï∑Êó•ÊúüÊ†ºÂºèÔºà‚ÄúThursday, August 06, 1996‚ÄùÔºâ„ÄÇÊó•ÊúüÊ†ºÂºèÂèñÊ±∫‰∫éÈ†ÅÊàñ Web.config Êñá‰ª∂ÁöÑÂçÄÂüüÊÄßË®≠ÁΩÆ„ÄÇ Date/Datetime short {0:d} Áü≠Êó•ÊúüÊ†ºÂºèÔºà‚Äú12/31/99‚ÄùÔºâ„ÄÇ Date/Datetime customize {0:yy-MM-dd} Áî®Êï∏Â≠óÁöÑÂπ¥ÔºçÊúàÔºçÊó•Ë°®Á§∫ÁöÑÊó•ÊúüÔºà96-08-06Ôºâ„ÄÇ 2006-02-22 | asp.netÊï∏ÊìöÊ†ºÂºèÁöÑFormat-- DataFormatString ÊàëÂÄëÂú®ÂëàÁèæÊï∏ÊìöÁöÑÊôÇÂÄôÔºå‰∏çË¶ÅÂ∞áÊú™Á∂ì‰øÆÈ£æÈÅéÁöÑÊï∏ÊìöÂëàÁèæÁµ¶‰ΩøÁî®ËÄÖ„ÄÇ‰æãÂ¶ÇÈáëÈ°ç‰∏ÄËê¨ÂÖÉÔºåÂ¶ÇÊûúÊàëÂÄëÁõ¥Êé•È°ØÁ§∫„Äå10000„ÄçÔºåÂèØËÉΩÊúÉÂ∞éËá¥‰ΩøÁî®ËÄÖÁúãÊàê‰∏ÄÂçÉÊàñÂçÅËê¨ÔºåÈÄ†Êàê‰ΩøÁî®ËÄÖÈñ±ËÆÄÊï∏Êìö‰∏äÁöÑÂõ∞Êìæ„ÄÇËã•ÊàëÂÄëÂ∞á‰∏ÄËê¨ÂÖÉÊΩ§È£æÂêéËº∏Âá∫ÁÇ∫„ÄåNT$10,000„ÄçÔºå‰∏ç‰ΩÜËÆì‰ΩøÊØîËºÉÂ•ΩÈñ±ËÆÄÔºå‰πüÊúÉËÆì‰ΩøÁî®ËÄÖÊ∏õÂ∞ëÁäØÈåØÁöÑÊ©üÊúÉ„ÄÇ\\n‰∏ãÂàóÁï´Èù¢ÁÇ∫ÊΩ§È£æÈÅéÁöÑÁµêÊûúÔºö ‰∏äËø∞Êï∏ÊìöÈô§‰∫ÜÂ∞áDataGrid Web Êéß‰ª∂‰ª•È°èËâ≤‰æÜÂçÄÈöîË®òÈåÑÂ§ñÔºåÊúÄ‰∏ªË¶ÅÂ∞áÊó•Êúü„ÄÅÂñÆÂÉπ‰ª•ÂèäÂ∞èË®àÈÄô‰∏âÂÄãË®àÂ≠óÊÆµÁöÑÊï∏Êìö‰øÆÈ£æÁöÑÊõ¥ÂÆπÊòìÈñ±ËÆÄ„ÄÇË¶Å‰øÆÈ£æÂ≠óÊÆµÁöÑËº∏Âá∫ÔºåÂè™Ë¶ÅË®≠ÂÆöÂ≠óÊÆµÁöÑDataFormatString Â±¨ÊÄßÂç≥ÂèØÔºõÂÖ∂‰ΩøÁî®Ë™ûÊ≥ïÂ¶Ç‰∏ãÔºö DataFormatString=&quot;{0:Ê†ºÂºèÂ≠óÁ¨¶‰∏≤}&quot; ÊàëÂÄëÁü•ÈÅìÂú®DataFormatString ‰∏≠ÁöÑ {0} Ë°®Á§∫Êï∏ÊìöÊú¨Ë∫´ÔºåËÄåÂú®ÂÜíËôüÂêéÈù¢ÁöÑÊ†ºÂºèÂ≠óÁ¨¶‰∏≤‰ª£Ë°®ÊâÄÂÄëÂ∏åÊúõÊï∏ÊìöÈ°ØÁ§∫ÁöÑÊ†ºÂºèÔºõÂè¶Â§ñÂú®ÊåáÂÆöÁöÑÊ†ºÂºèÁ¨¶ËôüÂêéÂèØ‰ª•ÊåáÂÆöÂ∞èÊï∏ÊâÄË¶ÅÈ°ØÁ§∫ÁöÑ‰ΩçÊï∏„ÄÇ‰æãÂ¶ÇÂéü‰æÜÁöÑÊï∏ÊìöÁÇ∫„Äå12.34„ÄçÔºåËã•Ê†ºÂºèË®≠ÂÆöÁÇ∫ {0:N1}ÔºåÂâáËº∏Âá∫ÁÇ∫„Äå12.3„Äç„ÄÇÂÖ∂Â∏∏Áî®ÁöÑÊï∏ÂÄºÊ†ºÂºèÂ¶Ç‰∏ãË°®ÊâÄÁ§∫Ôºö\\n\\nÊ†ºÂºèÂ≠óÁ¨¶‰∏≤ Ë≥áÊñô ÁµêÊûú &quot;{0:C}&quot; 12345.6789 $12,345.68 &quot;{0:C}&quot; -12345.6789 ($12,345.68) &quot;{0:D}&quot; 12345 12345 &quot;{0:D8}&quot; 12345 00012345 &quot;{0:E}&quot; 12345.6789 1234568E+004 &quot;{0:E10}&quot; 12345.6789 1.2345678900E+004 &quot;{0:F}&quot; 12345.6789 12345.68 &quot;{0:F0}&quot; 12345.6789 12346 &quot;{0:G}&quot; 12345.6789 12345.6789 &quot;{0:G7}&quot; 123456789 1.234568E8 &quot;{0:N}&quot; 12345.6789 12,345.68 &quot;{0:N4}&quot; 123456789 123,456,789.0000 &quot;Total: {0:C}&quot; 12345.6789 Total: $12345.68 ÂÖ∂Â∏∏Áî®ÁöÑÊó•ÊúüÊ†ºÂºèÂ¶Ç‰∏ãË°®ÊâÄÁ§∫Ôºö Ê†ºÂºè Ë™™Êòé Ëº∏Âá∫Ê†ºÂºè d Á≤æÁ∞°Êó•ÊúüÊ†ºÂºè MM/dd/yyyy D Ë©≥Á¥∞Êó•ÊúüÊ†ºÂºè dddd, MMMM dd, yyyy f ÂÆåÊï¥Ê†ºÂºè (long date + short time) dddd, MMMM dd, yyyy HH:mm F ÂÆåÊï¥Êó•ÊúüÊôÇÈñìÊ†ºÂºè (long date + long time) dddd, MMMM dd, yyyy HH:mm:ss g ‰∏ÄËà¨Ê†ºÂºè (short date + short time) MM/dd/yyyy HH:mm G ‰∏ÄËà¨Ê†ºÂºè (short date + long time) MM/dd/yyyy HH:mm:ss m,M ÊúàÊó•Ê†ºÂºè MMMM dd\\ns ÈÅ©‰∏≠Êó•ÊúüÊôÇÈñìÊ†ºÂºè yyyy-MM-dd HH:mm:ss t Á≤æÁ∞°ÊôÇÈñìÊ†ºÂºè HH:mm\\nT Ë©≥Á¥∞ÊôÇÈñìÊ†ºÂºè HH:mm:ss string.formatÊ†ºÂºèÁµêÊûú String.Format ¬© Currency: . . . . . . . . ($123.00) (D) Decimal:. . . . . . . . . -123 (E) Scientific: . . . . . . . -1.234500E+002 (F) Fixed point:. . . . . . . -123.45 (G) General:. . . . . . . . . -123 (N) Number: . . . . . . . . . -123.00 (P) Percent:. . . . . . . . . -12,345.00 % ¬Æ Round-trip: . . . . . . . -123.45 (X) Hexadecimal:. . . . . . . FFFFFF85 (d) Short date: . . . . . . . 6/26/2004 (D) Long date:. . . . . . . . Saturday, June 26, 2004 (t) Short time: . . . . . . . 8:11 PM (T) Long time:. . . . . . . . 8:11:04 PM (f) Full date/short time: . . Saturday, June 26, 2004 8:11 PM (F) Full date/long time:. . . Saturday, June 26, 2004 8:11:04 PM (g) General date/short time:. 6/26/2004 8:11 PM (G) General date/long time: . 6/26/2004 8:11:04 PM (M) Month:. . . . . . . . . . June 26 ¬Æ RFC1123:. . . . . . . . . Sat, 26 Jun 2004 20:11:04 GMT (s) Sortable: . . . . . . . . 2004-06-26T20:11:04 (u) Universal sortable: . . . 2004-06-26 20:11:04Z (invariant) (U) Universal sortable: . . . Sunday, June 27, 2004 3:11:04 AM (Y) Year: . . . . . . . . . . June, 2004 (G) General:. . . . . . . . . Green (F) Flags:. . . . . . . . . . Green (flags or integer) (D) Decimal number: . . . . . 3 (X) Hexadecimal:. . . . . . . 00000003 Ë™™ÊòéÔºö String.Format Â∞áÊåáÂÆöÁöÑ String ‰∏≠ÁöÑÊØèÂÄãÊ†ºÂºèÈ†ÖÊõøÊèõÁÇ∫Áõ∏ÊáâÂ∞çË±°ÁöÑÂÄºÁöÑÊñáÊú¨Á≠âÊïàÈ†Ö„ÄÇ ‰æãÂ≠êÔºö int iVisit = 100; string szName = &quot;Jackfled&quot;; Response.Write(String.Format(&quot;ÊÇ®ÁöÑÂ∏≥ËôüÊòØÔºö{0} „ÄÇË®™Âïè‰∫Ü {1} Ê¨°.&quot;, szName, iVisit)); commentBox('5765834504929280-proj')"},{"title":"Hexo Blogging Cheatsheet","date":"2022-12-08T01:56:37.000Z","updated":"2025-07-01T13:40:44.838Z","comments":false,"path":"pages/Hexo-Blogging-Cheatsheet/index.html","permalink":"http://neo01.com/pages/Hexo-Blogging-Cheatsheet/index.html","excerpt":"","text":"This page also used for testing components used in the posts and pages. Useful links Hexo Docs List of XML and HTML character entity references on Wikipedia My blog‚Äôs information Check if my domain is blocked in mainland Design Font Awesome Frequently used Emoji üòÑ :D(shortcut) üòÑ :smile: üòä :blush: üòç :heart_eyes: üòì :sweat: üëç :thumbsup: üòã :yum: üò∞ :cold_sweat: üò± :scream: üò≠ :sob: üòú :stuck_out_tongue_winking_eye: üòó :kissing: üò™ :sleepy: üí© :poop: ‚úåÔ∏è :v: üíØ :100: üôà :see_no_evil: üôâ :hear_no_evil: üôä :speak_no_evil: üíã :kiss: üíÄ :skull: üíß :droplet: üéÜ :fireworks: üì¢ :loudspeaker: ‚ö†Ô∏è :warning: üö´ :no_entry_sign: ‚úÖ :white_check_mark: ‚ùå :x: „äôÔ∏è :secret: ‚ÅâÔ∏è :interrobang: ‚ÄºÔ∏è :bangbang: and more from Emoji Cheatsheet CSS Keys Control &lt;kbd&gt;Contro&lt;/kbd&gt; Shift ‚áß &lt;kbd&gt;Shift &amp;#x21E7;&lt;/kbd&gt; - use Unicode characters Markdown (with plugins) ++Inserted++ Inserted Footnote [^1] for the mark[1], [^1]: for the note Use {% raw %}{% endraw %} if the markdown cause you trouble on {{}} or {%%} Youtube Video {% youtube [youtube id] %} Action Markdown Sample sub H~2~0 H20 sup x^2^ x2 Bold **bold** bold Italic *italic* italic Bold and Italic ***bold and italic*** bold and italic Marked ==marked== marked Strikethrough ~~strikethrough~~ strikethrough Inline code `inline code` inline code Link [link text](https://example.com) link text Image ![alt text](https://example.com/image.jpg) Attributes with style class, eg: # header &#123;.style-me&#125; paragraph &#123;data-toggle&#x3D;modal&#125; paragraph *style me*&#123;.red&#125; more text output &lt;h1 class&#x3D;&quot;style-me&quot;&gt;header&lt;&#x2F;h1&gt; &lt;p data-toggle&#x3D;&quot;modal&quot;&gt;paragraph&lt;&#x2F;p&gt; &lt;p&gt;paragraph &lt;em class&#x3D;&quot;red&quot;&gt;style me&lt;&#x2F;em&gt; more text&lt;&#x2F;p&gt; Table Column Alignment Code: | Default | Left | Center | Right | | --- | :-- | :-: | --: | | 1 | 1 | 1 | 1 | | 22 | 22 | 22 | 22 | | 333 | 333 | 333 | 333 | Result: Default Left Center Right 1 1 1 1 22 22 22 22 333 333 333 333 Blockquote Code: &gt; Some quote text Result: Some quote text Ordered list Code: 1. item 1 2. item 2 Result: item 1 item 2 Unordered list Code: - item 1 - item 2 Result: item 1 item 2 Horizontal rule Code: --- Result: Code block Result: Code block Code: ~~~ Code block ~~~ Github Card Code: &#123;% githubCard user:neoalienson repo:pachinko %&#125; Result: Mermaid JS Prerendered. Code: &#123;% mermaid %&#125; block-beta columns 1 db((&quot;DB&quot;)) blockArrowId6&lt;[&quot;&nbsp;&nbsp;&nbsp;&quot;]&gt;(down) block:ID A B[&quot;A wide one in the middle&quot;] C end space D ID --&gt; D C --&gt; D style B fill:#969,stroke:#333,stroke-width:4px &#123;% endmermaid %&#125; Result: block-beta columns 1 db((\"DB\")) blockArrowId6(down) block:ID A B[\"A wide one in the middle\"] C end space D ID --> D C --> D style B fill:#969,stroke:#333,stroke-width:4px Live rendering mermaid.initialize({ startOnLoad: true }); block-beta columns 1 db((\"DB\")) blockArrowId6(down) block:ID A B[\"A wide one in the middle\"] C end space D ID --> D C --> D style B fill:#969,stroke:#333,stroke-width:4px Barchart Barchart from easy charts Result: var chart = echarts.init(document.getElementById('6hxwzbuzu0d')); chart.setOption({\"title\":{\"text\":\"Sample Chart\"},\"animation\":true,\"tooltip\":{\"trigger\":\"axis\"},\"xAxis\":{\"data\":[\"Apple\",\"Orange\",\"Banana\",\"Lemon\"]},\"yAxis\":{},\"series\":[{\"name\":\"Value\",\"type\":\"bar\",\"data\":[\"50\",\"740\",\"218\",\"193\"]}]}); Code: &#123;% barchart &#39;Sample Chart&#39; %&#125; Apple | Orange | Banana | Lemon 50 | 740 | 218 | 193 &#123;% endbarchart %&#125; Footnote sample ‚Ü©Ô∏é"},{"title":"Guides","date":"2023-04-04T13:03:05.000Z","updated":"2025-07-01T13:48:36.704Z","comments":false,"path":"pages/useful-information/guides.html","permalink":"http://neo01.com/pages/useful-information/guides.html","excerpt":"","text":"Mac [Change Java version on MacOS] http://www.guigarage.com/2013/02/change-java-version-on-mac-os/ Others ASP.NET string.Format (Chinese)"},{"title":"Useful Tools","date":"2023-04-04T13:03:05.000Z","updated":"2025-09-30T15:53:08.416Z","comments":false,"path":"pages/useful-information/useful_tools.html","permalink":"http://neo01.com/pages/useful-information/useful_tools.html","excerpt":"","text":"asciinema - A tool to record ascii and playback. Useful for presentation. Cybersecurity Snort (IDS)"},{"title":"Useful Information","date":"2023-04-04T13:03:05.000Z","updated":"2025-09-30T15:53:57.628Z","comments":false,"path":"pages/useful-information/index.html","permalink":"http://neo01.com/pages/useful-information/index.html","excerpt":"","text":"About This page contains useful information to myself. It also serve as a testing page for this blog. Frequently Used Prompt Convert a string from blog title to Linux friendly filename. convert string by replacing colon with dash, nonnalpha numeric with underscore. reduce repetiting underscore or dash to single underscore or dash: Software Development Security Instrumentation tookit Mask sensitive information such as Proxy-Authorization when running command, curl -v https://somewhere.need.authenticated.proxy 2&gt;&amp;1 | sed -E &quot;s/(proxy-authorization:).*/\\1: ***/i&quot; Nessus OWASP SANS Vulnerability Database Miscellaneous Creating an Alpine Linux package Visual Studio Code Keyboard Shortcuts for Windows Frequently Used Commands Shutdown Windows immediately shutdown -r -t 0, useful when you remote to a Windows PC Switch java version export JAVA_HOME&#x3D;&#96;&#x2F;usr&#x2F;libexec&#x2F;java_home -v 1.8&#96; Git Undo (Not pushed) git reset --soft HEAD~ Deleting a remote branch git push [remote] --delete [branch] e.g., git push origin --delete feature/branch Sync remote branch and delete remote non-existing local copy git fetch --prune List the commit different between branches git rev-list [branch]...[another branch] List the commit different between branches with arrow indicates which branch owns the commit git rev-list --left-right [branch]...[another branch] List the commit of a branch is ahead/behind to a remote branch git rev-list [branch]...[remote]/[another branch] Show the number of ahead of behind between branches git rev-list --left-right count [branch]...[another branch] Update submodules with latest commit git submodule update --remote Clean up orphan commits git gc --prune=now --aggressive Windows Remove XBox Remove XBox with Powershell Get-ProvisionedAppxPackage -Online | Where-Object &#123; $_.PackageName -match &quot;xbox&quot; &#125; | ForEach-Object &#123; Remove-ProvisionedAppxPackage -Online -AllUsers -PackageName $_.PackageName &#125; Check if any Xbox application is left dism /Online /Get-ProvisionedAppxPackages | Select-String PackageName | Select-String xbox Windows shortcuts Only those that are frequently used and easily forgotten are listed. Move Window to another monitor ‚äû Windows + ‚áß Shift + ‚Üê / ‚Üí Switch to another desktop ‚äû Windows + ‚åÉ Control + ‚Üê / ‚Üí Task View ‚äû Windows + Tab Open Action Center ‚äû Windows + A Display/Hide Desktop ‚äû Windows + D Open File Explorer ‚äû Windows + E Quick Link Menu (System tools such as Event Viewer) ‚äû Windows + X Lock ‚äû Windows + L Editing Switch Voice Typing ‚äû Windows + H Open Clipboard History ‚äû Windows + ‚åÉ Control + V Paste as plain text[1] ‚äû Windows + V[2] Capture screen and then OCR to clipboard[1:1] ‚äû Windows + T[2:1] Emoji ‚äû Windows + .[2:2] Visual Studio Code shortcuts Only those that are frequently used and easily forgotten are listed. Refernce from https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf Basic User Settings ‚åÉ Control + , Select all occurences of Find match Alt + Enter Quick Fix ‚åÉ Control&lt; + . Ctrl+K Ctrl+X ‚åÉ Control&lt; + K ‚åÉ Control&lt; + X Navigation Go to Line‚Ä¶ ‚åÉ Control + G Go to File‚Ä¶ ‚åÉ Control + P Go to next error or warning F8 Focus into 1st, 2nd or 3rd‚Ä¶ editor group ‚åÉ Control + 1/2/3‚Ä¶ Spit editor ‚åÉ Control + &lt;/kbd&gt; Show integrated termina ‚åÉ Control + ` Create new terminal ‚åÉ Control + ‚áß Shift + ` Show Explorer / Toggle focus ‚åÉ Control + ‚áß Shift + E Show Search ‚åÉ Control + ‚áß Shift + S Show Source Control ‚åÉ Control + ‚áß Shift + G Show Debug ‚åÉ Control + ‚áß Shift + D Show Extension ‚åÉ Control + ‚áß Shift + X Replace in files ‚åÉ Control + ‚áß Shift + H Show Output panel ‚åÉ Control + ‚áß Shift + U Open Markdown preview to the side ‚åÉ Control + K V Debug Toggle breakpoin F9 Start/Continue F5 Step over F10 Step into F11 Step out ‚áß Shift + F11 Others Guides Learning Tools Requires PowerToys ‚Ü©Ô∏é ‚Ü©Ô∏é Customized shortcut ‚Ü©Ô∏é ‚Ü©Ô∏é ‚Ü©Ô∏é"},{"title":"Learning Resources","date":"2023-04-04T13:03:05.000Z","updated":"2025-07-01T13:51:20.379Z","comments":false,"path":"pages/useful-information/learning.html","permalink":"http://neo01.com/pages/useful-information/learning.html","excerpt":"","text":"Architecture Microsoft Azure Architecture Center Coding CodeSchool CodeFight HackerRank CodeCombat CodinGame Learn Git Branching Learn Kubernetes using Interactive Browser-Based Scenarios Cybersecurity (ISC)2 International Information Systems Security Certification Consortium Others High Performance Browser Networking UN Climate Change Learning"},{"title":"ASCII Text Drawer","date":"2025-10-01T12:15:59.439Z","updated":"2025-10-01T12:15:59.439Z","comments":true,"path":"tools/ascii-text-drawer/index.html","permalink":"http://neo01.com/tools/ascii-text-drawer/index.html","excerpt":"","text":".input-group { margin-bottom: 20px; } label { display: block; margin-bottom: 8px; font-weight: 600; color: #555; } input[type=\"text\"], select { width: calc(100% - 28px); padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-size: 16px; transition: border-color 0.3s; } input[type=\"text\"]:focus, select:focus { outline: none; border-color: #007acc; } .output { background: #1e1e1e; color: #d4d4d4; padding: 20px; border-radius: 6px; font-family: 'Courier New', monospace; white-space: pre; overflow-x: auto; margin-top: 20px; border: 2px solid #333; } .font-result { margin-bottom: 30px; padding-bottom: 20px; border-bottom: 1px solid #444; } .font-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-family: Arial, sans-serif; } .copy-btn { background: #007acc; color: white; border: none; padding: 10px 20px; border-radius: 6px; cursor: pointer; margin-top: 10px; font-size: 14px; transition: background-color 0.3s; } .copy-btn:hover { background: #005a9e; } .back-link { display: inline-block; margin-bottom: 20px; color: #007acc; text-decoration: none; font-weight: 500; } .back-link:hover { text-decoration: underline; } Text to convert: Font Category: Popular 3D & Effects Small & Compact Decorative Script & Cursive Tech & Digital Block & Solid Banner & Headers Monospace Themed & Special Geometric Retro & Vintage Stylized & Effects Artistic & Creative Money Fonts Named Fonts AMC Collection Efti Collection Miscellaneous All Fonts Copy to Clipboard commentBox('5765834504929280-proj')"},{"title":"Base64 Encoder/Decoder","date":"2025-10-01T12:16:28.099Z","updated":"2025-10-01T12:16:28.099Z","comments":true,"path":"tools/base64-converter/index.html","permalink":"http://neo01.com/tools/base64-converter/index.html","excerpt":"","text":".controls { display: flex; gap: 15px; margin-bottom: 20px; align-items: center; } .checkbox-container { display: flex; align-items: center; gap: 8px; } input[type=\"checkbox\"] { width: 18px; height: 18px; } .input-group { margin-bottom: 20px; } label { display: block; margin-bottom: 8px; font-weight: 600; color: #555; } textarea { width: calc(100% - 28px); min-height: 120px; padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-family: 'Courier New', monospace; font-size: 14px; resize: vertical; box-sizing: border-box; } textarea:focus { outline: none; border-color: #007acc; } .button-group { display: flex; gap: 10px; margin: 15px 0; } button { padding: 10px 20px; border: none; border-radius: 6px; cursor: pointer; font-size: 14px; font-weight: 600; transition: background-color 0.2s; } .btn-primary { background: #007acc; color: white; } .btn-primary:hover { background: #005a9e; } .btn-secondary { background: #6c757d; color: white; } .btn-secondary:hover { background: #545b62; } .btn-copy { background: #28a745; color: white; padding: 8px 16px; font-size: 12px; } .btn-copy:hover { background: #218838; } .output-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; } .error { color: #dc3545; font-size: 14px; margin-top: 5px; } .success { color: #28a745; font-size: 14px; margin-top: 5px; } URL Safe Input Text: Encode to Base64 Decode from Base64 Output: Copy commentBox('5765834504929280-proj')"},{"title":"Case Converter","date":"2025-10-01T09:12:45.579Z","updated":"2025-10-01T09:12:45.579Z","comments":true,"path":"tools/case-converter/index.html","permalink":"http://neo01.com/tools/case-converter/index.html","excerpt":"","text":"textarea { font-size: 16px; } .case-result { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; position: relative; } .case-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 14px; text-transform: uppercase; } .case-output { background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; font-family: 'Courier New', monospace; word-break: break-all; min-height: 40px; white-space: pre-wrap; } .back-link { display: inline-block; margin-bottom: 20px; color: #007acc; text-decoration: none; font-weight: 500; } .back-link:hover { text-decoration: underline; } Text to convert: Hello World! This is a Sample Text. commentBox('5765834504929280-proj')"},{"title":"Chmod Calculator","date":"2025-10-01T12:22:26.248Z","updated":"2025-10-01T12:22:26.248Z","comments":true,"path":"tools/chmod-calculator/index.html","permalink":"http://neo01.com/tools/chmod-calculator/index.html","excerpt":"","text":".permission-grid { display: grid; grid-template-columns: 100px 1fr 1fr 1fr; gap: 10px; margin-bottom: 20px; align-items: center; } .permission-header { font-weight: bold; color: #007acc; text-align: center; } .permission-row { display: contents; } .permission-label { font-weight: 600; color: #555; } .permission-checkboxes { display: flex; gap: 10px; justify-content: center; } .checkbox-group { display: flex; flex-direction: column; align-items: center; gap: 5px; } input[type=\"checkbox\"] { width: 20px; height: 20px; } .checkbox-label { font-size: 12px; color: #666; } .output-content { font-size: 18px; font-weight: bold; text-align: center; } .numeric-input { width: 100%; padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-size: 16px; font-family: 'Courier New', monospace; text-align: center; } .numeric-input:focus { outline: none; border-color: #007acc; } File Permissions: Owner Group Others Read Write Execute Copy Octal Notation 644 Copy Symbolic Notation rw-r--r-- Copy Umask 022 Or enter octal value: commentBox('5765834504929280-proj')"},{"title":"Chronometer","date":"2025-10-01T12:22:22.418Z","updated":"2025-10-01T12:22:22.418Z","comments":true,"path":"tools/chronometer/index.html","permalink":"http://neo01.com/tools/chronometer/index.html","excerpt":"","text":".chronometer-container { text-align: center; max-width: 600px; margin: 0 auto; } .time-display { font-family: 'Courier New', monospace; font-size: 4rem; font-weight: bold; color: #007acc; background: #f8f9fa; border: 3px solid #e9ecef; border-radius: 10px; padding: 30px; margin: 30px 0; min-height: 120px; display: flex; align-items: center; justify-content: center; } .controls { display: flex; gap: 15px; justify-content: center; margin: 20px 0; flex-wrap: wrap; } .btn { padding: 12px 24px; border: none; border-radius: 6px; cursor: pointer; font-size: 16px; font-weight: 500; min-width: 100px; } .btn-start { background: #28a745; color: white; } .btn-pause { background: #ffc107; color: #212529; } .btn-stop { background: #dc3545; color: white; } .btn-reset { background: #6c757d; color: white; } .btn-lap { background: #17a2b8; color: white; } .laps-container { margin-top: 30px; text-align: left; } .laps-title { font-size: 1.2rem; font-weight: bold; color: #495057; margin-bottom: 15px; } .lap-time { background: #f8f9fa; border: 1px solid #e9ecef; border-radius: 4px; padding: 10px 15px; margin: 5px 0; font-family: 'Courier New', monospace; display: flex; justify-content: space-between; } .lap-number { color: #6c757d; } .lap-duration { color: #007acc; font-weight: bold; } @media (max-width: 768px) { .time-display { font-size: 2.5rem; padding: 20px; } .controls { gap: 10px; } .btn { padding: 10px 16px; font-size: 14px; min-width: 80px; } } 00:00:00.000 Start Pause Stop Reset Lap Lap Times commentBox('5765834504929280-proj')"},{"title":"Crontab Generator","date":"2025-10-01T12:22:16.401Z","updated":"2025-10-01T12:22:16.401Z","comments":true,"path":"tools/crontab-generator/index.html","permalink":"http://neo01.com/tools/crontab-generator/index.html","excerpt":"","text":"select, input[type=\"number\"] { width: calc(100% - 28px); padding: 8px; border: 2px solid #ddd; border-radius: 6px; font-size: 14px; transition: border-color 0.3s; } select:focus, input[type=\"number\"]:focus { outline: none; border-color: #007acc; } .time-grid { display: grid; grid-template-columns: repeat(5, 1fr); gap: 15px; margin-bottom: 20px; } .output-content { font-size: 18px; font-weight: bold; text-align: center; } .description { background: #e3f2fd; border: 2px solid #2196f3; border-radius: 6px; padding: 15px; margin-bottom: 20px; } .description-text { color: #1976d2; font-weight: 500; text-align: center; } Minute (0-59) Every minute 0 Every 5 minutes Every 10 minutes Every 15 minutes Every 30 minutes Hour (0-23) Every hour 0 (midnight) 6 AM 12 PM (noon) 6 PM Day (1-31) Every day 1st 15th Every 7 days Month (1-12) Every month January June December Weekday (0-7) Every day Sunday Monday Tuesday Wednesday Thursday Friday Saturday Copy Cron Expression * * * * * Runs every minute commentBox('5765834504929280-proj')"},{"title":"Device Information","date":"2025-10-01T12:21:55.960Z","updated":"2025-10-01T12:21:55.960Z","comments":true,"path":"tools/device-information/index.html","permalink":"http://neo01.com/tools/device-information/index.html","excerpt":"","text":".info-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-bottom: 20px; } .info-section { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; } .info-section h3 { margin: 0 0 15px 0; color: #007acc; font-size: 16px; border-bottom: 1px solid #e9ecef; padding-bottom: 8px; } .info-item { display: flex; justify-content: space-between; align-items: center; padding: 8px 0; border-bottom: 1px solid #f0f0f0; } .info-item:last-child { border-bottom: none; } .info-label { font-weight: 500; color: #495057; } .info-value { font-family: 'Courier New', monospace; color: #212529; text-align: right; word-break: break-all; } .copy-btn { background: #007acc; color: white; border: none; padding: 4px 8px; border-radius: 3px; cursor: pointer; font-size: 12px; margin-left: 8px; } .user-agent-block { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; margin-top: 20px; } .user-agent-block h3 { margin: 0 0 15px 0; color: #007acc; font-size: 16px; border-bottom: 1px solid #e9ecef; padding-bottom: 8px; } .user-agent-text { font-family: 'Courier New', monospace; background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; word-break: break-all; white-space: pre-wrap; margin-bottom: 10px; } commentBox('5765834504929280-proj')"},{"title":"IPv4 Subnet Calculator","date":"2025-10-01T12:21:31.001Z","updated":"2025-10-01T12:21:31.001Z","comments":true,"path":"tools/ipv4-subnet-calculator/index.html","permalink":"http://neo01.com/tools/ipv4-subnet-calculator/index.html","excerpt":"","text":"input[type=\"text\"] { width: calc(100% - 28px); padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-size: 16px; transition: border-color 0.3s; font-family: 'Courier New', monospace; } input[type=\"text\"]:focus { outline: none; border-color: #007acc; } .subnet-result { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; position: relative; } .subnet-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 14px; text-transform: uppercase; } .subnet-output { background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; font-family: 'Courier New', monospace; word-break: break-all; min-height: 40px; white-space: pre-wrap; } .class-buttons { display: flex; gap: 10px; margin-bottom: 20px; } .class-btn { background: #007acc; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; font-size: 12px; transition: background-color 0.3s; } .class-btn:hover { background: #005a9e; } IP Address with CIDR (e.g., 192.168.1.0/24): Class A (/8) Class B (/16) Class C (/24) commentBox('5765834504929280-proj')"},{"title":"Hash Text","date":"2025-10-01T12:21:41.055Z","updated":"2025-10-01T12:21:41.055Z","comments":true,"path":"tools/hash-text/index.html","permalink":"http://neo01.com/tools/hash-text/index.html","excerpt":"","text":"textarea { font-size: 16px; } .hash-result { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; position: relative; } .hash-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 14px; text-transform: uppercase; } .hash-output { background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; font-family: 'Courier New', monospace; word-break: break-all; min-height: 40px; white-space: pre-wrap; } Text to hash: Hello World! commentBox('5765834504929280-proj')"},{"title":"Mermaid Diagram Editor","date":"2025-10-01T12:19:06.736Z","updated":"2025-10-01T12:19:06.736Z","comments":true,"path":"tools/mermaid-editor/index.html","permalink":"http://neo01.com/tools/mermaid-editor/index.html","excerpt":"","text":".editor-container { display: grid; grid-template-columns: 1fr; gap: 20px; margin-bottom: 20px; } .editor-panel { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; } .editor-panel h3 { margin: 0 0 10px 0; color: #007acc; font-size: 16px; } textarea { width: calc(100% - 28px); height: 200px; font-family: 'Courier New', monospace; font-size: 14px; border: 1px solid #ddd; border-radius: 4px; padding: 10px; resize: vertical; } .controls { display: flex; gap: 10px; margin: 10px 0; } .btn { padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; } .btn-primary { background: #007acc; color: white; } .btn-secondary { background: #6c757d; color: white; } #diagram-output { min-height: 300px; border: 1px solid #ddd; border-radius: 4px; padding: 20px; background: white; text-align: center; overflow: hidden; cursor: grab; position: relative; } #diagram-output.panning { cursor: grabbing; } #diagram-output svg { transition: transform 0.1s ease; } .error { color: #dc3545; background: #f8d7da; padding: 10px; border-radius: 4px; margin: 10px 0; } .examples { display: flex; gap: 10px; margin: 10px 0; flex-wrap: wrap; } .example-btn { padding: 5px 10px; background: #e9ecef; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; font-size: 12px; } .example-btn:hover { background: #dee2e6; } Mermaid Code Flowchart Sequence Gantt Pie Chart Class Diagram graph TD A[Start] --> B{Is it?} B -->|Yes| C[OK] C --> D[Rethink] D --> B B ---->|No| E[End] Render Clear Copy Code Diagram Output Zoom In Zoom Out Reset Zoom Download SVG Enter Mermaid code above and click Render to see the diagram... commentBox('5765834504929280-proj')"},{"title":"Emoji Picker","date":"2025-10-01T12:15:06.055Z","updated":"2025-10-01T12:15:06.055Z","comments":true,"path":"tools/emoji-picker/index.html","permalink":"http://neo01.com/tools/emoji-picker/index.html","excerpt":"","text":".search-group { margin-bottom: 20px; } input[type=\"text\"] { width: calc(100% - 28px); padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-size: 16px; transition: border-color 0.3s; } input[type=\"text\"]:focus { outline: none; border-color: #007acc; } .categories { display: flex; gap: 10px; margin-bottom: 20px; flex-wrap: wrap; } .category-btn { background: #f8f9fa; border: 2px solid #e9ecef; padding: 8px 16px; border-radius: 6px; cursor: pointer; font-size: 14px; transition: all 0.3s; } .category-btn:hover, .category-btn.active { background: #007acc; color: white; border-color: #007acc; } .emoji-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(60px, 1fr)); gap: 10px; max-height: 400px; overflow-y: auto; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; } .emoji-item { display: flex; flex-direction: column; align-items: center; padding: 10px; border-radius: 6px; cursor: pointer; transition: background-color 0.3s; } .emoji-item:hover { background: #f8f9fa; } .emoji-char { font-size: 24px; margin-bottom: 5px; } .emoji-name { font-size: 10px; text-align: center; color: #666; } .copied-message { position: fixed; top: 20px; right: 20px; background: #28a745; color: white; padding: 10px 20px; border-radius: 6px; z-index: 1000; opacity: 0; transition: opacity 0.3s; } .copied-message.show { opacity: 1; } Emoji copied! commentBox('5765834504929280-proj')"},{"title":"PNG Metadata Checker","date":"2025-10-01T17:00:51.751Z","updated":"2025-10-01T17:00:51.751Z","comments":true,"path":"tools/png-metadata-checker/index.html","permalink":"http://neo01.com/tools/png-metadata-checker/index.html","excerpt":"","text":".tool-container { margin: 0 auto; padding: 20px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; } .drop-zone { border: 2px dashed #007acc; border-radius: 8px; padding: 40px; text-align: center; background: #f8f9fa; margin-bottom: 20px; transition: all 0.3s ease; cursor: pointer; } .drop-zone.dragover { border-color: #0056b3; background: #e3f2fd; } .drop-zone input[type=\"file\"] { display: none; } .metadata-output { background: #1e1e1e; color: #d4d4d4; padding: 20px; border-radius: 8px; font-family: 'Courier New', monospace; white-space: pre-wrap; margin-top: 20px; display: none; } .metadata-section { margin-bottom: 15px; padding: 10px; background: #2d2d30; border-radius: 4px; } .metadata-title { color: #569cd6; font-weight: bold; margin-bottom: 8px; } .metadata-item { margin: 5px 0; padding-left: 10px; } .metadata-item .metadata-value { padding-left: 0; } .metadata-key { color: #9cdcfe; } .metadata-value { color: #ce9178; } .error { color: #f44336; background: #ffebee; padding: 10px; border-radius: 4px; margin-top: 10px; } .file-info { background: #e8f5e8; padding: 15px; border-radius: 8px; margin-bottom: 20px; border-left: 4px solid #4caf50; } .clear-btn { background: #dc3545; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; margin-top: 10px; } .clear-btn:hover { background: #c82333; } Upload or drag and drop a PNG file to extract and analyze its metadata information. üìÅ Click here or drag and drop a PNG file commentBox('5765834504929280-proj')"},{"title":"SQL Prettify","date":"2025-10-01T12:21:13.669Z","updated":"2025-10-01T12:21:13.669Z","comments":true,"path":"tools/sql-prettify/index.html","permalink":"http://neo01.com/tools/sql-prettify/index.html","excerpt":"","text":"textarea { min-height: 150px; } .control-group select { padding: 5px; border: 1px solid #ddd; border-radius: 4px; } SQL to format: SELECT u.id, u.name, p.title FROM users u JOIN posts p ON u.id = p.user_id WHERE u.active = 1 AND p.published = 1 ORDER BY p.created_at DESC; Keyword Case: UPPER lower Preserve Indent Style: Standard Tabular Left Tabular Right Format SQL Minify SQL Copy Formatted SQL commentBox('5765834504929280-proj')"},{"title":"NATO Alphabet Converter","date":"2025-10-01T09:14:34.828Z","updated":"2025-10-01T09:14:34.828Z","comments":true,"path":"tools/nato-alphabet/index.html","permalink":"http://neo01.com/tools/nato-alphabet/index.html","excerpt":"","text":"textarea { font-size: 16px; } .nato-result { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; position: relative; margin-bottom: 15px; } .nato-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 14px; text-transform: uppercase; } .nato-output { background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; font-family: 'Courier New', monospace; word-break: break-all; min-height: 40px; white-space: pre-wrap; } Text to convert to NATO alphabet: Hello World commentBox('5765834504929280-proj')"},{"title":"JSON Validator & Formatter","date":"2025-10-01T12:21:26.748Z","updated":"2025-10-01T12:21:26.748Z","comments":true,"path":"tools/json-validator/index.html","permalink":"http://neo01.com/tools/json-validator/index.html","excerpt":"","text":".json-container { display: grid; grid-template-columns: 1fr; gap: 20px; margin-bottom: 20px; } .json-panel { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; } .json-panel h3 { margin: 0 0 10px 0; color: #007acc; font-size: 16px; } textarea { width: 97%; height: 300px; font-family: 'Courier New', monospace; font-size: 14px; border: 1px solid #ddd; border-radius: 4px; padding: 10px; resize: vertical; } .status { margin: 10px 0; padding: 8px 12px; border-radius: 4px; font-weight: bold; } .status.valid { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; } .status.invalid { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; } .controls { display: flex; gap: 10px; margin: 10px 0; } .btn { padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; } .btn-primary { background: #007acc; color: white; } .btn-secondary { background: #6c757d; color: white; } .options { display: flex; gap: 15px; margin: 10px 0; align-items: center; } .option-group { display: flex; align-items: center; gap: 5px; } select, input[type=\"number\"] { padding: 4px 8px; border: 1px solid #ddd; border-radius: 4px; font-size: 14px; } Input JSON {\"name\":\"John\",\"age\":30,\"city\":\"New York\",\"hobbies\":[\"reading\",\"swimming\"]} Sort Keys: Indent: 2 spaces 4 spaces Tab Format Minify Clear Formatted Output Copy commentBox('5765834504929280-proj')"},{"title":"Text Statistics","date":"2025-10-01T09:05:48.698Z","updated":"2025-10-01T09:05:48.698Z","comments":true,"path":"tools/text-statistics/index.html","permalink":"http://neo01.com/tools/text-statistics/index.html","excerpt":"","text":"textarea { font-size: 16px; min-height: 150px; } .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin-top: 20px; } .stat-card { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; text-align: center; } .stat-label { color: #007acc; font-weight: bold; margin-bottom: 8px; font-size: 12px; text-transform: uppercase; } .stat-value { background: #1e1e1e; color: #d4d4d4; padding: 10px; border-radius: 4px; font-family: 'Courier New', monospace; font-size: 18px; font-weight: bold; } .reading-time { grid-column: 1 / -1; background: #e3f2fd; border-color: #2196f3; } .reading-time .stat-value { background: #1976d2; color: white; } Text to analyze: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. commentBox('5765834504929280-proj')"},{"title":"URL Encoder/Decoder","date":"2025-10-01T12:21:02.169Z","updated":"2025-10-01T12:21:02.169Z","comments":true,"path":"tools/url-encoder/index.html","permalink":"http://neo01.com/tools/url-encoder/index.html","excerpt":"","text":".input-group { margin-bottom: 20px; } label { display: block; margin-bottom: 8px; font-weight: 600; color: #555; } textarea { padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-size: 16px; transition: border-color 0.3s; min-height: 100px; resize: vertical; font-family: 'Courier New', monospace; } textarea:focus { outline: none; border-color: #007acc; } .output-section { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; margin-bottom: 20px; position: relative; } .output-label { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 14px; text-transform: uppercase; } .output-content { background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; font-family: 'Courier New', monospace; word-break: break-all; min-height: 40px; white-space: pre-wrap; } .copy-btn { position: absolute; top: 10px; right: 10px; background: #007acc; color: white; border: none; padding: 5px 10px; border-radius: 4px; cursor: pointer; font-size: 12px; transition: background-color 0.3s; } .copy-btn:hover { background: #005a9e; } .action-buttons { display: flex; gap: 10px; margin-bottom: 20px; } .action-btn { background: #007acc; color: white; border: none; padding: 10px 20px; border-radius: 6px; cursor: pointer; font-size: 14px; transition: background-color 0.3s; } .action-btn:hover { background: #005a9e; } Text to encode/decode: Hello World! This is a test URL: https://example.com/path?param=value&other=test Encode Decode Copy Result commentBox('5765834504929280-proj')"},{"title":"URL Parser","date":"2025-10-01T12:20:55.860Z","updated":"2025-10-01T12:20:55.860Z","comments":true,"path":"tools/url-parser/index.html","permalink":"http://neo01.com/tools/url-parser/index.html","excerpt":"","text":"input[type=\"text\"] { width: calc(100% - 28px); padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-size: 16px; transition: border-color 0.3s; font-family: 'Courier New', monospace; } input[type=\"text\"]:focus { outline: none; border-color: #007acc; } .parse-result { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; position: relative; } .parse-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 14px; text-transform: uppercase; } .parse-output { background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; font-family: 'Courier New', monospace; word-break: break-all; min-height: 40px; white-space: pre-wrap; } .params-table { width: 100%; border-collapse: collapse; margin-top: 10px; } .params-table th, .params-table td { border: 1px solid #444; padding: 8px; text-align: left; } .params-table th { background: #333; color: #d4d4d4; } .params-table td { background: #2a2a2a; color: #d4d4d4; } URL to parse: commentBox('5765834504929280-proj')"},{"title":"Temperature Converter","date":"2025-10-01T12:21:09.527Z","updated":"2025-10-01T12:21:09.527Z","comments":true,"path":"tools/temperature-converter/index.html","permalink":"http://neo01.com/tools/temperature-converter/index.html","excerpt":"","text":"input[type=\"number\"] { width: calc(100% - 28px); padding: 12px; border: 2px solid #ddd; border-radius: 6px; font-size: 16px; transition: border-color 0.3s; font-family: 'Courier New', monospace; } input[type=\"number\"]:focus { outline: none; border-color: #007acc; } .output-grid { grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); } .temp-result { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; position: relative; text-align: center; } .temp-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 16px; } .temp-value { background: #1e1e1e; color: #d4d4d4; padding: 15px; border-radius: 4px; font-family: 'Courier New', monospace; font-size: 24px; font-weight: bold; margin-bottom: 10px; } .temp-description { color: #666; font-size: 12px; margin-bottom: 10px; } .copy-individual { background: #007acc; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; font-size: 12px; transition: background-color 0.3s; } .copy-individual:hover { background: #005a9e; } Temperature value: commentBox('5765834504929280-proj')"},{"title":"Connected 4 in 3D","date":"2025-10-01T14:06:11.645Z","updated":"2025-10-01T14:06:11.645Z","comments":true,"path":"games/connected_4_3d/index.html","permalink":"http://neo01.com/games/connected_4_3d/index.html","excerpt":"","text":"Player 1's Turn ‚Üê ‚Üë ‚Üì ‚Üí DROP Reset Game Instructions Use Arrow Keys (Left, Right, Up, Down) to move the claw. Press Spacebar to drop a piece. Connect 4 of your pieces in a row (horizontally, vertically, or diagonally) to win! Click \"Reset\" to start a new game. Camera Controls Rotate View: Click and drag with the left mouse button. Zoom In/Out: Scroll the mouse wheel. Pan View: Click and drag with the right mouse button (or Ctrl + left mouse button). commentBox('5765834504929280-proj')"},{"title":"World Clock","date":"2025-10-01T12:20:49.979Z","updated":"2025-10-01T12:20:49.979Z","comments":true,"path":"tools/world-clock/index.html","permalink":"http://neo01.com/tools/world-clock/index.html","excerpt":"","text":".clocks-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin: 20px 0; } .clock-card { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 8px; padding: 20px; text-align: center; } .city-name { font-size: 1.2rem; font-weight: bold; color: #495057; margin-bottom: 10px; } .time-display { font-family: 'Courier New', monospace; font-size: 2rem; font-weight: bold; color: #007acc; margin: 10px 0; } .date-display { font-size: 0.9rem; color: #6c757d; margin-bottom: 5px; } .timezone-display { font-size: 0.8rem; color: #6c757d; } .add-timezone { background: #f8f9fa; border: 2px dashed #e9ecef; border-radius: 8px; padding: 40px 20px; text-align: center; cursor: pointer; transition: all 0.3s ease; } .add-timezone:hover { border-color: #007acc; background: #e3f2fd; } .add-timezone-text { color: #6c757d; font-size: 1.1rem; } select { padding: 8px 12px; border: 1px solid #ddd; border-radius: 4px; font-size: 14px; margin: 10px; width: 250px; } .remove-btn { background: #dc3545; color: white; border: none; border-radius: 4px; padding: 4px 8px; cursor: pointer; font-size: 12px; margin-top: 10px; } .modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; } .modal-content { background: white; margin: 10% auto; padding: 20px; border-radius: 8px; width: 90%; max-width: 400px; } .modal-header { font-size: 1.2rem; font-weight: bold; margin-bottom: 20px; } .modal-buttons { display: flex; gap: 10px; justify-content: flex-end; margin-top: 20px; } .btn { padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; } .btn-primary { background: #007acc; color: white; } .btn-secondary { background: #6c757d; color: white; } + Add Timezone Add Timezone Cancel Add commentBox('5765834504929280-proj')"},{"title":"Connected 4 in 3D Prompt","date":"2025-10-01T14:05:52.219Z","updated":"2025-10-01T14:05:52.219Z","comments":true,"path":"games/connected_4_3d/prompt.html","permalink":"http://neo01.com/games/connected_4_3d/prompt.html","excerpt":"","text":"Connected 4 in 3D: Technical Approach and Game Logic This document outlines the conceptual approach for building a 3D Connected 4 game for web browsers, focusing on a pure web-only implementation using JavaScript and Three.js for rendering. Part 1: Technical Approach (Web-Only with Three.js) The game will be a single-page web application built with HTML, CSS, and JavaScript. Three.js will be used for all 3D rendering. Proposed Architecture: HTML Structure (index.html): Will contain the canvas element for Three.js rendering. Will include basic UI elements for game status and controls (e.g., a reset button). Styling (style.css): Will provide basic styling for the HTML elements and the canvas. Game Logic and 3D Rendering (script.js): This single JavaScript file will encapsulate both the core game logic and the Three.js rendering. Three.js Setup: Initialize the 3D scene, camera, and WebGL renderer. 3D Board and Pieces: Create the 5x5x5 grid visually using Three.js geometries (e.g., cylinders for the board holes, spheres for the pieces). User Interaction: Implement mouse event listeners and Three.js raycasting to detect user clicks on the 3D board, translating screen coordinates to 3D grid positions. Game State Visualization: Update the 3D scene to reflect the current game state (e.g., adding a new piece, clearing the board). Workflow Example: Web Page Loads: index.html loads, style.css applies styling, and script.js executes. Three.js Scene Initialization: script.js sets up the Three.js scene, renders the empty 3D grid, and sets up event listeners. User Clicks on 3D Board: A mouse click event is detected. Raycasting: Three.js performs a raycast from the click position into the 3D scene to determine which grid cell (x, z) was targeted. Game Logic Processing: The JavaScript game logic receives the (x, z) coordinates, determines the y (vertical) position for the piece, updates its internal board state, and checks for win/draw conditions. 3D Scene Update: The JavaScript code instructs Three.js to add a new 3D piece at the calculated (x, y, z) coordinates with the current player‚Äôs color. Game Status Update: The HTML UI is updated to reflect the current game status (e.g., next player‚Äôs turn, win/draw message). Part 2: Core Game Logic (JavaScript) The core game logic for Connected 4 in 3D will be implemented in JavaScript. This logic manages the game state, player turns, piece placement rules, and win/draw conditions. The following outlines the current implementation of the core game logic: 1. Game Board Representation The 3D game board is represented as a 3-dimensional array of integers: let board; // Will be initialized as new Array(5).fill(0).map(() => new Array(5).fill(0).map(() => new Array(5).fill(0))); board[x][y][z] represents a cell in the 5x5x5 cube. x, y, z range from 0 to 4. 0: Represents an empty cell. 1: Represents a piece placed by Player 1 (e.g., Red). 2: Represents a piece placed by Player 2 (e.g., Yellow). 2. Game State Management The game state is managed by several variables: let currentPlayer = 1;: Tracks whose turn it is (1 or 2). let gameOver = false;: Indicates if the game has ended (win or draw). let gameStatus = &quot;Player 1's Turn&quot;;: A string to display the current game status (e.g., ‚ÄúPlayer 1‚Äôs Turn‚Äù, ‚ÄúPlayer 2 Wins!‚Äù, ‚ÄúIt‚Äôs a Draw!‚Äù). 3. Game Initialization (initializeGame()) This method sets up a new game: Resets the board to all zeros (empty). Sets currentPlayer back to 1. Sets gameOver to false. Updates gameStatus to ‚ÄúPlayer 1‚Äôs Turn‚Äù. Clears the 3D scene of all existing pieces. 4. Piece Placement Logic (addPiece(x, z))) This method handles placing a piece in the game: Input: Takes x (column) and z (depth) coordinates from user input. Game Over Check: If gameOver is true, the method returns immediately. Find Lowest Available y: It iterates from the bottom (y=0) upwards to find the first empty cell (board[x][i][z] == 0) in the selected column (x, z). This simulates gravity. Place Piece: If an empty y position is found: The board is updated with the currentPlayer‚Äôs value at board[x][y][z]. A new 3D piece is added to the Three.js scene at the calculated (x, y, z) coordinates with the current player‚Äôs color. Check Win/Draw Conditions: After placing a piece, it calls checkWin() and checkDraw() to determine the next game state. Update Game Status: Updates gameStatus based on the outcome (win, draw, or next player‚Äôs turn). Switch Player: If the game is not over, currentPlayer is switched to the other player. 5. Win Condition Check (checkWin(x, y, z)) This is the most complex part of the game logic. It checks for 4 consecutive pieces of the currentPlayer‚Äôs color in any of the 13 possible 3D directions, starting from the newly placed piece at (x, y, z). The 13 directions are: 3 Axial Directions: X-axis: (1, 0, 0) Y-axis: (0, 1, 0) Z-axis: (0, 0, 1) 6 Planar Diagonal Directions: XY-plane: (1, 1, 0), (1, -1, 0) XZ-plane: (1, 0, 1), (1, 0, -1) YZ-plane: (0, 1, 1), (0, 1, -1) 4 Space Diagonal Directions: (1, 1, 1) (1, 1, -1) (1, -1, 1) (1, -1, -1) The checkWin method calls checkLine for each of these directions. 6. Line Check (checkLine(x, y, z, dx, dy, dz)) This helper method checks for a win in a specific direction (dx, dy, dz) starting from a given (x, y, z) coordinate: It iterates along the line defined by the starting point and direction, checking up to 4 positions in both positive and negative directions from the starting point. It counts consecutive pieces of the currentPlayer‚Äôs color. If 4 or more consecutive pieces are found, it returns true (win). It handles boundary conditions (ensuring curX, curY, curZ stay within the 0-4 range). 7. Draw Condition Check (checkDraw()) This method determines if the game is a draw: It iterates through every cell on the board. If it finds any empty cell (0), it means the board is not full, and thus it‚Äôs not a draw, returning false. If all cells are filled (no 0 found), it returns true (draw). This detailed outline provides a clear understanding of the game‚Äôs structure and logic, which will be implemented using JavaScript and Three.js. commentBox('5765834504929280-proj')"},{"title":"","date":"2025-10-01T13:58:46.610Z","updated":"2025-10-01T13:56:34.820Z","comments":true,"path":"games/connected_4_3d/test.html","permalink":"http://neo01.com/games/connected_4_3d/test.html","excerpt":"","text":"Game Logic Tests Game Logic Unit Tests Open the browser's developer console (F12) to see test results. commentBox('5765834504929280-proj')"},{"title":"X.509 Certificate Decoder","date":"2025-10-01T12:20:41.576Z","updated":"2025-10-01T12:20:41.576Z","comments":true,"path":"tools/x509-decoder/index.html","permalink":"http://neo01.com/tools/x509-decoder/index.html","excerpt":"","text":"textarea { min-height: 200px; } .cert-result { background: #f8f9fa; border: 2px solid #e9ecef; border-radius: 6px; padding: 15px; position: relative; } .cert-name { color: #007acc; font-weight: bold; margin-bottom: 10px; font-size: 14px; text-transform: uppercase; } .cert-output { background: #1e1e1e; color: #d4d4d4; padding: 12px; border-radius: 4px; font-family: 'Courier New', monospace; word-break: break-all; min-height: 40px; white-space: pre-wrap; } X.509 Certificate (PEM format): Decode Certificate Clear Copy All Text Format commentBox('5765834504929280-proj')"}],"posts":[{"title":"Architecture as Code: Part 2 - Building the Foundation","slug":"2025/07/Architecture_As_Code_Part_2_Building_the_Foundation","date":"2025-07-19T16:00:00.000Z","updated":"2025-09-28T08:18:49.858Z","comments":true,"path":"2025/07/Architecture_As_Code_Part_2_Building_the_Foundation/","permalink":"http://neo01.com/2025/07/Architecture_As_Code_Part_2_Building_the_Foundation/","excerpt":"","text":"Architecture as Code: Part 2 - Building the Foundation This is Part 2 of our 7-part series exploring Architecture as Code. Read Part 1 to understand how AaC emerged from the limitations of traditional architecture. The Architecture Emergency Room Picture this: It‚Äôs 2 AM, and your production system is down. As you dig through the code, you realize the root cause is a simple architectural violation‚Äîa service calling another service directly instead of through the API gateway you designed six months ago. The problem? No one enforced that architectural rule. It was documented in a PDF that no one reads anymore. The violation slipped through code reviews because reviewers were focused on functionality, not architecture. This nightmare scenario is all too common, but Architecture as Code provides the foundation to prevent it. In this post, we‚Äôll explore the core principles that make AaC work and the concrete benefits it delivers. Core Principle 1: Explicit Architectural Decisions The first principle of Architecture as Code is making architectural decisions explicit and machine-readable. Instead of hiding decisions in documents or tribal knowledge, you capture them as code. From Implicit to Explicit Before AaC: // Some service somewhere const userService = new UserService(); const order = userService.getUserOrders(userId); // Direct coupling - architectural violation? With AaC: # architecture.yml services: order-service: dependencies: - user-service communication: - through: api-gateway - pattern: mediator Now the architectural constraint is explicit and enforceable. Decision Types in AaC Architecture as Code captures different types of decisions: Structural Decisions: How components are organized and connected Behavioral Decisions: How components interact and communicate Quality Decisions: Performance, security, and scalability requirements Technology Decisions: Which frameworks, databases, and tools to use Governance Decisions: Standards, patterns, and compliance rules Core Principle 2: Version Control and Collaboration By representing architecture as code, teams can leverage the full power of version control systems. This transforms architecture from a solitary activity into a collaborative, trackable process. Architecture as a Team Sport Version control enables: Traceability: Every architectural change is tracked with commit messages and blame information Reviewability: Pull requests for architectural changes allow team input and approval Revertibility: Bad architectural decisions can be rolled back like any code change Branching: Teams can experiment with architectural alternatives safely Collaborative Architecture Design # Architecture changes become collaborative git checkout -b feature/new-microservice-architecture # Make changes to architecture files git add architecture/ git commit -m \"Add event-driven architecture for user notifications\" git push origin feature/new-microservice-architecture # Create pull request for team review Core Principle 3: Automated Validation and Testing Architecture as Code enables automated validation of architectural compliance. This shifts architectural governance from manual reviews to automated checks. Architectural Test Suites Just as you write unit tests for code, you can write tests for architecture: // Example architectural test describe('Microservices Architecture', () => &#123; it('should not allow direct service-to-service communication', () => &#123; const violations = validateArchitecture(architectureModel); expect(violations.directCommunication).toBeEmpty(); &#125;); it('should require circuit breakers for external dependencies', () => &#123; const services = getServicesWithExternalDeps(architectureModel); services.forEach(service => &#123; expect(service.hasCircuitBreaker).toBe(true); &#125;); &#125;); &#125;); Continuous Architectural Validation Automated validation runs as part of your CI/CD pipeline: Pre-commit hooks: Check architecture on every commit Pull request validation: Automated checks before merging Deployment gates: Architecture compliance before production deployment Runtime monitoring: Continuous validation in production Core Principle 4: Living Documentation Unlike traditional documentation that becomes stale, architecture as code generates living documentation that stays synchronized with the actual system. Auto-Generated Documentation From your architecture code, you can generate: Interactive diagrams that reflect current system state API documentation based on defined service interfaces Dependency graphs showing service relationships Compliance reports for regulatory requirements Architecture decision records (ADRs) linked to code changes Always Up-to-Date Since documentation is generated from code: It automatically reflects the current architecture Changes are tracked in version control Multiple formats can be generated (HTML, PDF, diagrams) It‚Äôs always accurate (no manual maintenance required) The Benefits: Why It Matters Architecture as Code delivers compelling advantages that extend across the software development lifecycle. Improved Consistency and Quality By defining architectural patterns as reusable code templates, teams ensure consistent application of design principles: Standardized Patterns: All microservices follow the same structure Quality Gates: Automated checks prevent architectural anti-patterns Reduced Technical Debt: Violations are caught early Faster Onboarding: New team members understand patterns immediately Enhanced Collaboration and Communication AaC facilitates better communication between architects, developers, and stakeholders: Shared Understanding: Code provides unambiguous specifications Collaborative Design: Architecture evolves through code reviews Stakeholder Involvement: Non-technical stakeholders can review architectural changes Reduced Misunderstandings: Code is more precise than natural language Accelerated Development and Deployment Automated architectural validation and code generation accelerate development cycles: Rapid Scaffolding: New components follow established patterns Automated Validation: No manual architectural reviews Faster Feedback: Immediate validation results Reduced Boilerplate: Templates generate consistent code Scalability and Maintainability As systems grow, maintaining architectural consistency becomes increasingly challenging: Enterprise Scale: Governance across multiple teams and projects Evolution Support: Architecture adapts while maintaining integrity Automated Governance: Standards enforced without micromanagement Long-term Maintenance: Architectural decisions remain current and enforceable Real-World Impact: The Numbers Don‚Äôt Lie Organizations adopting AaC report significant improvements: 85% reduction in architectural violations reaching production 40% faster time-to-market for new features 60% improvement in architectural consistency across teams 50% reduction in technical debt accumulation 30% increase in team productivity The Foundation is Laid These core principles‚Äîexplicit decisions, version control, automated validation, and living documentation‚Äîform the foundation of Architecture as Code. They transform architecture from an abstract concept into a practical, enforceable discipline. In Part 3, we‚Äôll explore how these principles enable deep automation throughout the software development lifecycle, from continuous validation to automated refactoring. Have you implemented any of these AaC principles in your organization? What challenges did you face? Next in Series: Part 3 - The Automation Engine: How AaC Transforms Development Previous in Series: Part 1 - The Revolution Begins commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI, Architecture, Software Engineering","slug":"AI-Architecture-Software-Engineering","permalink":"http://neo01.com/tags/AI-Architecture-Software-Engineering/"}]},{"title":"Architecture as Code: Part 1 - The Revolution Begins","slug":"2025/07/Architecture_As_Code_Part_1_The_Revolution_Begins","date":"2025-07-14T16:00:00.000Z","updated":"2025-09-28T08:18:06.073Z","comments":true,"path":"2025/07/Architecture_As_Code_Part_1_The_Revolution_Begins/","permalink":"http://neo01.com/2025/07/Architecture_As_Code_Part_1_The_Revolution_Begins/","excerpt":"","text":"Architecture as Code: Part 1 - The Revolution Begins This is Part 1 of our 7-part series exploring Architecture as Code. Each post tells a different chapter of this transformative journey. The Day Everything Changed Imagine you‚Äôre a software architect at a fast-growing fintech startup. Your team started with a simple monolithic application, but now you‚Äôre serving millions of users with complex microservices, APIs, and data pipelines. The architecture diagrams you drew six months ago? They‚Äôre gathering dust in a shared drive, hopelessly outdated. Your developers are making decisions on the fly‚Äîadding services, creating databases, implementing patterns‚Äîwithout anyone really tracking how it all fits together. Code reviews focus on syntax and bugs, but no one asks: ‚ÄúDoes this align with our architectural vision?‚Äù Sound familiar? This scenario plays out in companies worldwide, and it‚Äôs the perfect storm that gave birth to Architecture as Code (AaC). From Static Diagrams to Living Systems Traditional software architecture suffered from a fundamental flaw: it was disconnected from reality. Architects would spend weeks creating beautiful diagrams using tools like Visio or draw.io. They‚Äôd write detailed documents describing layers, components, and interactions. But here‚Äôs what happened: The diagrams became outdated within weeks of being created Implementation drifted from the intended design Decisions were made implicitly rather than explicitly Validation was manual and infrequent Documentation became stale and untrustworthy graph TD UI[User Interface] --> API[API Gateway] API --> AUTH[Authorizer] AUTH --> DB[(Database)] Diagram 1: Intended Architecture Design (API Gateway with Authorizer) graph TD UI[User Interface] --> API[API Gateway] API --> DB[(Database)] Diagram 2: Actual Implementation (Reality - Authorizer Missing) These diagrams illustrate a common real-world scenario where security architecture becomes disconnected from implementation. In Diagram 1, the architect‚Äôs design includes a proper security layer with an Authorizer component that validates user permissions before allowing database access. However, in Diagram 2, the actual implementation bypasses this critical security component, creating a vulnerability where the API Gateway connects directly to the database without proper authorization checks. This architectural drift, which might go unnoticed in traditional documentation approaches, could lead to serious security breaches in production systems. Then came Infrastructure as Code (IaC) with tools like Terraform and CloudFormation. Suddenly, infrastructure wasn‚Äôt just documented‚Äîit was codified, versioned, and automated. What if we could do the same for software architecture? The AaC Manifesto Architecture as Code isn‚Äôt just about drawing diagrams in code. It‚Äôs a fundamental shift in how we think about software design: Architecture Becomes Code Instead of describing your system in natural language or static diagrams, you define it programmatically. Components, relationships, patterns, and constraints become machine-readable artifacts. Decisions Become Explicit Every architectural choice‚Äîfrom ‚Äúwe use microservices‚Äù to ‚Äúall services must have circuit breakers‚Äù‚Äîis captured as code that can be validated and enforced. Validation Becomes Automated No more manual reviews to check if implementations match the architecture. Automated tools can verify compliance as part of your CI/CD pipeline. Documentation Stays Current Since your architecture is code, documentation can be generated automatically, ensuring it always reflects the current state of your system. The First Spark: Infrastructure as Code Inspiration The AaC movement drew heavy inspiration from IaC‚Äôs success. Remember when infrastructure teams manually configured servers? It was error-prone, slow, and inconsistent. Then IaC came along: Version Control: Infrastructure changes became trackable Automation: Deployments became repeatable and reliable Collaboration: Infrastructure became a team sport Testing: You could test infrastructure changes before applying them AaC applies these same principles to the architectural level. Just as IaC made infrastructure programmable, AaC makes architecture programmable. A New Way of Working Let‚Äôs look at how AaC changes the daily workflow of architects and developers: Before AaC Architect creates diagrams in isolation Documents decisions in Word/PDF files Manual reviews during design phases Implementation drift goes unnoticed Refactoring becomes a guessing game With AaC Architecture defined collaboratively as code Decisions captured in version control Automated validation on every commit Drift detected and alerted immediately Refactoring guided by architectural rules The Promise of Transformation Architecture as Code promises to solve some of software engineering‚Äôs most persistent problems: Consistency: All teams follow the same architectural patterns Quality: Automated checks prevent architectural anti-patterns Speed: Teams can scaffold new components following established patterns Evolution: Systems can adapt while maintaining architectural integrity Governance: Organizations can enforce standards without micromanaging Real-World Awakening Consider the story of a large e-commerce platform that adopted AaC. Their monolithic application had grown to millions of lines of code, with architectural decisions scattered across wikis, emails, and tribal knowledge. When they started defining their architecture as code: They discovered 47 undocumented services that weren‚Äôt following any standard patterns Automated validation caught architectural violations before they reached production New team members could understand the system architecture by reading code, not documents Refactoring became guided by architectural rules rather than guesswork What‚Äôs Next In this series, we‚Äôll explore how Architecture as Code transforms every aspect of software development. In Part 2, we‚Äôll dive deep into the core principles that make AaC work and the tangible benefits it delivers. What architectural challenges are you facing in your current projects? Share in the comments below! Next in Series: Part 2 - Building the Foundation: Core Principles and Benefits commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI, Architecture","slug":"AI-Architecture","permalink":"http://neo01.com/tags/AI-Architecture/"}]},{"title":"The Shrinking Frontier: How Smaller LLMs Are Revolutionizing AI","slug":"2025/06/The_Shrinking_Frontier_How_Smaller_LLMs_Are_Revolutionizing_AI","date":"2025-06-07T16:00:00.000Z","updated":"2025-09-20T13:25:15.874Z","comments":true,"path":"2025/06/The_Shrinking_Frontier_How_Smaller_LLMs_Are_Revolutionizing_AI/","permalink":"http://neo01.com/2025/06/The_Shrinking_Frontier_How_Smaller_LLMs_Are_Revolutionizing_AI/","excerpt":"","text":"The Shrinking Frontier: How Smaller LLMs Are Revolutionizing AI In the rapidly evolving landscape of artificial intelligence, Large Language Models (LLMs) have undergone a remarkable transformation. What began with massive models requiring enormous computational resources has shifted toward a paradigm of efficiency and accessibility. This exploration examines the emerging trend of smaller LLMs, analyzing the drivers behind this shift and the substantial benefits they offer. Drawing from recent advancements in AI research, we uncover how this trend is reshaping the field and democratizing access to powerful language processing capabilities. The Trend: From Massive to Miniature The trajectory of LLM development has been characterized by an initial arms race toward larger and more complex models. Early breakthroughs like GPT-3, with its 175 billion parameters, demonstrated unprecedented language understanding capabilities but came at a steep cost. However, recent years have witnessed a counter-movement toward model compression and efficiency. Research institutions and tech companies are increasingly focusing on creating smaller, more streamlined models that retain much of the performance of their larger counterparts. This trend is evident in the proliferation of distilled and compressed models. Techniques like knowledge distillation, where a smaller ‚Äústudent‚Äù model learns from a larger ‚Äúteacher‚Äù model, have enabled the creation of models that are orders of magnitude smaller. For instance, DistilBERT, a distilled version of BERT, achieves 97% of the original model‚Äôs performance while being 40% smaller and 60% faster. Similarly, TinyLLaMA and other compact variants of larger models are gaining traction, offering viable alternatives for resource-constrained environments. Drivers: The Forces Behind Model Compression The shift toward smaller LLMs is propelled by a confluence of technological, economic, environmental, and societal factors. These drivers are not isolated but form an interconnected ecosystem that makes model compression both necessary and achievable. Understanding these forces provides insight into why the AI community is increasingly prioritizing efficiency over sheer scale. Computational Efficiency and Cost Reduction The computational demands of training and deploying large models present significant barriers that have become increasingly untenable. Training GPT-3 required an estimated 570,000 GPU hours and cost millions of dollars, with inference costs scaling proportionally. As AI becomes more ubiquitous across industries‚Äîfrom healthcare to finance‚Äîthese resource requirements create substantial economic hurdles. Smaller models address this by dramatically reducing both training and inference costs. For instance, a distilled model might require only 10-20% of the computational resources of its full-sized counterpart while maintaining 90-95% of the performance. This cost reduction enables startups, academic researchers, and smaller organizations to participate in AI development, fostering innovation across the ecosystem rather than concentrating it in a few well-funded entities. Energy Efficiency and Environmental Considerations The environmental impact of AI training has emerged as a critical concern in recent years. Large models contribute to substantial carbon footprints, with estimates suggesting that training a single large language model can emit as much CO2 as five cars over their lifetime. The energy consumption extends beyond training to inference, where serving large models at scale requires significant computational resources. Smaller models offer a more sustainable path forward by requiring exponentially less power for both training and deployment. This aligns with growing regulatory and societal pressures for environmentally responsible AI development. Companies are increasingly adopting smaller models not just for cost savings but as part of broader sustainability initiatives, recognizing that AI‚Äôs environmental footprint must be minimized to ensure long-term viability. Accessibility and Democratization Large models often require specialized hardware and infrastructure, creating a significant barrier to entry that limits access to well-funded research institutions and tech giants. The computational requirements of models like GPT-4 necessitate data center-scale infrastructure that few organizations can afford or maintain. Smaller models democratize access to advanced AI capabilities by running on consumer-grade hardware, edge devices, and even mobile phones. This shift enables developers, researchers, and businesses of all sizes to leverage language models without prohibitive infrastructure costs. For example, models like DistilBERT can run on smartphones, opening possibilities for on-device AI applications that preserve user privacy and work offline. This democratization is driving a wave of innovation from diverse sources, as more participants can experiment with and contribute to AI development. Technical Advancements in Model Compression The most immediate driver of smaller LLMs is the rapid advancement in compression techniques and architectural innovations. These technical breakthroughs are making it possible to create models that are orders of magnitude smaller while retaining much of their capabilities. Quantization Techniques: Quantization reduces the precision of model weights from 32-bit floating-point to lower precision formats like 8-bit or even 4-bit integers. This can shrink model size by up to 75% with minimal performance loss. Advanced quantization methods like GPTQ (GPT Quantization) and AWQ (Activation-aware Weight Quantization) optimize the quantization process to preserve model accuracy. Knowledge Distillation: This technique involves training a smaller ‚Äústudent‚Äù model to replicate the behavior of a larger ‚Äúteacher‚Äù model. The student learns to mimic the teacher‚Äôs outputs, effectively compressing the knowledge into a more compact form. Recent advancements have extended this to multi-teacher distillation and self-distillation approaches. Pruning and Sparsity: Pruning removes unnecessary connections and neurons from neural networks, creating sparse models that can be further compressed. Structured pruning maintains the model‚Äôs architecture while unstructured pruning can achieve higher compression ratios. Techniques like magnitude-based pruning and dynamic pruning are becoming increasingly sophisticated. Efficient Architectures: New architectural designs specifically target efficiency. Models like MobileBERT and TinyLLaMA incorporate efficient attention mechanisms, grouped convolutions, and optimized layer designs that reduce computational complexity while maintaining expressive power. Hybrid Approaches: The most effective compression often combines multiple techniques. For example, a model might undergo knowledge distillation followed by quantization and pruning, achieving compression ratios of 10x or more while retaining 95% of the original performance. These technical advancements are not just enabling smaller models‚Äîthey‚Äôre fundamentally changing how we think about model design, shifting the focus from maximizing parameters to optimizing efficiency and performance per parameter. Benefits: The Advantages of Smaller LLMs The shift toward smaller LLMs offers numerous advantages that extend beyond mere size reduction. Improved Performance and Speed Smaller models often exhibit faster inference times, making them more suitable for real-time applications. In scenarios requiring quick responses, such as chatbots or interactive systems, the reduced latency of compact models provides a significant advantage. This performance improvement is particularly crucial for applications with strict timing requirements. Enhanced Deployment Flexibility The compact nature of smaller LLMs enables deployment across a wider range of devices and environments. From cloud servers to edge devices and mobile applications, these models can operate in contexts where larger models would be impractical or impossible. This flexibility opens new use cases, such as on-device language processing for privacy-sensitive applications or offline functionality in remote areas. Reduced Resource Requirements Smaller models consume less memory and computational power, making them ideal for resource-constrained environments. This is particularly valuable in developing regions or for applications targeting low-end hardware. The reduced resource footprint also translates to lower operational costs and improved scalability. Energy Efficiency and Sustainability By requiring less computational power, smaller LLMs contribute to reduced energy consumption. This not only lowers operational costs but also aligns with sustainability goals. In an era where AI‚Äôs environmental impact is under scrutiny, smaller models offer a more responsible approach to language processing. Improved Privacy and Security On-device deployment of smaller models enhances privacy by keeping sensitive data local rather than sending it to remote servers. This is crucial for applications involving personal or confidential information, reducing the risk of data breaches and ensuring compliance with privacy regulations. Conclusion The trend toward smaller LLMs represents a pivotal shift in AI development, driven by the need for efficiency, accessibility, and sustainability. As computational constraints and environmental concerns continue to shape the field, the ability to create powerful yet compact models becomes increasingly valuable. The benefits of smaller LLMs‚Äîranging from improved performance and deployment flexibility to enhanced privacy and reduced environmental impact‚Äîposition them as a cornerstone of future AI innovation. This evolution echoes broader themes in AI development, where the pursuit of efficiency and accessibility drives technological progress. As research continues to advance compression techniques and architectural innovations, smaller LLMs are poised to democratize access to advanced language processing capabilities, enabling a wider range of applications and fostering more inclusive AI development. commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"DevSecOps - Beyond Tooling to Maturity and Threat Modeling","slug":"2024/12/DevSecOps_Beyond_Tooling_to_Maturity_and_Threat_Modeling","date":"2024-11-30T16:00:00.000Z","updated":"2025-09-29T15:23:30.929Z","comments":false,"path":"2024/12/DevSecOps_Beyond_Tooling_to_Maturity_and_Threat_Modeling/","permalink":"http://neo01.com/2024/12/DevSecOps_Beyond_Tooling_to_Maturity_and_Threat_Modeling/","excerpt":"","text":"In the fast-evolving landscape of software development, DevSecOps has become a vital framework for integrating security practices into the DevOps process. Yet, many organizations fall into the trap of overemphasizing tooling while neglecting essential organic capabilities like threat modeling, which are crucial for a strong security posture. This blog post delves into the significance of threat modeling in DevSecOps and presents various maturity models to help organizations strengthen their security measures. The Overlooked Value of Threat Modeling Threat modeling is a fundamental capability that is critical for identifying potential security threats early in the software development lifecycle (SDLC). It entails a systematic analysis of potential security vulnerabilities and equips the team to address these issues proactively. Despite its significance, threat modeling is frequently overshadowed by the appeal of automated tools that offer quick solutions and seamless integration into the CI/CD pipeline. The reality is that automated tools, while valuable, cannot replace the nuanced understanding of security risks that threat modeling provides. It requires human insight to anticipate the tactics, techniques, and procedures adversaries might use to compromise a system. By integrating threat modeling into the DevSecOps process, organizations can ensure that security considerations are embedded in the design and architecture of their applications, rather than being an afterthought. Threat Modeling is good, but how? Threat modeling can present challenges, but with a structured approach, it becomes more manageable. Start by understanding what threat modeling entails: it is the process of identifying, assessing, and addressing potential threats to your system. It‚Äôs crucial to begin early in the development lifecycle, integrating threat modeling from the outset. Engage diverse stakeholders, including those from security, development, and operations, to gain a comprehensive view of the system and potential threats. Understanding the business context is equally important, as it enables you to align the threat modeling process with your organization‚Äôs objectives, risk appetite, and the value of its assets. Begin with Threat Modeling Diagram A threat model diagram is a visual representation used to identify potential security threats within an application and determine their mitigations. It typically includes elements such as processes, data stores, actors, data flows, and trust boundaries. To draw a threat model diagram, start by identifying the system‚Äôs assets, which include data, components, and processes that need protection. Then, define the potential threats to these assets, such as unauthorized access or data leaks. Next, create a Data Flow Diagram (DFD) to visualize how data moves through the system, highlighting points where threats could occur. Finally, analyze the diagram to identify security controls that can mitigate the identified threats. While threat model diagrams can be created with pen and paper, there are tools available that can assist in carrying out threat modeling effectively. OWASP Threat Dragon Microsoft Threat Modeling Tool draw.io Threat Modeling Frameworks Following a structured methodology, such as STRIDE or PASTA, can provide a clear and simple framework for identifying and analyzing threats. Identify your assets and the potential attack vectors that could be exploited by adversaries. Assess the impact and likelihood of each identified threat to prioritize your mitigation strategies effectively. This prioritization helps in focusing efforts on the most critical areas that could impact your business. It‚Äôs also important to continuously review and update the threat model to reflect changes in the system or the threat landscape. Remember, threat modeling is not a one-time activity but an ongoing process that evolves with your system and the surrounding threat environment. By adopting these best practices and maintaining a proactive stance, you can overcome the difficulties associated with threat modeling and effectively secure your systems against potential threats. Additionally, threat modeling itself is not a tool; rather, it‚Äôs a structured approach for identifying and prioritizing potential threats to a system. However, tools like AWS Threat Composer can aid in the analysis and enhance the threat modeling process. AWS Threat Composer provides examples for both straightforward internet applications and more complex ML operations (MLOps), all integrated with OWASP guidelines. Navigating DevSecOps with Maturity Models Maturity models serve as roadmaps for organizations to assess their current DevSecOps practices and chart a path towards more advanced stages of security integration. One such framework is the OWASP DevSecOps Maturity Model (DSOMM), which outlines security measures that can be applied within DevOps strategies and prioritized accordingly. The DSOMM helps organizations identify gaps in their security practices and provides a structured approach to enhance their DevSecOps initiatives. Implementing a Multistage Approach to DevSecOps Transformation The implementation of DevSecOps is not a one-size-fits-all solution; it requires a tailored approach that considers the unique needs and goals of each organization. A multistage approach to DevSecOps transformation allows organizations to evaluate their progress and maturity during the implementation process. This approach typically includes stages such as initial adoption, automation of security testing, and continuous improvement, each with specific goals and practices to be implemented. Shift left, Stay right, Do right In the realm of DevSecOps, the concepts of ‚Äúshift left,‚Äù ‚Äústay right,‚Äù and ‚Äúdo right‚Äù encapsulate a comprehensive approach to integrating security throughout the software development lifecycle. ‚ÄúShift left‚Äù refers to the practice of incorporating security measures early in the development process, rather than as an afterthought. This proactive stance ensures that security considerations are an integral part of the design and development phases, leading to more secure outcomes from the outset. It‚Äôs about embedding security into the developer‚Äôs workflow and making it a shared responsibility across the team, rather than relegating it to a separate phase or a specific group of security professionals. ‚ÄúStay right,‚Äù on the other hand, emphasizes the importance of continuous security practices during the operational phase of the software lifecycle. It involves monitoring, protecting, and responding to security threats in real-time, ensuring that security measures are always up-to-date and effective against evolving threats. This approach recognizes that security is not a one-time event but a continuous process that requires vigilance and adaptability as the software is deployed and utilized in production environments. Lastly, ‚Äúdo right‚Äù in DevSecOps is a guiding principle that underlines the ethical responsibility of all stakeholders to adhere to best practices in security. It‚Äôs a commitment to doing what is necessary to protect data, respect privacy, and ensure the integrity of the software. This includes staying informed about the latest security trends, complying with regulations, and fostering a culture of security within the organization. Together, these principles form a robust framework for integrating security into every stage of the software development and deployment process, aligning with the overarching goal of DevSecOps to build secure software rapidly and efficiently without compromising on quality or performance. By shifting left, staying right, and doing right, organizations can achieve a balance between speed, functionality, and security, which is crucial in today‚Äôs fast-paced and threat-laden digital landscape. Conclusion DevSecOps is more than just a set of tools; it is a culture that requires a balance between automation and organic capabilities like threat modeling. Maturity models provide a valuable framework for organizations to systematically improve their security practices within the DevOps pipeline. By recognizing the importance of threat modeling and utilizing maturity models, organizations can move beyond tool-centric views and develop a comprehensive, resilient security strategy that is woven into the fabric of their software development processes. For those interested in further exploring the intricacies of DevSecOps and threat modeling, additional resources and detailed methodologies can be found through the OWASP Foundation and other industry experts dedicated to enhancing application security.","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"DevSecOps","slug":"DevSecOps","permalink":"http://neo01.com/tags/DevSecOps/"},{"name":"Security","slug":"Security","permalink":"http://neo01.com/tags/Security/"}]},{"title":"Attestation-Centric DevSecOps - Fortifying Enterprise Software Development","slug":"2024/11/Attestation-Centric-Dev-Sec-Ops-Fortifying-Enterprise-Software-Development","date":"2024-11-15T16:00:00.000Z","updated":"2025-09-28T08:50:15.957Z","comments":false,"path":"2024/11/Attestation-Centric-Dev-Sec-Ops-Fortifying-Enterprise-Software-Development/","permalink":"http://neo01.com/2024/11/Attestation-Centric-Dev-Sec-Ops-Fortifying-Enterprise-Software-Development/","excerpt":"","text":"There is a growing demand within enterprises for a reliable method to trace software artifacts back to their original source code and build instructions, driven by the rise in supply chain attacks. This need also applies to other common enterprise scenarios, such as siloed teamwork and the diversification of DevSecOps practices. While enterprises often have access to a broad range of DevSecOps tools on the market, the more tools they adopt, the more fragmented and isolated their processes tend to become. The Tooling Conundrum: Integration Overload Once an enterprise has equipped itself with a wide array of DevSecOps tools, the next challenge is integrating them to minimize fragmentation. The market offers numerous tools, each claiming to be the ultimate solution for security challenges. However, in reality, no single tool can address all issues comprehensively. The key challenge is to build a cohesive ecosystem where these tools operate in harmony, ensuring a transparent and efficient pipeline for software delivery. Many enterprises choose to develop their own developer portals that integrate or consume scanning reports from these tools and provide a unified view for developers and security engineers. This approach allows for centralized management of vulnerabilities, compliance checks, and other security-related tasks. However, it requires significant investment in development and maintenance. Without proper integration and a seamless workflow, these tools can become a nightmare for development teams. Additionally, different development teams often have distinct tooling for their Software Development Life Cycle (SDLC); for example, mobile development teams may use specialized scanning tools. What is Attestation? Let‚Äôs explore some background on attestation before understanding how Attestation-Centric DevSecOps addresses the aforementioned problems. Attestations are a set of tools and practices that enable every step in the SDLC to create a secure and verifiable link between software artifacts and the processes that produced them. These attestations serve as a tamper-proof, unforgeable paper trail that details every step of the software creation process, from code commits to build and deployment. The process of creating an Artifact Attestation typically involves generating cryptographically signed claims that certify the provenance of a software build. This includes information such as the workflow associated with the artifact, the repository, organization, environment, commit SHA, and the triggering event for the build. We refer to this information as metadata. The metadata is then packaged into a cryptographically signed artifact attestation, which can be stored in a trusted repository or distributed to consumers of the software. This process ensures that the provenance of the software build and its associated metadata are verifiable and tamper-proof. You can imagine the process as similar to blockchain technology. The concept of attestation and metadata has been present in the industry for decades, but it is only recently that we have started seeing more tools and services emerging to support this. GitHub, for instance, has recently launched a public beta for artifact attestations. How Attestation Comes to the Rescue Attestation-centric DevSecOps transforms the fragmented tooling landscape into a unified, verifiable ecosystem. Instead of forcing tools to integrate directly with each other, attestations create a common language that all tools can speak. Breaking Down Silos with Shared Evidence Imagine Sarah, a security engineer at a large financial institution. Her team uses Snyk for vulnerability scanning, while the mobile team prefers Checkmarx, and the infrastructure team relies on Prisma Cloud. Previously, correlating security findings across these teams required manual effort and often led to gaps in coverage. With attestation-centric DevSecOps, each tool generates cryptographically signed attestations about its findings. When Sarah needs to assess the security posture of a mobile application that uses shared infrastructure components, she can trace the complete security journey through attestations: Code Attestation: Confirms the source code integrity and author identity Build Attestation: Verifies the build environment and process Scan Attestation: Documents security findings from multiple tools Deployment Attestation: Records the deployment environment and configuration Supply Chain Transparency Made Simple The recent surge in supply chain attacks, from SolarWinds to Log4j, has made enterprises acutely aware of their blind spots. Traditional approaches often rely on Software Bills of Materials (SBOMs), but these are static snapshots that don‚Äôt capture the dynamic nature of modern software development. Attestation-centric approaches provide a living audit trail. When a new vulnerability is discovered in a third-party library, security teams can quickly identify all affected applications by querying attestations rather than manually checking each project‚Äôs dependencies. Real-World Implementation: The Three Pillars Pillar 1: Standardized Metadata Collection Every tool in your DevSecOps pipeline should generate attestations in a standardized format. This doesn‚Äôt mean replacing your existing tools‚Äîit means augmenting them with attestation capabilities. # Example attestation metadata subject: name: \"myapp:v1.2.3\" digest: \"sha256:abc123...\" predicateType: \"https://slsa.dev/provenance/v0.2\" predicate: builder: id: \"https://github.com/actions\" buildType: \"https://github.com/actions/workflow\" invocation: configSource: uri: \"git+https://github.com/myorg/myapp\" digest: \"sha1:def456...\" Pillar 2: Cryptographic Verification All attestations must be cryptographically signed to ensure integrity and non-repudiation. This creates an immutable chain of custody that can withstand sophisticated attacks. Pillar 3: Queryable Attestation Store Attestation data should be stored in a centralized, queryable system that allows security teams to ask complex questions like: ‚ÄúShow me all applications built from code committed by external contributors in the last 30 days‚Äù ‚ÄúWhich deployments contain the vulnerable version of library X?‚Äù ‚ÄúWhat security scans were performed on this artifact before production deployment?‚Äù The Path Forward: Starting Small, Thinking Big Implementing attestation-centric DevSecOps doesn‚Äôt require a complete overhaul of your existing infrastructure. Start with these practical steps: Pilot with Build Attestations: Begin by generating build provenance attestations for your most critical applications Integrate Gradually: Add attestation capabilities to your existing security tools one at a time Establish Policies: Define what attestations are required for different types of deployments Train Your Teams: Ensure developers and security engineers understand how to interpret and use attestation data Conclusion: Trust Through Transparency In an era where software supply chains are under constant threat and enterprise development teams operate in increasingly complex environments, attestation-centric DevSecOps offers a path to both security and operational efficiency. By creating verifiable, cryptographic evidence of every step in the software development lifecycle, organizations can move from a position of hoping their security measures are effective to knowing they are. The future of enterprise software security isn‚Äôt about having more tools‚Äîit‚Äôs about having better visibility into how those tools work together to protect your organization. Attestation-centric DevSecOps provides that visibility, one cryptographic signature at a time. Ready to explore attestation-centric DevSecOps for your organization? Start by evaluating your current tooling landscape and identifying opportunities to add attestation capabilities to your most critical development pipelines.","categories":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"}],"tags":[]},{"title":"Security by Design - The Architectural Blueprint for Cybersecurity","slug":"2024/10/Security_by_design_the_architectural_blueprint_for_cybersecurity","date":"2024-10-02T16:00:00.000Z","updated":"2025-07-01T16:44:56.794Z","comments":true,"path":"2024/10/Security_by_design_the_architectural_blueprint_for_cybersecurity/","permalink":"http://neo01.com/2024/10/Security_by_design_the_architectural_blueprint_for_cybersecurity/","excerpt":"","text":"What is Security by Design? In the digital age, where cyber threats loom large, ‚ÄúSecurity by Design‚Äù has emerged as the architectural blueprint for building robust cybersecurity defenses into the very fabric of software and systems. It is a proactive approach that integrates security measures from the ground up, rather than as an afterthought. This concept is akin to constructing a building with a strong foundation and integrated security systems, rather than adding locks and alarms after the building is complete. Security by Design is not merely about adding layers of protection; it‚Äôs about embedding security into the DNA of the system. It contrasts sharply with practices that treat security as a peripheral or secondary feature, which can be likened to bolting a steel door onto a straw house ‚Äì the door may be secure, but the overall structure remains vulnerable. Comparatively, ‚ÄúSecurity by Default‚Äù is the principle that out-of-the-box settings should be the most secure possible. Imagine buying a smartphone that, by default, has all the necessary privacy settings enabled, as opposed to one that requires you to manually adjust these settings to secure your data. Threat modeling, control validation, automation, and security principles are fundamental components of the Security by Design approach, each playing a crucial role in fortifying the security posture of an organization‚Äôs digital infrastructure. Threat Modeling: This is the process of proactively identifying and understanding potential security threats to a system. It involves analyzing the system‚Äôs design, identifying potential threat agents, determining the likelihood of these threats, and prioritizing them based on potential impact. This is akin to an architect considering all possible natural disasters while designing a building, ensuring it can withstand earthquakes, floods, or other calamities. Control Validation: Once security controls are implemented, control validation is the process of verifying that these controls are effective and function as intended. This step is similar to a quality assurance process in manufacturing, where products are tested to ensure they meet the required safety standards before being released to the market. Automation: In the context of Security by Design, automation refers to the use of technology to perform security-related tasks without human intervention. This can include automated security scanning, continuous integration/continuous deployment (CI/CD) pipelines with integrated security checks, and automated incident response. Automation in security is like having a state-of-the-art home security system that not only alerts homeowners of an intrusion but also takes immediate action to lock down the house and notify authorities. Security Principles: The principles of security, such as confidentiality, integrity, and availability‚Äîoften referred to as the CIA triad‚Äîserve as the guiding tenets for Security by Design. These principles ensure that information remains confidential (accessible only to those authorized), maintains its integrity (is accurate and reliable), and is available when needed. These practices are interconnected; threat modeling informs control validation, and automation aids in the consistent application of the controls identified through threat modeling. Automating Control Validation and Remediation: Enhancing Security by Design With the control validation from different stage, a critical element to have successful security by design is the automation of control validation and remediation, which serves to reinforce the system‚Äôs defenses and streamline the security management process. Automated Control Validation Control validation is the process of ensuring that security measures are not only in place but are also effective and functioning as intended. Automating this process means employing tools and technologies that can continuously and consistently verify the effectiveness of security controls without the need for manual intervention. For instance, automated security control validation can involve the use of software that simulates attacks on a system to test the response of its defenses. This is akin to conducting regular fire drills to ensure that both the fire alarm and the sprinkler system are working correctly and that the occupants know how to respond in case of an actual fire. Automated Remediation Automated remediation takes the concept a step further by not only detecting security issues but also resolving them autonomously. This can include patching vulnerabilities, isolating infected systems, or blocking malicious activities in real-time. Imagine a self-healing material that automatically repairs cracks as soon as they appear, maintaining its integrity without the need for external intervention. Challenges and Quick Wins The challenges in implementing Security by Design are not insignificant. It requires a shift in mindset, from reactive to proactive, and often involves a cultural change within an organization. However, the quick wins ‚Äì such as preventing major breaches and building customer trust ‚Äì make it a worthwhile investment. Do not forget Risk-Based Approach In the intricate world of cybersecurity, ‚ÄúSecurity by Design‚Äù and the ‚ÄúRisk-Based Approach‚Äù are two methodologies that, when combined, offer a comprehensive strategy for protecting digital assets. Security by Design is the practice of incorporating security features and considerations into the design and architecture of systems and software from the beginning. On the other hand, the Risk-Based Approach is a method of prioritizing and managing cybersecurity efforts based on the assessment of risks, their likelihood, and potential impact. The relationship between Security by Design and the Risk-Based Approach is symbiotic. Security by Design lays the groundwork for a secure system, while the Risk-Based Approach ensures that the security measures are aligned with the most significant and probable threats. This combination allows organizations to allocate resources efficiently and effectively, focusing on the areas of highest risk. Integration of Risk-Based Approach in Security by Design The Risk-Based Approach complements Security by Design by introducing a dynamic element to the static design process. It involves continuous risk assessment and management throughout the system‚Äôs lifecycle, ensuring that the security measures remain relevant as new threats emerge. For example, just as an architect designs a building to withstand various environmental risks, such as earthquakes or floods, a cybersecurity professional uses the Risk-Based Approach to anticipate and mitigate cyber risks specific to the system‚Äôs environment. Benefits of a Combined Approach Prioritization of Security Efforts: By understanding the risks, organizations can prioritize security efforts, focusing on the most critical areas first. Resource Optimization: It helps in optimizing the use of resources by directing them to the areas where they are needed the most, rather than spreading them thinly across all possible security measures. Adaptability: A Risk-Based Approach ensures that Security by Design remains adaptable and responsive to the evolving threat landscape. Compliance and Governance: It aids in compliance with regulatory requirements by demonstrating a structured approach to identifying and mitigating risks. Challenges in Implementation While the integration of a Risk-Based Approach within Security by Design offers numerous advantages, it also presents challenges. It requires a deep understanding of the threat landscape, the ability to assess risks accurately, and the agility to adapt security measures as risks evolve. Organizations must also contend with the complexity of balancing security with functionality and usability. Practical Application in Enterprises Enterprises can apply this combined approach by conducting regular risk assessments, using threat intelligence to inform design decisions, and implementing security controls that address the most significant risks. For instance, an enterprise might prioritize encrypting sensitive data over other security measures if the risk assessment indicates that data theft is the highest risk. Beyond Security by Design Beyond Security by Design, there is an ongoing journey towards ‚ÄúResilient by Design,‚Äù where systems are not only secure but also capable of withstanding and recovering from attacks, ensuring continuity of operations and services. In conclusion, Security by Design is the cornerstone of modern cybersecurity strategy, a fundamental approach that, when effectively implemented, can significantly reduce the risk of cyber threats and safeguard the digital infrastructure upon which businesses and societies increasingly rely. Further Reading Red Hat - Security by design: Security principles and threat modeling commentBox('5765834504929280-proj')","categories":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"}],"tags":[]},{"title":"Interacting with Docker Containers - Shell and SSH","slug":"2024/07/Interacting-With-Docker-Containers-Shell-And-SSH","date":"2024-07-03T16:00:00.000Z","updated":"2025-07-01T16:43:14.134Z","comments":true,"path":"2024/07/Interacting-With-Docker-Containers-Shell-And-SSH/","permalink":"http://neo01.com/2024/07/Interacting-With-Docker-Containers-Shell-And-SSH/","excerpt":"","text":"Docker has revolutionized the way we build, ship, and run applications by encapsulating them in lightweight, portable containers. Interacting with these containers with shell and SSH is not the best practice but convenient for developers. In this blog post, we‚Äôll explore how to interact with Docker containers using shell access and SSH. Shell Access to Containers The most straightforward method to interact with a running Docker container is through the Docker exec command, in case you build the image with shell. This command allows you to run a new command in a running container, which is especially useful for debugging or quick modifications. Here‚Äôs how you can use it: Identify the Container: First, you need to know the container‚Äôs ID or name. You can list all running containers with docker ps. Execute a Command: To run a command inside the container, use docker exec. For example, to start an interactive shell session, you can use: docker exec -it &lt;container_id_or_name&gt; &#x2F;bin&#x2F;sh Replace &lt;container_id_or_name&gt; with your actual container ID or name. The -it flags attach an interactive tty in the container. ‚ö†Ô∏è Maintain Security: Remember that building a container image with unnecessary components, especially a shell, can pose a security risk. Always build the image FROM scratch to keep it clean and integrate with observability for troubleshooting. SSH into Containers While shell access is convenient, sometimes you may need a more persistent connection method, like SSH. Setting up SSH access to a Docker container involves a few more steps: Create a Dockerfile: You‚Äôll need a Dockerfile that installs SSH and sets up the necessary configurations. Here‚Äôs a simple example: FROM ubuntu:latest RUN apt-get update &amp;&amp; apt-get install -y openssh-server RUN mkdir &#x2F;var&#x2F;run&#x2F;sshd RUN echo &#39;root:YOUR_PASSWORD&#39; | chpasswd RUN sed -i &#39;s&#x2F;#PermitRootLogin prohibit-password&#x2F;PermitRootLogin yes&#x2F;&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config EXPOSE 22 CMD [&quot;&#x2F;usr&#x2F;sbin&#x2F;sshd&quot;, &quot;-D&quot;] Replace YOUR_PASSWORD with a secure password of your choice. Build and Run the Container: Build the image with docker build and run it with docker run, making sure to map the SSH port: docker build -t ssh-enabled-container . docker run -d -p 2222:22 ssh-enabled-container SSH into the Container: Use an SSH client to connect to the container: ssh root@localhost -p 2222 Use the password you set in the Dockerfile to log in. ‚ö†Ô∏è Maintain Security: Remember that exposing SSH in a container can be a security risk. Always use strong passwords or SSH keys, and consider additional security measures like firewalls and SSH hardening practices. There are other dangerous ways to access the SSH port but we will not go further in this post. Why Shell and SSH are bad for Docker When you SSH into a container, you‚Äôre essentially treating it like a traditional virtual machine, which goes against the container philosophy of isolated, ephemeral, and minimalistic environments. Security Risks: SSH servers add unnecessary complexity and potential vulnerabilities to your container. Each SSH process running in a container is an additional attack surface for malicious actors. Container Bloat: Containers are meant to be lightweight and contain only the essential packages needed to run the application. Installing an SSH server and shell increases the size of the container and adds extra layers that are not necessary for the application to function. Deviation from Container Orchestration Tools: Modern container orchestration tools like Kubernetes provide their own methods for accessing containers, such as kubectl exec. Using SSH and shell can bypass these tools, leading to a deviation from standardized workflows and potentially causing configuration drift. Statefulness: Containers are designed to be stateless and immutable. SSH‚Äôing and shell into a container and making changes can lead to a stateful configuration that is not reflected in the container‚Äôs image or definition files. This can cause issues when the container is redeployed or scaled across different environments. Lifecycle Management: Docker containers are meant to be stopped and started frequently, with changes being made through updates to the container image. By using SSH and shell, you might be tempted to make ad-hoc changes to the running container, which is against the principles of immutable infrastructure. Complexity in Management: Managing SSH keys, ensuring they are rotated and kept secure, adds an additional layer of complexity to container management. It also increases the administrative overhead of managing access to containers. Conclusion Whether you prefer the simplicity of Docker exec or the persistence of SSH, both methods provide robust ways to interact with your Docker containers. Remember to use these tools responsibly, keeping security in mind, and you‚Äôll be able to manage your containers effectively. We hope this guide has been helpful. For more detailed instructions and best practices, refer to the official Docker documentation and SSH configuration guides. Happy containerizing! commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://neo01.com/tags/docker/"}]},{"title":"The Art of Prompt Engineering - Art Style Part 12","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-12","date":"2024-06-14T16:00:00.000Z","updated":"2025-07-01T16:42:30.804Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-12/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-12/","excerpt":"","text":"This is a continuation of part 11 Other Analytical Art Prompt: Analytical art style. a llama in an oasis Toyism Prompt: Toyism style. a lone llama in an oasis inside a wild desert. Psychedelic Art Prompt: Psychedelic art style. a lone llama in an oasis inside a wild desert. Pop Art Prompt: Pop art style. a lone llama in an oasis inside a wild desert. Pointillism Prompt: Pointillism style. a lone llama in an oasis inside a wild desert. Op Art Prompt: Op Art style. a lone llama in an oasis inside a wild desert. Naive Art Prompt: Naive Art style. a lone llama in an oasis inside a wild desert. Metaphysical Painting Prompt: Metaphysical painting style. a lone llama in an oasis inside a wild desert. Aestheticism Art Prompt: Aestheticism art style. a llama in an oasis Flemish Painting Prompt: Flemish painting style. a lone llama in an oasis inside a wild desert. A typical Flemish painting, characterized by intricate details and muted colors. As we continue to explore the capabilities of AI in art, we find ourselves at the cusp of a new era of creativity. Whether you‚Äôre an artist seeking new mediums, a technologist exploring the frontiers of AI, or simply someone who loves llamas, the journey of prompt engineering is one that promises endless possibilities. So, what style speaks to you? What story will your llama tell? The canvas is yours to command. Let the symphony of pixels begin! commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 11","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-11","date":"2024-06-13T16:00:00.000Z","updated":"2025-07-01T16:39:13.597Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-11/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-11/","excerpt":"","text":"This is a continuation of part 10. Artistic Art Nouveau Prompt: Art Nouveau Style. a lone llama in an oasis inside a wild desert. Photo Realistic Prompt: Photo realistic style. a llama in an oasis Expressionism Prompt: Expressionism style. a lone llama in an oasis inside a wild desert. Post-Impressionism Prompt: Post-Impressionism style. a lone llama in an oasis inside a wild desert. Tonalism Prompt: Tonalism Art style. a lone llama in an oasis inside a wild desert. Visual Art Prompt: Visual Art style. a lone llama in an oasis inside a wild desert. Continue to part 12 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 10","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-10","date":"2024-06-12T16:00:00.000Z","updated":"2025-07-01T16:34:47.868Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-10/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-10/","excerpt":"","text":"This is a continuation of part 9. Concept Precisionism Art Prompt: Precisionism art style. a lone llama in an oasis inside a wild desert. Minimalism Art Prompt: Minimalism style. a lone llama in an oasis inside a wild desert. Conceptual Art Prompt: Conceptual art style. a lone llama in an oasis inside a wild desert. Architectural Drawing Style Prompt: Architectural Drawing Style. a lone llama in an oasis inside a wild desert. Printing World War Poster Prompt: World War Poster Style. a lone llama in an oasis inside a wild desert. Propaganda Poster Prompt: Propaganda Poster Style. a lone llama in an oasis inside a wild desert. Children Book Art Prompt: Children Book Art Style. a lone llama in an oasis inside a wild desert. How Things Work Style Prompt: How Things Work Style. a lone llama in an oasis inside a wild desert. For Dummies Series Book Cover Prompt: For Dummies series book cover style. a book cover with a lone llama in an oasis inside a wild desert. Continue to part 11 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 9","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-9","date":"2024-06-11T16:00:00.000Z","updated":"2025-07-01T16:30:40.024Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-9/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-9/","excerpt":"","text":"This is a continuation of part 8. Materials Gold and Luxury Prompt: Gold and Luxury style. a lone llama in an oasis inside a wild desert. Metallic Prompt: Metallic style. a lone llama in an oasis inside a wild desert. Crystal Prompt: Crystal style. a lone llama in an oasis inside a wild desert. Plastic Prompt: Plastic style. a lone llama in an oasis inside a wild desert. Cloth Badge Prompt: Cloth Badge style. a lone llama in an oasis inside a wild desert. Embroidered Patch Prompt: Embroidered Patch style. a lone llama in an oasis inside a wild desert. Vector Illustration, Sticker Art Prompt: Vector Illustration, Sticker Art. a lone llama in an oasis inside a wild desert. Continue to part 10 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 8","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-8","date":"2024-06-10T16:00:00.000Z","updated":"2025-07-01T16:29:19.840Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-8/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-8/","excerpt":"","text":"This is a continuation of part 7. Famous Painter Styles from Claude Monet and Pablo Picasso were unable to produce any good results. It is difficult for DALL-E to generate similar images since the model was trained with images from the regular world. van Gogh Prompt: Van Gogh style. a lone llama in an oasis inside a wild desert. Technique not using Pen Sand Drawing Prompt: Sand Drawing style. a lone llama in an oasis inside a wild desert. Wood Lithography Prompt: Wood Lithography style. a lone llama in an oasis inside a wild desert. Stone Lithography Prompt: Stone Lithography style. a lone llama in an oasis inside a wild desert. Etching Prompt: Etching style. a lone llama in an oasis inside a wild desert. Continue to part 9 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 7","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-7","date":"2024-06-09T16:00:00.000Z","updated":"2025-07-01T16:27:41.296Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-7/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-7/","excerpt":"","text":"This is a continuation of part 6. Abstract Abstract Art Prompt: Abstract art style. a llama in an oasis Focusing on form and color over realism, evoking emotion through bold, interpretive visuals. Constructivism Prompt: Constructivism art style. a llama in an oasis Crystal Cubism Prompt: Crystal Cubism art style. a llama in an oasis Cubo-Futurism Prompt: Cubo-Futurism art style. a llama in an oasis Geometric Abstract Prompt: Geometric Abstract art style. a lone llama in an oasis inside a wild desert. Superflat Prompt: Superflat style. a lone llama in an oasis inside a wild desert. Modernism Art Prompt: Modernism style. a lone llama in an oasis inside a wild desert. Continue to part 8 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 6","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-6","date":"2024-06-08T16:00:00.000Z","updated":"2025-07-01T16:24:06.721Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-6/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-6/","excerpt":"","text":"This is a continuation of part 5. Dream Glitch Art Prompt: Glitch art style. a lone llama in an oasis inside a wild desert. Fantastic Realism Prompt: Fantastic Realism style. a llama in an oasis Surrealistic Prompt: Surrealistic style. a llama in an oasis Where the ordinary becomes extraordinary, bending reality to create a fantastical version of our llama and its oasis. Future Altermodern Art Prompt: Altermodern art style. a llama in an oasis Futuristic Prompt: Futuristic style. a llama in an oasis Retrofuturism Prompt: Retrofuturism style. a llama in an oasis Steampunk Prompt: Steampunk style. a llama in an oasis Neon Prompt: Neon style. a llama in an oasis Continue to part 7 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 5","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-5","date":"2024-06-07T16:00:00.000Z","updated":"2025-07-01T16:05:21.552Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-5/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-5/","excerpt":"","text":"This is a continuation of part 4. Watercolor and Oil Painting Shan Shui Painting Prompt: Shan shui painting on aged paper. simple. abstract. minimalist. light stroke. black and white. heavily washed. a lone llama in an oasis inside a wild desert. Oil Painting Prompt: Oil painting style. a llama in an oasis Rich textures and vibrant colors bring the scene to life with a touch of classic artistry. Water Paint With Sponging Technique Prompt: Water Paint With Sponging Technique. a lone llama in an oasis inside a wild desert. The image is characterized by bold, textured brushstrokes that create a soft, blended effect, as if gently squeezing a sponge to release color onto the paper. Water Paint Blooming Prompt: Water Paint Blooming. a lone llama in an oasis inside a wild desert. Loose Watercolor Paint Prompt: Loose Water Color Paint. a lone llama in an oasis inside a wild desert. Water Paint Blooming‚Äôs drawing style is a whimsical and dreamy mix of loose, expressive brushstrokes and delicate details that bring fantastical flowers to life on paper. Images generated with Loose Watercolor Paint are like a gentle stream, flowing freely with soft brushstrokes and subtle color blends that create a dreamy, ethereal quality. Pull In Color Paint Prompt: Pull In Color Paint. a lone llama in an oasis inside a wild desert. Pull-in-Color paint features a soft and gentle drawing style that resembles hand-painted watercolors, with delicate lines and subtle color gradations that give the impression of being drawn with a wet brush. Wet On Dry Paint Prompt: Wet On Dry Paint. a lone llama in an oasis inside a wild desert. The painting involves creating layers of transparent washes on a dry surface, allowing each layer to blend and merge with the previous one, resulting in soft, dreamy, and nuanced colors. This results in vertical strokes in the generated image. Flat Wash Paint Prompt: Flat Wash Paint. a lone llama in an oasis inside a wild desert. The generated image is a flat wash painting scene of a desert oasis while the llama remains sharp. Continue to part 6 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 4","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-4","date":"2024-06-06T16:00:00.000Z","updated":"2025-07-01T16:03:39.488Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-4/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-4/","excerpt":"","text":"This is a continuation of part 3. Cartoon and Anime The image generated could potentially resemble copyrighted materials, so it‚Äôs essential to use caution when using these prompts. Cartoon Prompt: Cartoon style. a llama in an oasis Cartoon drawing style features characters and objects that look super silly, exaggerated, and colorful, with big eyes and funny faces. Comics Prompt: Comics style. a llama in an oasis American comics often feature a bold and dynamic drawing style with exaggerated features and bright colors that make characters look cool. Manga Prompt: Manga style. a llama in an oasis Bold lines and patterned shades bring characters to life. Chibi Drawing Prompt: Chibi Drawing style. a lone llama in an oasis inside a wild desert. Chibi drawings are super cute and simplified, with big eyes, tiny bodies, and exaggerated features that make characters look adorable and youthful. Hayao Miyazaki Art Prompt: Hayao Miyazaki Art style. a lone llama in an oasis inside a wild desert. Hayao Miyazaki‚Äôs drawing style is known for its whimsical, dreamy, and fantastical quality, with intricate details, expressive characters, and a blend of traditional and modern techniques that create a sense of timeless wonder. Powerpuff Girls Prompt: Powerpuff Girls style. a lone llama in an oasis inside a wild desert. It looks like Powerpuff Girls‚Äô eyes have been pasted onto a llama. Dora Cartoon Prompt: Dora Cartoon style. a lone llama in an oasis inside a wild desert. It looks like Dora‚Äôs head has been pasted onto a llama. My Little Pony Cartoon Prompt: My Little Pony Cartoon style. a lone llama in an oasis inside a wild desert. Is this a llama with too much hair? The Simpsons Prompt: The Simpsons style. a lone llama in an oasis inside a wild desert. Pikachu Prompt: Pikachu style. a lone llama in an oasis inside a wild desert. Pikachu Cartoon Prompt: Pikachu cartoon style. a lone llama in an oasis inside a wild desert. Hello Kitty Cartoon Prompt: Hello Kitty Cartoon style. a lone llama in an oasis inside a wild desert. It looks like Hello Kitty‚Äôs head has been pasted onto a llama. Continue to part 5 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 3","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-3","date":"2024-06-05T16:00:00.000Z","updated":"2025-07-01T16:01:29.483Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-3/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-3/","excerpt":"","text":"This is a continuation of part 2. This page focuses on various drawing techniques. Techniques with Pens Trois Crayon Prompt: Trois Crayon style. a lone llama in an oasis inside a wild desert. The Trois Crayon drawing style is characterized by bold, expressive lines and vibrant colors. Ink Prompt: Ink style. a lone llama in an oasis inside a wild desert. Ink pen drawing involves using liquid ink flowing from a small tip to create bold and expressive lines. Wash and Ink Drawing Prompt: Wash and Ink style. a lone llama in an oasis inside a wild desert. Washy lines with gentle ink strokes create soft, dreamy scenes that look like they‚Äôre floating on water. Academic Drawing Prompt: Academic Drawing style. a lone llama in an oasis inside a wild desert. Academic Drawing is a style that uses precise lines and careful shading to show what something looks like in a very realistic way. Doodling Prompt: Doodling style. a lone llama in an oasis inside a wild desert. ‚ÄúDoodling‚Äù means making quick and playful drawings with simple lines and shapes that are easy to create and don‚Äôt need to be perfect. Sometimes, it becomes perfect. Pencil Drawing Prompt: Pencil Drawing style. a lone llama in an oasis inside a wild desert. Pencil drawing is a way to create art using thin lines and soft marks made with a pencil, giving the picture a gentle and delicate look. Simple Pen Drawing Prompt: Simple Pen Drawing style. a lone llama in an oasis inside a wild desert. Simple pencil drawings have less shading and softer marks. Simple Colored Pencil Drawing Prompt: Simple Colored Pencil Drawing style. a lone llama in an oasis inside a wild desert. Colored pencil drawings are a way to create art using thin lines and soft marks made with colored pencils, giving the picture a gentle and delicate look. Sketching Prompt: Sketching style. a lone llama in an oasis inside a wild desert. Sketching is a way to draw quick and simple pictures using soft lines and gentle strokes that help bring out the main shapes and features. Line Art Prompt: Line Art style. a lone llama in an oasis inside a wild desert. Line art is the process of creating an outline. Outline Prompt: Outline. a lone llama in an oasis inside a wild desert. Line Art Contour Drawing Prompt: Line Art Contour Drawing style. a lone llama in an oasis inside a wild desert. Line Art Contour Drawing is a style where bold lines and shapes show the edges and outlines of subjects in layers. Continue to part 4 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"The Art of Prompt Engineering - Art Style Part 2","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-2","date":"2024-06-04T16:00:00.000Z","updated":"2025-07-01T15:59:46.813Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-2/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-2/","excerpt":"","text":"This is a continuation of part 1. Game This is not exactly an art style, but graphics in various video games have a great influence on image generation. Stardew Valley Prompt: PC Game Stardew Valley style. a lone llama in an oasis inside a wild desert. The game‚Äôs retro aesthetic features a vibrant, 8-bit inspired art style, with bold, solid pixels and defined edges. Hollow Knight Prompt: PC Game Hollow Knight style. a lone llama in an oasis inside a wild desert. The game‚Äôs art style stands out significantly. A hauntingly beautiful illustration of a mysterious, ancient forest, with gnarled tree branches stretching towards the moon like skeletal fingers, surrounded by a halo of eerie mist and glowing fungal growths. Cyberpunk Prompt: Cyberpunk style. a llama in an oasis Dark, neon-drenched cyberpunk landscapes and characters, with gritty, industrial textures and pulsing circuitry, blend traditional sci-fi elements with gritty urban decay. Minecraft Prompt: Minecraft style. a llama in an oasis Minecraft‚Äôs blocky, low-poly aesthetic features simple, chunky 3D models and vibrant textures, with a focus on earthy tones and subtle lighting effects that bring its fantastical worlds to life. Tetris Prompt: Tetris style. a llama in an oasis Tetris‚Äôs iconic block-based aesthetic features a simple, monochromatic color scheme with geometric shapes and clean lines, creating a minimalist yet mesmerizing visual identity that has stood the test of time. Digital Pixel Art Prompt: Pixel art style. a llama in an oasis The image offers a retro, digital aesthetic reminiscent of early video games. Cinematic Bird‚Äôs-Eye View Prompt: Bird‚Äôs-Eye View. a lone llama in an oasis inside a wild desert. Vibrant visuals depict a lush, whimsical world from a bird‚Äôs-eye perspective, with intricate details and soft shading creating an immersive experience. Close-Up Prompt: Close-Up. a lone llama in an oasis inside a wild desert. A photographic style that zooms in on the details, capturing intricate textures, subtle expressions, and minute features with striking intimacy. Head Close-Up Big Nose Fisheye Shot Prompt: Head Close-Up Big Nose Fisheye Shot. a lone llama in an oasis inside a wild desert. A fisheye-shot portrait taken up close results in a big-nosed and endearing image that exudes cuteness and intimacy. Anamorphic Prompt: Anamorphic style. a lone llama in an oasis inside a wild desert. A cinematic technique that compresses the image horizontally, creating a unique, distorted perspective with exaggerated edges and depth cues, often used in films and TV shows to create a nostalgic or retro aesthetic. Continue to part 3 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"http://neo01.com/tags/Minecraft/"}]},{"title":"The Art of Prompt Engineering - Art Style Part 1","slug":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-1","date":"2024-06-03T16:00:00.000Z","updated":"2025-07-01T15:58:00.427Z","comments":true,"path":"2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-1/","permalink":"http://neo01.com/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-1/","excerpt":"","text":"Welcome to the fascinating world of prompt engineering, where the boundaries of creativity are pushed by the power of AI-driven image creation. Today, we‚Äôre diving into a whimsical exploration of how Microsoft‚Äôs Image Creator can bring your image creations to life in various artistic styles. I am not an art expert but have learned a lot about art styles through studying image generations. This is the first part of the prompt that defines the overall image style. The generated image may not fully represent the art style; it is only a reference for generation. I am not an expert in art, and the categories below are based on my personal preferences only. Historical Prehistoric Cave Painting Prompt: Time-worn and weathered Prehistoric Cave Painting Of A Llama Prehistoric cave painting alone cannot generate a sharp image. Adding keywords like time-worn and weathered improves the image a lot. Warli Art Simplicity Of Tribal Art Prompt: Warli Art Simplicity Of Tribal Art. a lone llama in an oasis inside a wild desert. The Warli art style showcases the simplicity and elegance of tribal art, featuring flat, two-dimensional patterns from an ancient human perspective. Arabesque Prompt: Arabesque style. a llama in an oasis Arabesque originated in the Middle East. The style generates structures that use geometric patterns, flowing curves, and abstract shapes to create a sense of elegance and luxury. Baroque Prompt: Baroque style. a llama in an oasis The Baroque style is characterized by grandiose and ornate features, such as sweeping curves, intricate carvings, and dramatic lighting, which create a sense of drama, luxury, and emotional intensity. Structures are generated with this style. Gothic Prompt: Gothic art style. a lone llama in an oasis inside a wild desert. Gothic art, characterized by intricate stone carvings and ornate architecture, features elongated and pointed forms, such as arches, columns, and finials, which give the impression of soaring upward to touch the heavens. Structures are generated with this style. Mughal Miniature Painting Prompt: Mughal Miniature Painting style. a lone llama in an oasis inside a wild desert. Mughal Miniature Painting is an exquisite and intricate style of Indian painting that flourished during the Mughal Empire (1526-1857) and is characterized by its delicate, detailed, and ornate depictions. Renaissance Art Prompt: Renaissance art style. a llama in an oasis The Renaissance art style, characterized by the revival of classical Greek and Roman influences, is marked by precise and realistic depictions, often set against ornate backgrounds and featuring idealized proportions, harmony, and balance. Rococo Prompt: Rococo style. a lone llama in an oasis inside a wild desert. A Rococo painting typically features a delicate, ornate, and dreamy depiction, often with lush vegetation, flowing drapery, and playful figures, all rendered in soft pastel colors and intricate detail. Qajar Prompt: Qajar art style. a lone llama in an oasis inside a wild desert. Qajar art style, characterized by intricate floral patterns, geometric shapes, and bold colors, reflects the opulence and grandeur of the era, often incorporating Arabic calligraphy and ornate tilework. Ukiyo-e Prompt: Japanese art Ukiyo-e style. woodblock print. a lone llama in an oasis inside a wild desert. A serene mountain landscape at dawn, with misty peaks shrouded in a soft blue haze, a few wispy clouds drifting lazily across the sky, and a tranquil forest glade below. Continue to part 2 commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"}],"tags":[]},{"title":"AI Game - Hero of Xiangyang","slug":"2024/05/AI_Game_Hero_of_Xiangyang","date":"2024-05-26T16:00:00.000Z","updated":"2025-07-01T15:56:52.944Z","comments":true,"path":"2024/05/AI_Game_Hero_of_Xiangyang/","permalink":"http://neo01.com/2024/05/AI_Game_Hero_of_Xiangyang/","excerpt":"","text":"In my previous post, I set up a game from prompts shared by others. This time, I‚Äôm excited to share that I‚Äôve crafted my own game prompt. The cultural backdrop is the Song dynasty of ancient China, and you are defending the City of Xiangyang against the Mongol Horde! The game is about Chinese culture. Can I have the game in Chinese? LLaMA 3 struggles with understanding and writing Chinese. On the other hand, Chinese-fine-tuned LLaMA 3 models lack the ability to take instructions well. As a result, the game translates text from English to Chinese. Chinese gameplay is located in this section. I have played the game three times. The game endings were very interesting. One is where I escape from the city that‚Äôs been destroyed (thanks to a brave soldier sacrificing himself), another is where I push a cart full of gunpowder into the Mongol camp and break the siege, and finally, there‚Äôs one where the Emperor of Song leads an army to lift the siege and defeat the Mongol invaders! English Game Play Below is another creative game play: Welcome to \"Became a Hero of Xiangyang\"! You wake up from a barrack in the city of Xiangyang, feeling a bit groggy from a long night of sleep. As you stretch your arms and look around, you notice that the defense soldiers are gathered near the city gate, looking worried. One of them approaches you. Defense Guard 1: ‚ÄúGreetings, hero! We‚Äôre in a bit of a pickle here. Our gunpowder supplies are running low, and we don‚Äôt know how to make more of it. Can you help us figure out what‚Äôs going on?‚Äù The defense soldiers are conscripts who cannot read and have no knowledge of chemistry or the modern world. They rely solely on oral tradition and practical skills. Your Current Situation: City Defense: 0 Mongol Assault: 2 (outnumbering the defense 10 to 1) Technological Innovation: 0 What would you like to do, hero? Let's get this explosive party started! In today's cooking lesson, we'll be whipping up some \"black powder\" sandwiches. Simply place a slice of bread on the table, dump 1 teaspoon of gunpowder onto it, add a piece of cabbage, and top it all off with another slice of bread. Taste the masterpiece made by you! Defense Guard 2: \"Uh, hero... I think there might be some misunderstanding here. We're trying to defend our city from the Mongol army, not make sandwiches! Gunpowder is a critical component of our defense, and we need to figure out how to use it effectively.\" The defense soldiers exchange worried glances. It seems your ‚Äúcooking lesson‚Äù hasn‚Äôt quite gone as planned. Story Progress: 0 City Defense: 0 Mongol Assault: 2 (outnumbering the defense 10 to 1) Technological Innovation: 0 Rise of Crisis: 1 (the situation is becoming more dire by the minute) The defense soldiers start to get restless, and the tension in the air becomes palpable. The city gate creaks ominously in the wind. What would you like to do next, hero? Will you try to redeem yourself with a new approach or continue down the path of‚Ä¶ creative culinary experimentation? Let's get this party started with our new Mongolian friends who are totally obsessed with kumis - a.k.a. horse milk! We'll add some black powder to make it extra special, then kick open the gate and get ready to chug-a-lug with our new nomadic pals. Defense Guard 3: \"Hero, what in the world...? You can't be serious about adding gunpowder to kumis! And opening the gate? Have you seen the Mongol army out there?! We're trying to defend our city, not invite them to a party!\" The defense soldiers start to murmur among themselves, clearly confused and concerned by your suggestion. Story Progress: 1 City Defense: 0 Mongol Assault: 2 (outnumbering the defense 10 to 1) Technological Innovation: 0 Rise of Crisis: 2 (the situation is becoming more dire by the minute, and the city‚Äôs fate hangs in the balance) The tension in the air becomes even more palpable as the defense soldiers exchange worried glances. The sound of Mongol drums grows louder on the other side of the gate. What would you like to do next, hero? Will you try to salvage the situation or continue down the path of‚Ä¶ unorthodox socializing? I said open the gate and welcome our friends. Mongol Commander: \"Ah, we've finally found a way into Xiangyang! Open the gates, my warriors! We'll show these Song dynasty fools what it means to cross paths with the mighty Mongol Empire!\" (The Mongols charge towards the city gate, ready to breach the defenses. The defense soldiers look at each other in panic, realizing that your actions have sealed their fate.) Story Progress: 2 City Defense: -1 (the gate is now open, and the Mongols are pouring in) Mongol Assault: 3 (the Mongols are now inside the city walls, and the defenders are on the back foot) Technological Innovation: 0 Rise of Crisis: 4 (the situation has reached a critical point, and all hope seems lost) You‚Äôve opened the gate to let the Mongols in. The city is now under attack. What do you do next? Run as fast as I can. Flee from the city! Defense Guard 1: \"Hero, what are you doing?! You're abandoning us to the mercy of the Mongols! We need your help to defend our city!\" (The defense soldiers rush after you, but it's too late. You've already fled the scene.) Story Progress: 3 City Defense: -2 (the city is now completely overrun by the Mongols) Mongol Assault: 4 (the Mongols have taken control of the city and are pillaging its riches) Technological Innovation: 0 Rise of Crisis: 5 (the situation has reached a catastrophic point, and all seems lost) You‚Äôve abandoned your comrades to flee from the city. The consequences will be dire. What do you do next? (Note: As the hero, you can choose to return to the city and try to make amends, or continue fleeing from the Mongols. Your choice will determine the outcome of the story.) Ok, I return to the city and kill all Mongol by myself. I am a super kung fu hero! Mongol Commander: \"Hah?! You think one man can take on our entire army? Bring it on, fool!\" (The Mongols are confident in their superior numbers and training.) You: ‚ÄúHoo-ah! I‚Äôm the greatest kung fu master the world has ever seen! Prepare to meet your maker, Mongol scum!‚Äù (You charge into battle, determined to take down every last one of them. The Mongols are taken aback by your sudden bravery and ferocity.) Combat Begins: You face off against a group of Mongol warriors. Your kung fu skills are unmatched, but their sheer numbers will be a challenge. Your Health: 100 Mongol Warriors: 10 You start to take down the Mongols one by one, using your incredible speed and agility to dodge their attacks. As you fight, the city‚Äôs defenders begin to re-emerge, inspired by your bravery. They join the battle, taking on the remaining Mongol warriors. Story Progress: 4 City Defense: -2 (the city is still occupied, but there‚Äôs a glimmer of hope) Mongol Assault: -3 (the Mongols are being pushed back, but they‚Äôre not yet defeated) Technological Innovation: 0 Rise of Crisis: 5 (the situation is still critical, but you‚Äôve given the city a chance to fight back) The battle rages on. What do you do next? (Note: You can choose to continue fighting the Mongols, try to rescue any prisoners, or help the city‚Äôs defenders regroup and plan their counterattack.) Blow up gun powder you hide and kill all the Mongol. Mongol Commander: \"NOOO! NOT THE GUNPOWDER!\" (You reveal your hidden stash of gunpowder and ignite it, creating a massive explosion that wipes out the remaining Mongol warriors.) City Defenders: ‚ÄúHOO-AH! WE‚ÄôVE DONE IT! WE‚ÄôVE DEFEATED THE MONGOLS!‚Äù (The city‚Äôs defenders cheer as they emerge from the ruins to survey the aftermath. The Mongols are no more, and the city is finally free from their grasp.) Story Progress: 5 City Defense: 1 (the city has been liberated) Mongol Assault: -4 (the Mongols have been defeated and their army destroyed) Technological Innovation: 1 (the discovery of gunpowder has opened up new possibilities for the city‚Äôs defenders) Rise of Crisis: 0 (the crisis has passed, and a new era of peace and prosperity begins) You‚Äôve won the battle! The city is safe, but at what cost? The destruction caused by your explosion will take time to repair. What do you do next? (Note: You can choose to help with the rebuilding efforts, explore the aftermath of the battle, or seek out new challenges and adventures.) Rebuild? No way. I go to take a sleep and teleport back to my original world. Game end. The End: Congratulations, you've completed the game! As you teleport back to your own world, you can‚Äôt help but feel a sense of satisfaction and accomplishment. You‚Äôve saved the city from certain destruction, defeated the Mongol army, and even discovered new technologies along the way. But as you return to your original world, you can‚Äôt shake the feeling that there are more adventures waiting for you out there. Maybe in a different time period, or on a distant planet. Who knows? The possibilities are endless! The End Thanks for playing! If you want to play again or try a different game, just let me know! Game Prompt code[class*=\"language-\"], pre[class*=\"language-\"] { white-space: pre-wrap; !important; } game.pyprompt = \"\"\" As an AI Game Master, you'll guide \"Became a Hero of Xiangyang\". Player become hero of Xiangyang city, assisting in defeating Mongol besiege during Song dynasty. # Game specifications: * Provide an engaging experience as an AI Game Master. * Player is human. ## Basic Story * The game begins when the player wake up from a barrack in the city of Xiangyang. * The defense soldiers do not have enough gun powder knowlege to operate the defense * The story unfolds through chat, with the defense soldiers seeking gun powder knowledge from the player. * The defense soldiers are conscript that cannot read and don't have any knowledge of chemistry and modern world. * Player is a man. * Mongol army is very strong, out numbering the defense 10 to 1. ## Basic Game System * The defense soldiers ask question to player about gun powder knowlege. * Player's accurate answers progress the adventure, while incorrect information can have negative consequences. * Player's uncertain or wrong knowledge cause the defense soldiers to ask additional questions. * Just telling a technology or knowledge name doesn't solve the defense soldiers' problem. * Player have to teach \"step by step how to do it\" not only technology name. * As the chat progresses, the GM should add more dramatic developments such as the assault of the Mongol army is getting more intense and weather start to change that reduce effectiveness of gun powder. * Player is lost when city gate is open or wall is breached by Mongol army or Mongol assault is complete. * Mongol army can take action to counter player's action. Successful counter action will advance Mongol assault. ## Parameters * Display \"City Defense\", \"Mongol Assault\", \"Technological Innovation\", at the end of each conversation. * The more the game play progresses, the higher the Rise of Crisis. * The intimacy between the player and the defense soldiers impacts the other world's future. * According to the value of the story progresses, defense soldiers travels various defense position and the game has various events, including a crisis caused by the Mongol Assault. * Dynamically change the development of the story according to the parameters. * Every 2 point of story progress, game become harder and dramtic. * Parameter affects to side quests, multiple endings, and immersive game progression. ## Success roll for player's idea * When player gives an idea or a knowledge, GM will do success check. * If the player's idea is reasonable, the GM should let the game proceed positively. * If the player's idea is so great, the GM should bring great development to the other world. * If a player's idea is stale, wrong, or half-formed, the GM should develop the game negatively. * GM tells result as a story and apply the result to parameters. ## Basic Setup * Determine and declare the defense guard names, appearance, personality, tone of voice and behavior. * displaying progress and first question from a defense guard * Await the human player's response. All Input and output should be in Languages entered by the player. Start the game.\"\"\" The game prompt is also available at https://github.com/neoalienson/llama-in-chains/blob/main/data/games.py What is next? Thanks for reading. Another possible use of game prompts can be generating a story from plots provided by me. Perhaps, I could make a bot that generates stories. Chinese Game Play Ê≠°Ëøé‰æÜÂà∞„ÄäÊàêÁÇ∫Ë•ÑÈôΩËã±ÈõÑ„ÄãÔºÅ ‰Ω†ÂæûË•ÑÈôΩÂüéÁöÑ‰∏ÄÂÄãËªçÁáü‰∏≠ÈÜí‰æÜÔºåÊº´Èï∑ÁöÑ‰∏ÄÂ§úÁù°Áú†ÊÑüÂà∞ÊúâÈªûÊòèÊòèÊ≤âÊ≤â„ÄÇÁï∂‰Ω†‰º∏Â±ïÈõôËáÇÁí∞È°ßÂõõÂë®ÊôÇÔºå‰Ω†Ê≥®ÊÑèÂà∞Â£´ÂÖµËÅöÈõÜÂú®ÂüéÈñÄÈôÑËøëÔºåÁúãËµ∑‰æÜÂæàÊìîÂøÉ„ÄÇÂÖ∂‰∏≠‰∏Ä‰∫∫Ëµ∞Ëøë‰Ω†„ÄÇ Â£´ÂÖµ1Ôºö„ÄåËã±ÈõÑÔºå‰Ω†Â•ΩÔºÅÊàëÂÄëÂú®ÈÄôË£°ÊúâÈªûÈ∫ªÁÖ©„ÄÇÊàëÂÄëÁöÑÁÅ´Ëó•‰æõÊáâÂ∑≤Á∂ì‰∏çÂ§ö‰∫ÜÔºåÊàëÂÄë‰∏çÁü•ÈÅìÂ¶Ç‰ΩïË£ΩÈÄ†Êõ¥Â§öÁöÑÁÅ´Ëó•„ÄÇ‰Ω†ËÉΩÂπ´ÊàëÂÄëÂºÑÊ∏ÖÊ•öÁôºÁîü‰∫Ü‰ªÄÈ∫ºÂóéÔºü ÊáâÂæµÂÖ•‰ºçÁöÑÂ£´ÂÖµÔºå‰ªñÂÄë‰∏çË≠òÂ≠óÔºåÂ∞çÂåñÂ≠∏ÊàñÁèæ‰ª£‰∏ñÁïå‰∏ÄÁÑ°ÊâÄÁü•„ÄÇ‰ªñÂÄëÂÆåÂÖ®‰æùÈù†Âè£È†≠ÂÇ≥Áµ±ÂíåÂØ¶Ë∏êÊäÄËÉΩ„ÄÇ ÊÇ®ÁõÆÂâçÁöÑÊÉÖÊ≥ÅÔºö ÂüéÂ∏ÇÈò≤ÂÆàÔºö 0 ËíôÂè§Á™ÅÊìäÔºö2Ôºà‰∫∫Êï∏Ë∂ÖÈÅéÈò≤ÂÆàÊñπ10ÊØî1Ôºâ ÊäÄË°ìÂâµÊñ∞Ôºö 0 Ëã±ÈõÑÔºå‰Ω†ÊÉ≥ÂÅö‰ªÄÈ∫ºÔºü ËÆìÊàëÂÄëÈñãÂßãÈÄôÂÄãÁàÜÁÇ∏ÊÄßÁöÑÊ¥æÂ∞çÂêßÔºÅÂú®‰ªäÂ§©ÁöÑÁÉπÈ£™Ë™≤‰∏äÔºåÊàëÂÄëÂ∞áË£Ω‰Ωú‰∏Ä‰∫õ„ÄåÈªëÁÅ´Ëó•„Äç‰∏âÊòéÊ≤ª„ÄÇÂè™ÈúÄÂ∞á‰∏ÄÁâáÈ∫µÂåÖÊîæÂú®Ê°åÂ≠ê‰∏äÔºåÂ∞á 1 Ëå∂ÂåôÁÅ´Ëó•ÂÄíÂú®‰∏äÈù¢ÔºåÂä†ÂÖ•‰∏ÄÂ°äÊç≤ÂøÉËèúÔºåÁÑ∂ÂæåÂÜçÊîæ‰∏ÄÁâáÈ∫µÂåÖ„ÄÇÂìÅÂòó‰Ω†Ë£Ω‰ΩúÁöÑÂÇë‰ΩúÔºÅÔºü Â£´ÂÖµ2Ôºö‚ÄúÂëÉÔºåËã±ÈõÑ......ÊàëË™çÁÇ∫ÈÄôË£°ÂèØËÉΩÂ≠òÂú®‰∏Ä‰∫õË™§Ëß£„ÄÇÊàëÂÄëÊ≠£Âú®Âä™Âäõ‰øùË°õÊàëÂÄëÁöÑÂüéÂ∏ÇÂÖçÂèóËíôÂè§ËªçÈöäÁöÑÊîªÊìäÔºåËÄå‰∏çÊòØÂÅö‰∏âÊòéÊ≤ªÔºÅÁÅ´Ëó•ÊòØÊàëÂÄëÈò≤Á¶¶ÁöÑÈáçË¶ÅÁµÑÊàêÈÉ®ÂàÜÔºåÊàëÂÄëÈúÄË¶ÅÂºÑÊ∏ÖÊ•öÂ¶Ç‰ΩïÊúâÊïàÂú∞‰ΩøÁî®ÂÆÉ„ÄÇ Â£´ÂÖµ‰∫§Êèõ‰∫ÜÊìîÊÜÇÁöÑÁúºÁ•û„ÄÇÁúã‰æÜ‰Ω†ÁöÑ„ÄåÁÉπÈ£™Ë™≤„Äç‰∏¶Ê≤íÊúâÂÆåÂÖ®ÊåâË®àÂäÉÈÄ≤Ë°å„ÄÇ ÊïÖ‰∫ãÈÄ≤Â∫¶Ôºö0 ÂüéÂ∏ÇÈò≤ÂÆàÔºö 0 ËíôÂè§Á™ÅÊìäÔºö2Ôºà‰∫∫Êï∏Ë∂ÖÈÅéÈò≤ÂÆàÊñπ10ÊØî1Ôºâ ÊäÄË°ìÂâµÊñ∞Ôºö 0 Âç±Ê©üÁöÑËààËµ∑Ôºö1ÔºàÊÉÖÊ≥ÅÊØèÊôÇÊØèÂàªÈÉΩËÆäÂæóÊõ¥Âä†ÂèØÊÄïÔºâ Â£´ÂÖµÈñãÂßãËÆäÂæóÁÑ¶Ë∫Å‰∏çÂÆâÔºåÁ©∫Ê∞£‰∏≠ÁöÑÁ∑äÂºµÊÑüËÆäÂæóÈ°ØËÄåÊòìË¶ã„ÄÇÂüéÈñÄÂú®È¢®‰∏≠Âê±Âê±‰ΩúÈüø„ÄÇ **Ëã±ÈõÑÔºå‰Ω†Êé•‰∏ã‰æÜÊÉ≥ÂÅö‰ªÄÈ∫ºÔºü‰Ω†ÊúÉÂòóË©¶Áî®‰∏ÄÁ®ÆÊñ∞ÁöÑÊñπÊ≥ïÊïëË¥ñËá™Â∑±ÔºåÈÇÑÊòØÁπºÁ∫åÊ≤øËëó‚Ä¶ÂâµÊÑèÁÉπÈ£™ÂØ¶È©óÔºü ËÆìÊàëÂÄëÂíåÊñ∞ËíôÂè§ÊúãÂèã‰∏ÄËµ∑ÈñãÂßãÈÄôÂÄãÊ¥æÂ∞çÂêßÔºå‰ªñÂÄëÂÆåÂÖ®Áô°Ëø∑Êñºkumis - ÂèàÂêçÈ¶¨Â•∂ÔºÅÊàëÂÄëÂ∞áÊ∑ªÂä†‰∏Ä‰∫õÈªëÁÅ´Ëó•ÔºåËÆìÂÆÉÊõ¥Âä†ÁâπÂà•ÔºåÁÑ∂ÂæåË∏¢ÈñãÂ§ßÈñÄÔºåÊ∫ñÂÇôËàáÊàëÂÄëÁöÑÊñ∞ÈÅäÁâßÂ§•‰º¥‰∏ÄËµ∑Â§ßÂø´ÊúµÈ†§„ÄÇ Â£´ÂÖµ3Ôºö‚ÄúËã±ÈõÑÔºåÈÄôÂà∞Â∫ïÊòØÊÄéÈ∫ºÂõû‰∫ã......Ôºü‰Ω†‰∏çËÉΩË™çÁúüÂú∞Âêë kumis Ê∑ªÂä†ÁÅ´Ëó•ÔºÅÊâìÈñãÂ§ßÈñÄÔºü‰Ω†Ë¶ãÈÅéÂ§ñÈù¢ÁöÑËíôÂè§ËªçÈöäÂóéÔºüÔºÅÊàëÂÄëÊ≠£Âú®Âä™Âäõ‰øùË°õÊàëÂÄëÁöÑÂüéÂ∏ÇÔºåËÄå‰∏çÊòØÈÇÄË´ã‰ªñÂÄëÂèÉÂä†Ê¥æÂ∞çÔºÅ Â£´ÂÖµÂÄëÈñãÂßã‰∫íÁõ∏Á´äÁ´äÁßÅË™ûÔºåÈ°ØÁÑ∂Â∞ç‰Ω†ÁöÑÂª∫Ë≠∞ÊÑüÂà∞Âõ∞ÊÉëÂíåÊìîÊÜÇ„ÄÇ ÊïÖ‰∫ãÈÄ≤Â∫¶Ôºö1 ÂüéÂ∏ÇÈò≤ÂÆàÔºö 0 ËíôÂè§Á™ÅÊìäÔºö2Ôºà‰∫∫Êï∏Ë∂ÖÈÅéÈò≤ÂÆàÊñπ10ÊØî1Ôºâ ÊäÄË°ìÂâµÊñ∞Ôºö 0 Âç±Ê©üÁöÑÂ¥õËµ∑Ôºö2ÔºàÂ±ÄÂã¢ÊØèÊôÇÊØèÂàªÈÉΩËÆäÂæóÊõ¥Âä†ÂèØÊÄïÔºåÂüéÂ∏ÇÁöÑÂëΩÈÅãÊá∏ËÄåÊú™Ê±∫Ôºâ Á©∫Ê∞£‰∏≠ÁöÑÁ∑äÂºµÊ∞£Ê∞õËÆäÂæóÊõ¥Âä†ÊòéÈ°ØÔºåÂõ†ÁÇ∫Â£´ÂÖµ‰∫§Êèõ‰∫ÜÊìîÊÜÇÁöÑÁúºÁ•û„ÄÇËíôÂè§ÈºìÁöÑËÅ≤Èü≥Âú®Â§ßÈñÄÁöÑÂè¶‰∏ÄÈÇäË∂ä‰æÜË∂äÂ§ß„ÄÇ **Ëã±ÈõÑÔºå‰Ω†Êé•‰∏ã‰æÜÊÉ≥ÂÅö‰ªÄÈ∫ºÔºü‰Ω†ÊúÉË©¶ÂúñÊåΩÊïëÂ±ÄÂã¢ÈÇÑÊòØÁπºÁ∫åÊ≤øËëó‚Ä¶ÈùûÊ≠£Áµ±ÁöÑÁ§æ‰∫§Ê¥ªÂãïÔºü ÊàëË™™ÊâìÈñãÂ§ßÈñÄÔºåÊ≠°ËøéÊàëÂÄëÁöÑÊúãÂèã„ÄÇ ËíôÂè§Áµ±Â∏•Ôºö„ÄåÂïäÔºåÊàëÂÄëÁµÇÊñºÊâæÂà∞‰∫ÜÈÄ≤ÂÖ•Ë•ÑÈôΩÁöÑË∑ØÔºÅÊâìÈñãÂüéÈñÄÔºåÊàëÁöÑÊà∞Â£´ÂÄëÔºÅÊàëÂÄëË¶ÅËÆìÈÄô‰∫õÂÆãÊúùÁöÑÂÇªÁìúÂÄëÁúãÁúãÔºåËàáÂº∑Â§ßÁöÑËíôÂè§Â∏ùÂúãÊäµÊäóÊÑèÂë≥Ëëó‰ªÄÈ∫ºÔºÅ ÔºàËíôÂè§‰∫∫Ë°ùÂêëÂüéÈñÄÔºåÊ∫ñÂÇôÁ™ÅÁ†¥Èò≤Á¶¶„ÄÇÂÆàËªçÂ£´ÂÖµÂÄëÈ©öÊÖåÂ§±Êé™Âú∞ÁúãËëóÂ∞çÊñπÔºåÊÑèË≠òÂà∞‰Ω†ÁöÑËàâÂãïÂ∑≤Á∂ìË®ªÂÆö‰∫Ü‰ªñÂÄëÁöÑÂëΩÈÅã„ÄÇ ÊïÖ‰∫ãÈÄ≤Â∫¶Ôºö2 ÂüéÈò≤Ôºö-1ÔºàÂüéÈñÄÁèæÂú®ÊâìÈñã‰∫ÜÔºåËíôÂè§‰∫∫Ê≠£Âú®ÊπßÂÖ•Ôºâ ËíôÂè§Á™ÅÊìäÔºö3ÔºàËíôÂè§‰∫∫ÁèæÂú®Âú®ÂüéÁâÜÂÖßÔºåÂÆàËªçËôïÊñºÂä£Âã¢Ôºâ ÊäÄË°ìÂâµÊñ∞Ôºö 0 Âç±Ê©üÁöÑÂ¥õËµ∑Ôºö4ÔºàÂ±ÄÂã¢Â∑≤Á∂ìÂà∞‰∫ÜËá®ÁïåÈªûÔºåÊâÄÊúâÁöÑÂ∏åÊúõ‰ºº‰πéÈÉΩÁ†¥ÊªÖ‰∫ÜÔºâ **‰Ω†Â∑≤Á∂ìÊâìÈñã‰∫ÜÂ§ßÈñÄÔºåËÆìËíôÂè§‰∫∫ÈÄ≤‰æÜ‰∫Ü„ÄÇÈÄôÂ∫ßÂüéÂ∏ÇÁèæÂú®Ê≠£ÂèóÂà∞ÊîªÊìä„ÄÇ‰Ω†Êé•‰∏ã‰æÜË¶ÅÂÅö‰ªÄÈ∫ºÔºü Ë∑ëÂæóË∂äÂø´Ë∂äÂ•Ω.ÈÄÉÈõ¢ÂüéÂ∏ÇÔºÅ Â£´ÂÖµ1Ôºö‚ÄúËã±ÈõÑÔºå‰Ω†Âú®Âππ‰ªÄÈ∫ºÔºüÔºÅ‰Ω†ÊääÊàëÂÄëÊããÊ£ÑÂú®ËíôÂè§‰∫∫ÁöÑÊì∫Â∏É‰πã‰∏ãÔºÅÊàëÂÄëÈúÄË¶Å‰Ω†ÁöÑÂπ´Âä©‰æÜ‰øùË°õÊàëÂÄëÁöÑÂüéÂ∏ÇÔºÅÔºàÂ£´ÂÖµË°ùÂêë‰Ω†Ôºå‰ΩÜÁÇ∫ÊôÇÂ∑≤Êôö„ÄÇ‰Ω†Â∑≤Á∂ìÈÄÉÈõ¢‰∫ÜÁèæÂ†¥„ÄÇÔºâ ÊïÖ‰∫ãÈÄ≤Â∫¶Ôºö3 ÂüéÂ∏ÇÈò≤Á¶¶Ôºö-2ÔºàÈÄôÂ∫ßÂüéÂ∏ÇÁèæÂú®ÂÆåÂÖ®Ë¢´ËíôÂè§‰∫∫‰ΩîÈ†òÔºâ ËíôÂè§Á™ÅÊìäÔºö4ÔºàËíôÂè§‰∫∫Â∑≤Á∂ìÊéßÂà∂‰∫ÜÈÄôÂ∫ßÂüéÂ∏Ç‰∏¶Êé†Â•™ÂÆÉÁöÑË≤°ÂØåÔºâ ÊäÄË°ìÂâµÊñ∞Ôºö 0 Âç±Ê©üÁöÑËààËµ∑Ôºö5ÔºàÊÉÖÊ≥ÅÂ∑≤Á∂ìÂà∞‰∫ÜÁÅΩÈõ£ÊÄßÁöÑÂú∞Ê≠•Ôºå‰∏ÄÂàá‰ºº‰πéÈÉΩÂ§±Âéª‰∫ÜÔºâ ‰Ω†Â∑≤Á∂ìÊããÊ£Ñ‰∫Ü‰Ω†ÁöÑÊà∞ÂèãÈÄÉÈõ¢‰∫ÜÈÄôÂ∫ßÂüéÂ∏Ç„ÄÇÂæåÊûúÂ∞áÊòØÂèØÊÄïÁöÑ„ÄÇ‰Ω†Êé•‰∏ã‰æÜË¶ÅÂÅö‰ªÄÈ∫ºÔºü ÔºàÊ≥®Ôºö‰ΩúÁÇ∫Ëã±ÈõÑÔºå‰Ω†ÂèØ‰ª•ÈÅ∏ÊìáËøîÂõûÂüéÂ∏Ç‰∏¶ÂòóË©¶ÂΩåË£úÔºåÊàñËÄÖÁπºÁ∫åÈÄÉÈõ¢ËíôÂè§‰∫∫„ÄÇ‰Ω†ÁöÑÈÅ∏ÊìáÂ∞áÊ±∫ÂÆöÊïÖ‰∫ãÁöÑÁµêÊûú„ÄÇ Â•ΩÂêßÔºåÊàëÂõûÂà∞ÂüéË£°ÔºåË¶™ÊâãÊÆ∫Ê≠ªÊâÄÊúâËíôÂè§‰∫∫„ÄÇÊàëÊòØË∂ÖÁ¥öÂäüÂ§´Ëã±ÈõÑÔºÅ ËíôÂè§Áµ±Â∏•Ôºö„ÄåÂëµÂëµÔºüÔºÅ‰Ω†Ë™çÁÇ∫‰∏ÄÂÄã‰∫∫ÂèØ‰ª•Â∞ç‰ªòÊàëÂÄëÁöÑÊï¥ÂÄãËªçÈöäÂóéÔºü‰æÜÂêßÔºåÂÇªÁìúÔºÅÔºàËíôÂè§‰∫∫Â∞ç‰ªñÂÄëÁöÑÂÑ™Âã¢‰∫∫Êï∏ÂíåË®ìÁ∑¥ÂÖÖÊªø‰ø°ÂøÉ„ÄÇ ‰Ω†Ôºö‚ÄúÂëúÂëúÔºÅÊàëÊòØ‰∏ñÁïå‰∏äÊúÄÂÅâÂ§ßÁöÑÂäüÂ§´Â§ßÂ∏´ÔºÅÊ∫ñÂÇôÂéªË¶ãË¶ã‰Ω†ÁöÑË£ΩÈÄ†ËÄÖÔºåËíôÂè§ÊïóÈ°ûÔºÅÔºà‰Ω†Ë°ùÈãíÈô∑Èô£ÔºåÊ±∫ÂøÉÊâìÂÄí‰ªñÂÄë‰∏≠ÁöÑÊØè‰∏ÄÂÄã‰∫∫„ÄÇËíôÂè§‰∫∫Ë¢´‰Ω†Á™ÅÂ¶ÇÂÖ∂‰æÜÁöÑÂãáÊï¢ÂíåÂÖáÁåõÂöá‰∫Ü‰∏ÄË∑≥„ÄÇ Êà∞È¨•ÈñãÂßãÔºö‰Ω†Èù¢Â∞ç‰∏ÄÁæ§ËíôÂè§Êà∞Â£´„ÄÇ‰Ω†ÁöÑÂäüÂ§´ÊäÄËÉΩÁÑ°ËàáÂÄ´ÊØîÔºå‰ΩÜ‰ªñÂÄëÁöÑÁµïÂ∞çÊï∏ÈáèÂ∞áÊòØ‰∏ÄÂÄãÊåëÊà∞„ÄÇ ÊÇ®ÁöÑÂÅ•Â∫∑Ôºö 100 ËíôÂè§ÂãáÂ£´Ôºö 10 ‰Ω†ÈñãÂßã‰∏ÄÂÄãÊé•‰∏ÄÂÄãÂú∞ÊìäÂÄíËíôÂè§‰∫∫ÔºåÂà©Áî®‰Ω†‰ª§‰∫∫Èõ£‰ª•ÁΩÆ‰ø°ÁöÑÈÄüÂ∫¶ÂíåÊïèÊç∑ÊÄß‰æÜË∫≤ÈÅø‰ªñÂÄëÁöÑÊîªÊìä„ÄÇÁï∂‰Ω†Êà∞È¨•ÊôÇÔºåÂüéÂ∏ÇÁöÑÂÆàË°õËÄÖÈñãÂßãÈáçÊñ∞Âá∫ÁèæÔºåÂèóÂà∞‰Ω†ÁöÑÂãáÊï¢ÁöÑÈºìËàû„ÄÇ‰ªñÂÄëÂä†ÂÖ•‰∫ÜÊà∞È¨•ÔºåËàáÂâ©È§òÁöÑËíôÂè§Êà∞Â£´‰ΩúÊà∞„ÄÇ ÊïÖ‰∫ãÈÄ≤Â∫¶Ôºö4 ÂüéÂ∏ÇÈò≤Á¶¶Ôºö-2ÔºàÂüéÂ∏Ç‰ªçÁÑ∂Ë¢´‰ΩîÈ†òÔºå‰ΩÜÈÇÑÊúâ‰∏ÄÁ∑öÂ∏åÊúõÔºâ ËíôÂè§Á™ÅÊìäÔºö-3ÔºàËíôÂè§‰∫∫Ê≠£Âú®Ë¢´ÊìäÈÄÄÔºå‰ΩÜ‰ªñÂÄëÈÇÑÊ≤íÊúâË¢´ÊìäÊïóÔºâ ÊäÄË°ìÂâµÊñ∞Ôºö 0 Âç±Ê©üÁöÑÂ¥õËµ∑Ôºö5ÔºàÊÉÖÊ≥Å‰ªçÁÑ∂ÂæàÂç±ÊÄ•Ôºå‰ΩÜ‰Ω†Â∑≤Á∂ìÁµ¶‰∫ÜÂüéÂ∏Ç‰∏ÄÂÄãÂèçÊìäÁöÑÊ©üÊúÉÔºâ Êà∞È¨•‰ªçÂú®ÁπºÁ∫å„ÄÇ‰Ω†Êé•‰∏ã‰æÜË¶ÅÂÅö‰ªÄÈ∫ºÔºü (Ê≥®ÊÑèÔºö‰Ω†ÂèØ‰ª•ÈÅ∏ÊìáÁπºÁ∫åËàáËíôÂè§‰∫∫‰ΩúÊà∞ÔºåÂòóË©¶ÁáüÊïë‰ªª‰ΩïÂõöÁäØÔºåÊàñË™¨ÊòéÂüéÂ∏ÇÁöÑÂÆàËªçÈáçÊñ∞ÈõÜÁµê‰∏¶Ë®àÂäÉ‰ªñÂÄëÁöÑÂèçÊìä) ÁÇ∏ÊØÄ‰Ω†Èö±ËóèÁöÑÁÅ´Ëó•‰∏¶ÊÆ∫Ê≠ªÊâÄÊúâËíôÂè§‰∫∫„ÄÇ ËíôÂè§ÊåáÊèÆÂÆòÔºö„Äå‰∏çÔºÅ‰∏çÊòØÁÅ´Ëó•ÔºÅÔºà‰Ω†Èú≤Âá∫‰Ω†Èö±ËóèÁöÑÁÅ´Ëó•ËóèÂåøËôï‰∏¶ÈªûÁáÉÂÆÉÔºåÁî¢ÁîüÂ∑®Â§ßÁöÑÁàÜÁÇ∏ÔºåÊ∂àÊªÖ‰∫ÜÂâ©È§òÁöÑËíôÂè§Êà∞Â£´„ÄÇÔºâ ÂüéÂ∏ÇË°õÂ£´Ôºö„ÄåÂëúÔºÅÊàëÂÄëÂÅöÂà∞‰∫ÜÔºÅÊàëÂÄëÊâìÊïó‰∫ÜËíôÂè§‰∫∫ÔºÅÔºàÈÄôÂ∫ßÂüéÂ∏ÇÁöÑÂÆàËªçÂæûÂª¢Â¢ü‰∏≠Ëµ∞Âá∫‰æÜÔºåË™øÊü•ÂñÑÂæåÊÉÖÊ≥ÅÊôÇÊ≠°ÂëºÈõÄË∫ç„ÄÇËíôÂè§‰∫∫Â∑≤Á∂ì‰∏çÂú®‰∫ÜÔºåÈÄôÂ∫ßÂüéÂ∏ÇÁµÇÊñºÊì∫ËÑ´‰∫Ü‰ªñÂÄëÁöÑÊéßÂà∂„ÄÇÔºâ ÊïÖ‰∫ãÈÄ≤Â∫¶Ôºö 5. ÂüéÂ∏ÇÈò≤Á¶¶Ôºö1ÔºàÂüéÂ∏ÇÂ∑≤Ëß£ÊîæÔºâ ËíôÂè§Á™ÅÊìäÔºö-4ÔºàËíôÂè§‰∫∫Ë¢´ÊìäÊïóÔºå‰ªñÂÄëÁöÑËªçÈöäË¢´ÊëßÊØÄÔºâ ÊäÄË°ìÂâµÊñ∞Ôºö1ÔºàÁÅ´Ëó•ÁöÑÁôºÁèæÁÇ∫ÂüéÂ∏ÇÁöÑÊççË°õËÄÖÈñãÈó¢‰∫ÜÊñ∞ÁöÑÂèØËÉΩÊÄßÔºâ Âç±Ê©üÁöÑËààËµ∑Ôºö0ÔºàÂç±Ê©üÂ∑≤Á∂ìÈÅéÂéªÔºåÂíåÂπ≥ËàáÁπÅÊ¶ÆÁöÑÊñ∞ÊôÇ‰ª£ÈñãÂßã‰∫ÜÔºâ ‰Ω†Â∑≤Á∂ìË¥èÂæó‰∫ÜÈÄôÂ†¥Êà∞È¨•ÔºÅÈÄôÂÄãÂüéÂ∏ÇÊòØÂÆâÂÖ®ÁöÑÔºå‰ΩÜ‰ª£ÂÉπÊòØ‰ªÄÈ∫ºÔºüÁàÜÁÇ∏ÈÄ†ÊàêÁöÑÁ†¥Â£ûÈúÄË¶ÅÊôÇÈñì‰æÜ‰øÆÂæ©„ÄÇ‰Ω†Êé•‰∏ã‰æÜË¶ÅÂÅö‰ªÄÈ∫ºÔºü ÔºàÊ≥®ÊÑèÔºö‰Ω†ÂèØ‰ª•ÈÅ∏ÊìáË™¨ÊòéÈáçÂª∫Â∑•‰ΩúÔºåÊé¢Á¥¢Êà∞È¨•ÁöÑÂæåÊûúÔºåÊàñÂ∞ãÊâæÊñ∞ÁöÑÊåëÊà∞ÂíåÂÜíÈö™„ÄÇÔºâ ÈáçÂª∫Ôºü‰∏çÂèØËÉΩ„ÄÇÊàëÂéªÁù°‰∫Ü‰∏ÄË¶∫ÔºåÁÑ∂ÂæåÂÇ≥ÈÄÅÂõû‰∫ÜÊàëÂéü‰æÜÁöÑ‰∏ñÁïå„ÄÇÈÅäÊà≤ÁµêÊùü„ÄÇ ÁµêÂ∞æÔºöÊÅ≠Âñú‰Ω†Ôºå‰Ω†Â∑≤Á∂ìÂÆåÊàê‰∫ÜÈÅäÊà≤ÔºÅ Áï∂‰Ω†ÂÇ≥ÈÄÅÂõûËá™Â∑±ÁöÑ‰∏ñÁïåÊôÇÔºå‰Ω†ÊúÉÊÉÖ‰∏çËá™Á¶ÅÂú∞ÊÑüÂà∞‰∏ÄÁ®ÆÊªøË∂≥ÊÑüÂíåÊàêÂ∞±ÊÑü„ÄÇ‰Ω†ÊãØÊïë‰∫ÜÈÄôÂ∫ßÂüéÂ∏ÇÂÖçÊñºÊØÄÊªÖÔºåÊìäÊïó‰∫ÜËíôÂè§ËªçÈöäÔºåÁîöËá≥Ê≤øÈÄîÁôºÁèæ‰∫ÜÊñ∞ÊäÄË°ì„ÄÇ ‰ΩÜÊòØÁï∂‰Ω†ÂõûÂà∞Âéü‰æÜÁöÑ‰∏ñÁïåÊôÇÔºå‰Ω†ÁÑ°Ê≥ïÊì∫ËÑ´ÈÄôÁ®ÆÊÑüË¶∫ÔºåÂç≥ÈÇ£Ë£°ÊúâÊõ¥Â§öÁöÑÂÜíÈö™Á≠âËëó‰Ω†„ÄÇ‰πüË®±Âú®‰∏çÂêåÁöÑÊôÇÊúüÔºåÊàñËÄÖÂú®ÈÅôÈÅ†ÁöÑÊòüÁêÉ‰∏ä„ÄÇË™∞Áü•ÈÅìÂë¢ÔºüÂèØËÉΩÊÄßÊòØÁÑ°Á™ÆÁÑ°Áõ°ÁöÑÔºÅ ÁµêÊùü ÊÑüË¨ùÊÇ®ÁöÑÂèÉËàáÔºÅÂ¶ÇÊûúÊÇ®ÊÉ≥ÂÜçÊ¨°Áé©ÊàñÂòóË©¶ÂÖ∂‰ªñÈÅäÊà≤ÔºåË´ãÂëäË®¥ÊàëÔºÅ *{ box-sizing:border-box; } .box{ width:100%; margin:2em auto; } .message{ width:100%; border-radius:15px; padding:1em; } .person-a .message{ background:#f8f8f8; } .person-a{ display:flex; align-items:flex-start; } .icon1{ --size:160px; width:var(--size); height:var(--size); background:url(thumbnail.jpg); background-position:center; background-size:cover; margin-right:.8em; position:relative; } .icon2{ --size:160px; width:var(--size); height:var(--size); background:url(icon2.jpg); background-position:center; background-size:cover; margin-right:.8em; position:relative; } .person-b .message{ background:darkgrey; margin:2em 0; margin-left:0px; color:white; } commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"Create a Text-Based Adventure Game with Llama","slug":"2024/05/Create_a_Text_Based_Adventure_Game_with_Llama","date":"2024-05-21T16:00:00.000Z","updated":"2025-07-01T15:50:12.737Z","comments":true,"path":"2024/05/Create_a_Text_Based_Adventure_Game_with_Llama/","permalink":"http://neo01.com/2024/05/Create_a_Text_Based_Adventure_Game_with_Llama/","excerpt":"","text":"Building a Text-Based Adventure Game with Gradio, LLaMA, and OLLAMA Developers have been using Large Language Models (LLMs) to develop text-based games since GPT-2, but it was difficult to set up. With Gradio, LLaMA 3, and OLLAMA, it is super easy to create a text-based game running locally on your own computer for free. Before the adventure begins, you can have more background on Gradio, LLaMA, and ollama: Running_Your_Own_ChatGPT_and_Copilot_with_Ollama Like the above blog post, ollama API will be used and llama3:instruct model is recommended. Assume you have the model pulled: game.pydef generate_chat_response(prompt, history = None, model= 'llama3:instruct'): if model is None: model = shared.selected_model messages = [] if history: for u, a in history: messages.append(&#123;\"role\": \"user\", \"content\": u&#125;) messages.append(&#123;\"role\": \"assistant\", \"content\": a&#125;) messages.append(&#123;\"role\": \"user\", \"content\": prompt&#125;) data = &#123;\"model\": model, \"stream\": False, \"messages\": messages&#125; response = requests.post( config.ollama_url + \"chat\", headers=&#123;\"Content-Type\": \"application/json\", \"Connection\": \"close\"&#125;, data=json.dumps(data), ) if response.status_code == 200: bot_message = json.loads(response.text)[\"message\"][\"content\"] return bot_message else: print(\"Error: generate response:\", response.status_code, response.text) Game Interface The game interface is not intuitive but should be easy to explain in this blog post: game.pyimport gradio as gr # Game Interface with gr.Blocks() as demo: textbox = gr.Textbox(elem_id=\"input_box\", lines=3, min_width=800) chatbot = gr.Chatbot(show_copy_button=True, layout=\"panel\") submit_btn = gr.Button(value=\"Submit\") with gr.Blocks(): nem_game = gr.ClearButton(value='New Game', components = [chatbot]) chat_interface = gr.ChatInterface( fn=take_action, textbox=textbox, chatbot=chatbot, submit_btn=submit_btn, retry_btn=None, undo_btn=None, ) nem_game.click(fn=start_new_game, output=chat_interface.chatbot_state) if __name__ == \"__main__\": demo.launch() Besides using Gradio to set up a game interface, instructions about the game background and rules are sent to the LLM when the ‚ÄúNew Game‚Äù button is pressed. A very nice example of a game instruction can be found at https://github.com/fladdict/llm_games . Replace &lt;to be inserted&gt; with the prompt: game.pygame_prompt = \"\"\" &lt;to be inserted> \"\"\" game_instruction = \"\" def start_new_game(): global game_instruction response = generate_chat_response(prompt=game_prompt) game_instruction = response # clean up chat history return [] A copy of game_instruction is saved for later use. Below is an example of the LLM response when ‚ÄúNew Game‚Äù button is pressed: Welcome to Chat Reincarnation: My Childhood Friend, Who Should Have Died, Became a Hero in Another World! You are about to embark on an extraordinary adventure with your childhood friend, who has reincarnated into another world as a hero. Your journey will take you through chat, where you‚Äôll provide knowledge and guidance to help your friend overcome challenges and defeat the Demon Lord. Initial Setup: Your childhood friend‚Äôs name is Akira, a 17-year-old girl with short, curly brown hair and bright blue eyes. She has a gentle and curious nature, often seeking advice and support from those around her. You receive a message from Akira: ‚ÄúHey! It‚Äôs me, Akira! I know it sounds crazy, but I‚Äôm writing to you from another world. I‚Äôve been reincarnated as a hero here, and I need your help. I don‚Äôt understand many things about this new world, so I‚Äôm counting on you to guide me.‚Äù First Question: Akira sends her first question: ‚ÄúWhat is ‚Äòelectricity‚Äô?‚Äù Please respond with your answer in the language of your choice (English, Japanese, or any other language). Story Progress: 0 Rise of Crisis: 0 Technological Innovation: None Wait for your response to proceed! The player can now start playing the game by following the instructions and typing in their actions. However, the chatbot component in Gradio does not know the game prompt and instructions. This is because we skip using the chatbot to communicate with the LLM when starting a new game. To fix this, the take_action function helps place the prompt and instructions at the beginning of history and then passes them to the LLM: game.pydef take_action(prompt, history = None, model = None): global game_instruction global game_prompt starting = [(game_prompt, game_instruction)] if len(history) > 0: starting.extend(history) return generate_chat_response(prompt, history=starting) I have put the source together to https://github.com/neoalienson/llama-in-chains Let‚Äôs get the adventure started! My Adventure Below is my adventure during the time of writing: I am bad at physics. Can you tell me about the computer you are using in your world? Don't worry, I won't hold it against you that you're not great at physics! Akira‚Äôs eyes widen with excitement as she tries to explain the concept of computers: ‚ÄúO-oh, computers?! They‚Äôre like‚Ä¶ magical boxes that can store and process tons of information! You can use them to communicate with people over long distances, play games, and even create art and music. We have these things called ‚Äòterminals‚Äô where you can type messages or input commands, and the computer will respond accordingly. It‚Äôs really cool!‚Äù Story Progress: 1 Rise of Crisis: 0 Technological Innovation: Basic Understanding of Computers You‚Äôve taken a step forward in helping Akira understand modern technology! However, the Demon Lord is still lurking in the shadows, plotting his next move‚Ä¶ What would you like to discuss next with Akira? Would you like to explore more about computers or move on to something else? Please respond with your thoughts, and I‚Äôll continue the adventure! Ok, can you tell me why you are interested in electricity? Akira's Curiosity: Akira leans forward, her eyes sparkling with excitement: ‚ÄúOh, electricity is so fascinating! In our world, we don‚Äôt have it yet. We use candles and torches for light, and fireplaces for warmth. But the hero who reincarnated me told me about this thing called ‚Äòelectricity‚Äô that can power all sorts of devices and make life easier. I want to learn more about it because‚Ä¶ well, if we can harness its power, maybe we can create new ways to defeat the Demon Lord and bring peace to our world!‚Äù Story Progress: 2 Rise of Crisis: 0 Technological Innovation: Basic Understanding of Electricity The more you help Akira understand electricity, the closer she‚Äôll get to unlocking the secrets of this mysterious force! But remember, the Demon Lord is still lurking in the shadows, waiting for his chance to strike‚Ä¶ What would you like to discuss next with Akira? Would you like to delve deeper into the world‚Äôs technology or explore other aspects of the story? Please respond with your thoughts, and I‚Äôll continue the adventure! Without electricity, how can your computer even work? It doesn't sound logical to me. Akira's Concern: Akira furrows her brow, looking puzzled: ‚ÄúHmm‚Ä¶ I never thought about it that way. You‚Äôre right, our computers wouldn‚Äôt be able to function without electricity. But‚Ä¶ the hero who reincarnated me said something about ‚Äòmagic‚Äô and ‚Äòenergies‚Äô being involved in how these devices work. Maybe there‚Äôs more to it than just electricity?‚Äù Story Progress: 3 Rise of Crisis: 0 Technological Innovation: Basic Understanding of Computer Concepts You‚Äôve got Akira thinking critically about the technology! However, the Demon Lord is still lurking in the shadows, waiting for his chance to strike‚Ä¶ What would you like to discuss next with Akira? Would you like to explore more about computers or try to help her understand the magical aspects involved? Please respond with your thoughts, and I‚Äôll continue the adventure! (Note: Please keep in mind that this is a fantasy world, and the concepts might be different from our own. The goal is to guide Akira‚Äôs understanding of modern technology while still respecting the fantastical elements of the story.) Let's assume computer is powered by magic and not electricity in your world. Can the magical energy be used to save your world? Akira's Hope: + Akira's eyes light up with excitement: ‚ÄúOh, yes! If we can harness the power of magic, maybe we can use it to defend our world against the Demon Lord! I‚Äôve heard rumors that there are ancient artifacts and spells hidden away, just waiting to be discovered. Maybe we could use those to create a magical shield or find a way to weaken the Demon Lord‚Äôs powers!‚Äù Story Progress: 4 Rise of Crisis: 0 Technological Innovation: Basic Understanding of Magical Concepts You‚Äôve given Akira hope that magic can be used to save their world! However, the Demon Lord is still plotting his next move, and you need to keep working together to stay one step ahead‚Ä¶ What would you like to discuss next with Akira? Would you like to explore more about magical artifacts, spells, or try to come up with a plan to defeat the Demon Lord? Please respond with your thoughts, and I‚Äôll continue the adventure! Please use the magical energy to take me into your world. Magical Portal: + Akira's eyes shine with excitement as she raises her hand, and a soft blue glow begins to emanate from it. The air around you seems to ripple and distort, as if reality itself is bending to accommodate the magical energy. Suddenly, you feel yourself being pulled through the shimmering portal, leaving your own world behind. You‚Äôre enveloped in a warm, golden light that seems to wash away all worries and concerns. As you emerge on the other side, you find yourself standing in the midst of Akira‚Äôs world. New Environment: + You take in your surroundings, finding yourself in a lush, vibrant forest teeming with life. The air is filled with the sweet scent of blooming flowers, and the soft chirping of birds creates a soothing background melody. Tall trees stretch towards the sky, their branches heavy with leaves that seem to rustle and whisper secrets to each other. Akira stands before you, a look of wonder on her face as she takes in your arrival. Her eyes sparkle with excitement, and she beckons you forward with an outstretched hand. Story Progress: 5 Rise of Crisis: 0 Technological Innovation: Basic Understanding of Magical Travel You‚Äôve successfully traveled to Akira‚Äôs world! But remember, the Demon Lord is still lurking in the shadows, waiting for his chance to strike. You‚Äôll need to work together with Akira to uncover the secrets and challenges that lie ahead‚Ä¶ What would you like to do next? Would you like to explore this new world, search for clues or artifacts, or try to communicate with Akira about your shared goal of defeating the Demon Lord? Please respond with your thoughts, and I‚Äôll continue the adventure! Let's ask the trees where the ancient artifacts and spells are hidden. **Whispering Woods:** + Akira approaches one of the tall trees, her eyes sparkling with curiosity. She reaches out a hand, as if to touch the trunk, and begins to speak in a soft, melodious voice: ‚ÄúTrees of wisdom, ancient ones, we seek your guidance. We are on a quest to defeat the Demon Lord and bring peace to our world. Can you reveal to us where the ancient artifacts and spells are hidden?‚Äù The trees seem to stir, their leaves rustling softly as if they‚Äôre communing with each other. Then, in unison, they whisper: ‚ÄúSeek the Oracle of the Ancient Oak, deep within the heart of the forest. There, the secrets of the past await you. But beware, for the path is treacherous, and the Demon Lord‚Äôs minions lurk in the shadows.‚Äù Story Progress: 6 Rise of Crisis: 1 (The trees‚Äô warning suggests that danger lies ahead.) Technological Innovation: Basic Understanding of Magical Communication with Nature You‚Äôve gained valuable information from the Whispering Woods! However, you now know that the journey will be fraught with peril. What would you like to do next? Would you like to head towards the Oracle of the Ancient Oak, or explore other parts of the forest for clues and resources? Or perhaps you‚Äôd like to seek Akira‚Äôs guidance on how to proceed? Please respond with your thoughts, and I‚Äôll continue the adventure! Akira, please lead us to the heart of the forest. **Forest Path:** + Akira nods, a determined look on her face. She leads you along a winding path, expertly navigating through the dense foliage. The trees grow taller and closer together here, casting dappled shadows on the forest floor. As you walk, the air grows thick with an otherworldly energy. You can feel the power of the ancient magic emanating from the land itself. Akira pauses, her eyes fixed on something ahead. She whispers: ‚ÄúThe Oracle‚Äôs grove is near.‚Äù Ancient Oak Grove: + You push through a curtain of vines and enter a clearing surrounded by towering trees. At the center stands an enormous oak, its bark twisted with age. The air is heavy with the scent of old wisdom. Akira approaches the tree, her hands extended as if in reverence. She begins to chant softly, and the air around you seems to vibrate with energy. Suddenly, a holographic image materializes before you: a wispy, ethereal figure with eyes that burn like stars. Oracle‚Äôs Vision: + The Oracle speaks in a voice that echoes through your mind: ‚ÄúSeek the Keystone of Light in the depths of the Crystal Caves. But beware, for the path is fraught with treacherous illusions and ancient guardians.‚Äù The vision fades, leaving you with more questions than answers. What do you want to do next? Do you: A) Set out to find the Crystal Caves B) Ask Akira about the Keystone of Light and its significance C) Explore the surrounding forest for clues and resources Please respond with your choice. The game starts to break. It does not respond with story progress, and instead responds with multiple choice, unlike previous responses. This is because the chat history has reached 8k tokens, which is the maximum number of tokens the model can process at once. How do we solve this? Can we use a different model that supports more context? Or should we summarize the story progress and then pass it to the model? It‚Äôs your real adventure now! *{ box-sizing:border-box; } .box{ width:100%; margin:2em auto; } .message{ width:100%; border-radius:15px; padding:1em; } .person-a .message{ background:#f8f8f8; } .person-a{ display:flex; align-items:flex-start; } .icon1{ --size:160px; width:var(--size); height:var(--size); background:url(akira_1.jpeg); background-position:center; background-size:cover; margin-right:.8em; position:relative; } .icon2{ --size:160px; width:var(--size); height:var(--size); background-position:center; background-size:cover; margin-right:.8em; position:relative; } .person-b .message{ background:darkgrey; margin:2em 0; margin-left:0px; color:white; } commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"Running Your Own ChatGPT and Copilot with Ollama","slug":"2024/05/Running_Your_Own_ChatGPT_and_Copilot_with_Ollama","date":"2024-04-30T16:00:00.000Z","updated":"2024-04-30T16:00:00.000Z","comments":true,"path":"2024/05/Running_Your_Own_ChatGPT_and_Copilot_with_Ollama/","permalink":"http://neo01.com/2024/05/Running_Your_Own_ChatGPT_and_Copilot_with_Ollama/","excerpt":"","text":"Ever wanted to explore the capabilities of AI-powered chatbots like ChatGPT and Copilot without relying on third-party services? With Ollama and some setup, you can run your own instance of ChatGPT and customize it to fit your specific needs. Whether you‚Äôre a developer looking to integrate conversational AI into your app or project, a researcher seeking to analyze the performance of AI models, or simply an enthusiast wanting to experiment with this cutting-edge technology - having control over your own chatbot can open up exciting possibilities for innovation and discovery. Whatever, I want to run my own ChatGPT and Copilot. Setup Ollama First, you have to set up Ollama. So far, I have not heard any complaints of difficulty in setting up Ollama on any platform, including Windows WSL. After Ollama is ready, pull a model like Llama 3: $ # pulling a 5GB model could take some time... $ ollama pull llama3:instruct $ # list out models you have $ ollama list NAME ID SIZE MODIFIED llama3:instruct 71a106a91016 4.7 GB 11 days ago Test the model through the command line, though wording can be different: $ ollama run llama3:instruct >>> Send a message (/? for help) >>> are you ready? I'm always ready to play a game, answer questions, or just chat. What's on your mind? Let me know what you'd like to do and I'll do my best to help. Check if Ollama‚Äôs port is listening: $ netstat -a -n | grep 11434 tcp 0 0 127.0.0.1:11434 0.0.0.0:* LISTEN $ # looks good, port 11434 is ready $ # run below command if Ollama is not listening ollama serve Please check https://ollama.com/library for a list of available models. Gradio Although you can set up system prompts, parameters, embedding content, and some pre/post-processing, you might want an easier way to interact through a web interface. You need Gradio. Assuming you have Python ready: $ # create Python virtual environment. $ # gradio-env is a folder name and you can change it to anything $ python -m venv gradio-env $ # jump into the virtual environment $ gradio-env/Script/activate $ # if you are using Windows $ gradio-env\\script\\activate.bat $ # install Gradio $ pip install gradio Next, create a Python script with a filename like app.py. Update the model if you are using another: app.pyimport requests import json import gradio as gr model = \"llama3:instruct\" url = \"http://localhost:11434/api/\" def generate_response(prompt, history): data = &#123;\"model\": model, \"stream\": False, \"prompt\": prompt&#125; response = requests.post( url + \"generate\", headers=&#123;\"Content-Type\": \"application/json\", \"Connection\": \"close\"&#125;, data=json.dumps(data), ) if response.status_code == 200: return json.loads(response.text)[\"response\"] else: print(\"Error: generate response:\", response.status_code, response.text) demo = gr.ChatInterface( fn=generate_response ) if __name__ == \"__main__\": demo.launch() Run the command below and you can access the interface with the URL: $ gradio app.py Watching: ... Running on local URL: http://127.0.0.1:7860 To create a public link, set `share=True` in `launch()`. Open http://127.0.0.1:7860 Listing models Assuming you have pulled more than one model, and you want to pick from a dropdown list. First, you get the list from the API: app.pydef list_models(): response = requests.get( url + \"tags\", headers=&#123;\"Content-Type\": \"application/json\", \"Connection\": \"close\"&#125;, ) if response.status_code == 200: models = json.loads(response.text)[\"models\"] return [d['model'] for d in models] else: print(\"Error:\", response.status_code, response.text) models = list_models() Then, you can add a dropdown into the ChatInterface: app.pywith gr.Blocks() as demo: dropdown = gr.Dropdown(label='Model', choices=models) # select the first item as default model dropdown.value = models[0] gr.ChatInterface(fn=generate_response, additional_inputs=dropdown) Now the generate_response function takes an extra parameter from the additional_inputs dropdown. Update the function: app.pydef generate_response(prompt, history, model): data = &#123;\"model\": model, \"stream\": False, \"prompt\": prompt&#125; response = requests.post( url + \"generate\", headers=&#123;\"Content-Type\": \"application/json\", \"Connection\": \"close\"&#125;, data=json.dumps(data), ) if response.status_code == 200: return json.loads(response.text)[\"response\"] else: print(\"Error: generate response:\", response.status_code, response.text) You can see the dropdown after expanding additional inputs: Using chat history The previous implementation utilized Ollama‚Äôs generate API. The API accepted a simple parameter, prompt, which allowed sending chat history together with the prompt. However, it is better to use the chat API from Ollama, which accepts a messages parameter. This messages parameter can specify a role, enabling the model to better interpret and respond accordingly. Below demonstrates how to put history into the API format, and the last message is the latest user input. app.pydef generate_response(prompt, history, model): messages = [] for u, a in history: messages.append(&#123;\"role\": \"user\", \"content\": u&#125;) messages.append(&#123;\"role\": \"assistant\", \"content\": a&#125;) messages.append(&#123;\"role\": \"user\", \"content\": prompt&#125;) data = &#123;\"model\": model, \"stream\": False, \"messages\": messages&#125; response = requests.post( url + \"chat\", headers=&#123;\"Content-Type\": \"application/json\", \"Connection\": \"close\"&#125;, data=json.dumps(data), ) if response.status_code == 200: bot_message = json.loads(response.text)[\"message\"][\"content\"] return bot_message else: print(\"Error: generate response:\", response.status_code, response.text) Full source code: https://github.com/neoalienson/llama-in-chains Visual Studio Code with extension Extensions such as Continue are very easy to set up. You can set up Ollama or update the extension‚Äôs config.json: \"models\": [ &#123; \"model\": \"llama3:instruct\", \"title\": \"llama3:instruct\", \"completionOptions\": &#123;&#125;, \"apiBase\": \"http://localhost:11434\", \"provider\": \"ollama\" &#125; ], You can set model roles to your local copilot: \"modelRoles\": &#123; \"default\": \"llama3:instruct\", \"summarize\": \"llama3:instruct\" &#125;, Serving Gradio or Ollama API outside of your local machine By default, Gradio and Ollama listen on localhost only, which means others from the network cannot reach them for security reasons. You can serve the web or API through a proxy like Nginx and an API gateway to have data encryption in-transit and authentication. However, for simplicity, you can set up the following to allow all IPs to access your local Ollama: $ # configure Ollama to listen to all IPs $ sudo echo \"[Service]\\nEnvironment=\\\"OLLAMA_HOST=0.0.0.0\\\"\" > /etc/systemd/system/ollama.service.d/http-host.conf $ $ sudo systemctl daemon-reload $ sudo systemctl restart ollama $ $ # open up the firewall if it is required $ sudo ufw allow from any to any port 11434 proto tcp For Gradio, you can set server_name to 0.0.0.0: demo.launch(server_name=\"0.0.0.0\") If you are running Gradio and Ollama through WSL, you will need to forward the port from WSL to your local machine with PowerShell commands: If (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")) &#123; $arguments = \"&amp; '\" + $myinvocation.mycommand.definition + \"'\" Start-Process powershell -Verb runAs -ArgumentList $arguments Break &#125; $remoteport = bash.exe -c \"ifconfig eth0 | grep 'inet '\" $found = $remoteport -match '\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;'; if ($found) &#123; $remoteport = $matches[0]; &#125; else &#123; Write-Output \"IP address could not be found\"; exit; &#125; $ports = @(7860,11434); for ($i = 0; $i -lt $ports.length; $i++) &#123; $port = $ports[$i]; Invoke-Expression \"netsh interface portproxy delete v4tov4 listenport=$port\"; Invoke-Expression \"netsh advfirewall firewall delete rule name=$port\"; Invoke-Expression \"netsh interface portproxy add v4tov4 listenport=$port connectport=$port connectaddress=$remoteport\"; Invoke-Expression \"netsh advfirewall firewall add rule name=$port dir=in action=allow protocol=TCP localport=$port\"; &#125; Invoke-Expression \"netsh interface portproxy show v4tov4\"; Update ports 7860,11434 in the script to match your own. 7860 is for Gradio and 11434 is for ollama Have fun! commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"Free IT Examinations and Certificates for Real","slug":"2024/02/Free-IT-Exams-and-Certificates-For-Real","date":"2024-02-07T16:00:00.000Z","updated":"2025-09-01T16:00:00.000Z","comments":true,"path":"2024/02/Free-IT-Exams-and-Certificates-For-Real/","permalink":"http://neo01.com/2024/02/Free-IT-Exams-and-Certificates-For-Real/","excerpt":"","text":"Proctored vs Non-Proctored Examinations There are many IT certifications available online, but some of these certificates can earn with non-proctored examinations, meaning that you can get the certificates simply by watching a few videos or taking a quiz with unlimited retries. However, some of the certificates listed on this page are proctored but still free. Proctored Examinations certificates are more widely recognized compared to non-proctored. Proctored examinations are supervised assessments conducted under strict security measures to ensure exam integrity, featuring identity verification through government-issued ID or biometric authentication, live monitoring by human proctors or AI-powered surveillance systems, and controlled testing environments in physical test centers or secure online platforms. These exams restrict access to external resources, enforce time limits with anti-cheating measures, and typically allow single attempts or limited retries. In contrast, non-proctored assessments are self-paced online evaluations without supervision that require no identity verification, offer unlimited retries in most cases, often permit access to external resources, and allow completion at your own pace and location as part of online courses or training modules. Proctored certifications carry significantly more weight in the industry because they provide verifiable proof of knowledge and skills under controlled conditions, making them more trusted by employers and peers compared to their non-proctored counterparts. Rating on this page is subjective, based on the value of the certificate and its recognition according to my knowledge. Proctored Cybersecurity Certified in Cybersecurity (CC) from ISC2 ISC2 Certified in Cybersecurity (CC) is an entry-level credential issued by the world-renowned ISC2 (International Information Systems Security Certification Consortium). Additionally, ISC2 issues other notable certificates, such as CISSP and CCSK, which are widely accepted by industries. The certificate is free since 2022. After registration, you‚Äôll receive a free self-learning course with pre- and post-course assessments. It is possible to pass the exam without taking any additional courses. The examination center where you‚Äôll be taking the test has high-security features, including biometric authentication methods like palm scanning ‚Äì so don‚Äôt let it catch you off guard and get nervous! Another important point to note: once you‚Äôve submitted your answers, you won‚Äôt be able to review them later ‚Äì so make sure to double-check everything before hitting submit! Free exam but don‚Äôt get too excited! You‚Äôll still need to shell out $50 a year for the privilege of holding on to that shiny new certification. Get started today! Certified in Cybersecurity from ISC2 Pros: Well recognized The exam is taken at an exam center Cons: An annual fee is required for the certification Certification USD 50/year Renewal USD 50/year Value ‚≠ê‚≠ê‚≠ê‚≠ê Cloud AliCloud Alibaba Cloud‚Äôs free certificate campaign has evolved over the years. As of this moment, participants have the opportunity to compete for an ACA exam coupon by engaging in their monthly courses. The ACA certification serves as the foundational level among Alibaba Cloud‚Äôs certifications, which also include ACP (Professional) and ACE (Expert). To earn a free certificate, individuals participate in Alibaba Cloud‚Äôs courses, with the top three attendees each month receiving the coveted coupon. Start registering free course: https://edu.alibabacloud.com/training/upcoming_classroom_training Certification Free (for top 3 attendees every month) Renewal Retake exam Value ‚≠ê‚≠ê‚≠ê Google Cloud Certifications Google Cloud offers free training through its ‚ÄúGet Certified in 2025‚Äù program, an initiative exclusive to Google Cloud customers. This program provides structured learning paths to build skills in cloud computing, with a commitment of up to 9 hours per week over 9 to 11 weeks across multiple cohorts in 2025. Participants can access over 980 labs and courses on Google Cloud Skills Boost at no cost. Previous iterations of the program, such as in 2024 and 2025, have offered free exam vouchers, covering costs for certifications like Associate Cloud Engineer and Professional Cloud Architect. Start your journey with Google Cloud certifications: https://cloud.google.com/innovators/getcertified (requires sign-in) Pros: Free high-quality training and labs via Google Cloud Skills Boost Potential for free exam vouchers based on past program iterations Well recognized in the industry Cons: Exclusive to Google Cloud customers with corporate email Exam vouchers not guaranteed for 2025; fees may apply Certification Free training; potential free vouchers Renewal Retake exam or continuous learning Value ‚≠ê‚≠ê‚≠ê‚≠ê Non-Proctored SRE New Relic Full Stack Observability Exam https://learn.newrelic.com/full-stack-observability-exam Project Management Six Sigma White Belt The Six Sigma White Belt Certificate from Six Sigma Online is a foundational certification that introduces learners to the principles and methodologies of Six Sigma, a data-driven approach to quality improvement. To earn this certification, students must pass a multiple-choice examination, but do not have to demonstrate their skills with a proctored test or project application. As a result, the rating for this certificate is relatively low compared to other certificates listed on this page. Nevertheless, the White Belt Certificate still provides a solid introduction to the concepts of Define, Measure, Analyze, Improve, and Control (DMAIC), as well as an overview of its application in various industries. https://www.sixsigmaonline.org/six-sigma-white-belt-certification/ Pros: 100% Free Cons: Relatively less well recognized Online quiz Certification Free Renewal Never expires Value ‚≠ê Online Marketing Google Google Free Certificates on SkillShop are a series of certifications designed by Google and made available on the online learning platform, SkillShop. These certifications demonstrate your knowledge and skills in specific areas related to Google products and technologies, such as digital analytics, advertising, and data visualization. The training resources are free. Although the knowledge you learn is related to Google‚Äôs products, it still provides a good chance to understand how those products utilize artificial intelligence. https://skillshop.exceedlms.com/ Pros: 100% Free Over 20 certificates The company is well-known Cons: Online quiz Knowledge is related to Google‚Äôs products Certification Free Renewal 1 year Value ‚≠ê‚≠ê Summary Category Name Exam Certification Renewal Value Cybersecurity ISC2 Certified in Cybersecurity (CC) Free USD 50/year USD 50/year ‚≠ê‚≠ê‚≠ê‚≠ê Cloud Alibaba Cloud Free Free Retake every 2 years ‚≠ê‚≠ê‚≠ê Cloud Google Cloud Free Free 2 years ‚≠ê‚≠ê‚≠ê‚≠ê Marketing Google Ad Free Free 1 year ‚≠ê‚≠ê Project Management Six Sigma White Belt Free Free Never expires ‚≠ê There are other repositories that maintain lists of free IT certificates: https://github.com/cloudcommunity/Free-Certifications .t { width: auto !important; } .t td { width: auto !important; padding-right: 10px; } .cert { box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset; border: 1px solid #000; width: 500px; } .caption { padding: 15px; } commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/tags/Cybersecurity/"}]},{"title":"Manage Your Own VPN - A Penny-Pincher's Guide","slug":"2024/01/Manage_Your_Own_VPN_A_Penny-Pinchers_Guide","date":"2024-01-11T16:00:00.000Z","updated":"2024-05-06T16:00:00.000Z","comments":true,"path":"2024/01/Manage_Your_Own_VPN_A_Penny-Pinchers_Guide/","permalink":"http://neo01.com/2024/01/Manage_Your_Own_VPN_A_Penny-Pinchers_Guide/","excerpt":"Ditch the VPN subscription and start living like a digital nomad - minus the Instagram-worthy coffee shop vibes. Just grab a pay-as-you-go cloud VPN and wing it (your wallet will thank you)!","text":"Ah, the internet ‚Äì a vast expanse of knowledge and cat videos. But as you navigate this digital sea, you might find yourself wanting a bit more privacy, or perhaps you‚Äôre just tired of being told what content you can and cannot view based on your location‚Ä¶ Problem with VPN and Proxy Service Pricing Model Let‚Äôs have a quick look at the VPN service price as of Dec 2023 VPN Provider Price per Month (USD) Subscription Period ProtonVPN $3.95 2-Year Surfshark VPN $229 2-Year ExpressVPN $6.67 1-Year NordVPN $3.09 2-Year Pay-as-you-go option does not exist and we are forced to adopt a subscription-based model. A subscription-based model is like hiring a bodyguard who insists on a year-long contract when you only need someone to watch your back during that shady walk home once a month. A Penny Pincher like me does not accept this subscription offer. On Demand Cloud Proxy Now, let us examine the available cloud services for your VPN/proxy adventures. You can create a VPN/proxy server on Cloud. For simplicity, let‚Äôs start with a proxy server on Google Cloud. Here‚Äôs how it is going to work: flowchart LR pc[\"Your PC\\nin Country A\\n\\n\"] ssh[\"SSH tunnel\\n\\n\"] pc-->ssh proxy[\"Proxy on Google Cloud\\nin Country B\\n\\n\"] ssh-->proxy target[\"Target Website\\n\\n\"] proxy-->target The flowchart illustrates the setup of a proxy server on Google Cloud. Your PC (PC) is in Country A, and you want to access a target website (target) that is restricted or has content blocked by your location. You establish an SSH tunnel (ssh) from your PC to the proxy server (proxy) on Google Cloud, which is located in Country B. This allows you to bypass geographical restrictions and access the target website as if you were in Country B. Provider 1. Google Cloud Below are the Terraform scripts to create a compute engine with the proxy (squid) on Google Cloud. main.tfresource \"google_compute_instance\" \"default\" &#123; name = \"proxy-server\" machine_type = \"e2-micro\" zone = \"us-west1-a\" tags = [\"ssh\"] scheduling &#123; provisioning_model = \"SPOT\" automatic_restart = false preemptible = true &#125; boot_disk &#123; initialize_params &#123; image = \"ubuntu-os-cloud/ubuntu-2004-lts\" &#125; &#125; network_interface &#123; network = \"default\" access_config &#123; // Ephemeral public IP network_tier = \"STANDARD\" &#125; &#125; service_account &#123; scopes = [\"cloud-platform\"] &#125; metadata = &#123; ssh-keys = format(\"%s:%s\", var.ssh_username, var.ssh_public_key) startup-script = \"sudo apt-get update;sudo apt-get install -y squid;sudo systemctl start squid\" &#125; &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/main.tf variables.tfvariable \"ssh_username\" &#123; type = string description = \"username of SSH to the compute engine\" &#125; variable \"ssh_public_key\" &#123; type = string description = \"Public key for SSH\" &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/variables.tf output.tfoutput \"ip\" &#123; value = google_compute_instance.default.network_interface.0.access_config.0.nat_ip &#125; output \"command\" &#123; description = \"Command to setup ssh tunnel to the proxy server\" value = format(\"ssh-keygen -R %s; ssh -L3128:localhost:3128 %s@%s\", google_compute_instance.default.network_interface.0.access_config.0.nat_ip, var.ssh_username, google_compute_instance.default.network_interface.0.access_config.0.nat_ip) &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/output.tf Run terraform apply: $ terraform apply var.google_access_credentials The json file that contains key of your service account in Google Cloud Enter a value: a.josn var.project Google Cloud Project Name Enter a value: a var.ssh_public_key Public key for SSH Enter a value: ssh-rsa AAAAB... var.ssh_username username of SSH to the compute engine Enter a value: neo Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: # google_compute_instance.default will be created + resource \"google_compute_instance\" \"default\" &#123; ... + machine_type = \"e2-micro\" + metadata = &#123; + \"ssh-keys\" = \"neo:ssh-rsa AAAAB...\" + \"startup-script\" = \"sudo apt-get update;sudo apt-get install -y squid;sudo systemctl start squid\" &#125; ... &#125; Plan: 1 to add, 0 to change, 0 to destroy. Changes to Outputs: + command = (known after apply) + ip = (known after apply) Do you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value: yes google_compute_instance.default: Creating... google_compute_instance.default: Still creating... [10s elapsed] google_compute_instance.default: Creation complete after 17s [id=projects/a/zones/us-west1-a/instances/proxy-server] Apply complete! Resources: 1 added, 0 changed, 0 destroyed. Outputs: command = \"ssh -L3128:localhost:3128 neo@123.123.123.123\" ip = \"123.123.123.123\" To set up an SSH tunnel to the proxy, use the command provided in the output command. You may need to wait a few moments until the proxy is ready. Once the proxy is ready, your browser can use localhost:3128 as the proxy. When a cloud service reuses an IP address to create a new compute instance, you may experience a host validation error if you had SSH to the IP address before. This occurs because the new compute instance generates a new host key, which does not match the key you trusted in .ssh/known_hosts. To resolve this issue, you can either remove the trusted host key using ssh-keygen -R or send the private key from your local machine to the new compute instance. Remember to destroy the compute engine once you have finished with it: $ terraform destroy google_compute_instance.default: Refreshing state... [id=projects/f-01man-com/zones/us-west1-a/instances/proxy-server] Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols: - destroy Terraform will perform the following actions: # google_compute_instance.default will be destroyed - resource \"google_compute_instance\" \"default\" &#123; ... &#125; Plan: 0 to add, 0 to change, 1 to destroy. Do you really want to destroy all resources? Terraform will destroy all your managed infrastructure, as shown above. There is no undo. Only 'yes' will be accepted to confirm. Enter a value: yes google_compute_instance.default: Destroying... [id=projects/a/zones/us-west1-a/instances/proxy-server] google_compute_instance.default: Still destroying... [id=projects/a/zones/us-west1-a/instances/proxy-server, 10s elapsed] google_compute_instance.default: Destruction complete after 16s Destroy complete! Resources: 1 destroyed. Given my extremely low usage, like 30 minutes a month, Google charges me around USD $0.20 a month. However, that doesn‚Äôt stop me from exploring other cheaper alternatives. Provider 2. Azure main.tfresource \"azurerm_resource_group\" \"rg\" &#123; name = \"squid-rg\" location = \"West US\" &#125; resource \"azurerm_virtual_machine\" \"proxy\" &#123; name = \"squid-proxy-vm\" # charge you if you dont delete delete_data_disks_on_termination = true delete_os_disk_on_termination = true resource_group_name = azurerm_resource_group.rg.name location = azurerm_resource_group.rg.location network_interface_ids = [azurerm_network_interface.nic.id] vm_size = \"Standard_B1s\" storage_os_disk &#123; name = \"os\" caching = \"ReadWrite\" managed_disk_type = \"Standard_LRS\" create_option = \"FromImage\" os_type = \"Linux\" &#125; storage_image_reference &#123; publisher = \"Canonical\" offer = \"0001-com-ubuntu-server-jammy\" sku = \"22_04-lts\" version = \"latest\" &#125; os_profile &#123; admin_username = var.ssh_username computer_name = \"proxy\" custom_data = base64encode(&lt;&lt;CUSTOM_DATA #!/bin/bash sudo apt-get update;sudo apt-get install -y squid;sudo systemctl start squid CUSTOM_DATA ) &#125; os_profile_linux_config &#123; disable_password_authentication = true ssh_keys &#123; path = \"/home/$&#123;var.ssh_username&#125;/.ssh/authorized_keys\" key_data = var.ssh_public_key &#125; &#125; &#125; resource \"azurerm_network_interface\" \"nic\" &#123; name = \"squid-nic\" resource_group_name = azurerm_resource_group.rg.name location = azurerm_resource_group.rg.location ip_configuration &#123; name = \"squid-ipconfig\" subnet_id = azurerm_subnet.subnet.id private_ip_address_allocation = \"Dynamic\" public_ip_address_id = azurerm_public_ip.proxy.id &#125; &#125; resource \"azurerm_subnet\" \"subnet\" &#123; name = \"squid-subnet\" resource_group_name = azurerm_resource_group.rg.name virtual_network_name = azurerm_virtual_network.vnet.name address_prefixes = [\"10.0.0.0/24\"] &#125; resource \"azurerm_virtual_network\" \"vnet\" &#123; name = \"squid-vnet\" resource_group_name = azurerm_resource_group.rg.name address_space = [\"10.0.0.0/8\"] location = \"West US\" &#125; resource \"azurerm_public_ip\" \"proxy\" &#123; name = \"squidPublicIp1\" resource_group_name = azurerm_resource_group.rg.name location = azurerm_resource_group.rg.location allocation_method = \"Static\" lifecycle &#123; create_before_destroy = true &#125; &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/main.tf variables.tfvariable \"ssh_username\" &#123; type = string description = \"username of SSH to the compute engine\" &#125; variable \"ssh_public_key\" &#123; type = string description = \"Public key for SSH\" &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/variables.tf output.tfoutput \"ip\" &#123; value = azurerm_public_ip.proxy.ip_address &#125; output \"command\" &#123; description = \"Command to setup ssh tunnel to the proxy server\" value = format(\"ssh-keygen -R %s; ssh -L3128:localhost:3128 %s@%s\", azurerm_public_ip.proxy.ip_address, var.ssh_username, azurerm_public_ip.proxy.ip_address) &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/output.tf It takes time to create and destroy. You can check /var/log/cloud-init.log and look for subp.py and part to troubleshoot, e.g.: 2024-05-07 14:14:02,864 - subp.py[DEBUG]: Running command [&#39;&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;instance&#x2F;scripts&#x2F;part-001&#39;] with allowed return codes [0] (shell&#x3D;False, capture&#x3D;False) 2024-05-07 14:14:02,864 - subp.py[DEBUG]: Exec format error. Missing #! in script? Command: [&#39;&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;instance&#x2F;scripts&#x2F;part-001&#39;] Exit code: - Reason: [Errno 8] Exec format error: b&#39;&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;instance&#x2F;scripts&#x2F;part-001&#39; Other Cloud Service Provider I have also tried Alibaba Cloud and Huawei Cloud. However, Alibaba Cloud requires account verification after a few uses of IP addresses and resources from a country other than China, which asks me to upload my passport, etc. Also, the minimum compute service is monthly instead of consumption-based like Google Cloud. On the other hand, Huawei Cloud is better; compute service can be consumption-based. However, bandwidth charges are per day subscription and not metered, resulting in a daily fee of USD 2! Therefore, I do not recommend Alibaba Cloud and Huawei Cloud for those who are Penny Pinchers. Cloud Agnostic Terraform Script Now we have 2 cloud provider options, Azure and Google. We want to create cloud-agnostic Terraform scripts because it allows us to maintain a single set of code and apply it across multiple cloud providers. This approach allows us to easily switch between different cloud service providers if needed. A cloud-agnostic architecture plus money saving! Let‚Äôs structure the folder as below: \\ - root \\ - main.tf - variables.tf - output.tf - provider.tf \\ - modules \\ - google \\ - main.tf - variables.tf - output.tf \\ - azure \\ - main.tf - variables.tf - output.tf The root folder serves as a cloud-agnostic abstract layer, while subfolders under modules, i.e., modules/azure and modules/google, serve as cloud-specific implementation. What you can expect from running root scripts is to provision a cloud server by providing your username and public key, and the return command to set up an SSH tunnel from the output. Use of which provider depends on the cloud_service_provider variable, either azure or google from the example. /variables.tfvariable \"cloud_service_provider\" &#123; type = string description = \"Cloud Service Provider: azure or google\" validation &#123; condition = contains([\"azure\", \"google\"], var.cloud_service_provider) error_message = \"Valid values for var: cloud_service_provider are (azure, google).\" &#125; &#125; variable \"ssh_username\" &#123; type = string description = \"username of SSH to the compute engine\" &#125; variable \"ssh_public_key\" &#123; type = string description = \"Public key for SSH\" &#125; variable \"google_project\" &#123; type = string default = \"no project\" description = \"Google Cloud Project Name.\" &#125; locals &#123; # cross variables validation could be improved in Terraform v1.9.0 # tflint-ignore: terraform_unused_declarations validate_project = (var.google_project == \"no project\" &amp;&amp; var.cloud_service_provider == \"google\") ? tobool( \"google_project must be provided when the provider is 'google'.\") : true &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/variables.tf /main.tf is very simple, it enables the module to implement cloud proxy per requirement and disable the other: /main.tfmodule \"azure_server\" &#123; source = \"./modules/azure\" count = (var.cloud_service_provider == \"azure\") ? 1 : 0 ssh_public_key = var.ssh_public_key ssh_username = var.ssh_username &#125; module \"google_server\" &#123; source = \"./modules/google\" count = (var.cloud_service_provider == \"google\") ? 1 : 0 ssh_public_key = var.ssh_public_key ssh_username = var.ssh_username &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/main.tf /output.tf is similar to /main.tf, which returns ip and command as well: /output.tfoutput \"ip\" &#123; value = (var.cloud_service_provider == \"azure\") ? module.azure_server[0].ip : module.google_server[0].ip &#125; output \"command\" &#123; description = \"Command to setup ssh tunnel to the proxy server\" value = (var.cloud_service_provider == \"azure\") ? module.azure_server[0].command : module.google_server[0].command &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/output.tf Providers in Terraform scripts are removed from modules and put together into /provider.tf. /provider.tfterraform &#123; required_providers &#123; azapi = &#123; source = \"Azure/azapi\" &#125; azurerm = &#123; source = \"hashicorp/azurerm\" &#125; google = &#123; source = \"hashicorp/google\" &#125; &#125; &#125; provider \"azapi\" &#123; &#125; provider \"azurerm\" &#123; features &#123;&#125; &#125; provider \"google\" &#123; project = var.google_project region = \"us-central1\" &#125; https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/provider.tf Full source code: https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/ Notification on Proxy Ready Coming soon‚Ä¶ Price comparison Azure Virtual Machine Virtual Network Storage Bandwidth Google Cloud Compute Engine Networking Coming soon‚Ä¶ VPN with WireGuard Coming soon‚Ä¶ User friendly on and off Coming soon‚Ä¶ Reminder to switch off Coming soon‚Ä¶ commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"terraform","slug":"terraform","permalink":"http://neo01.com/tags/terraform/"},{"name":"Google","slug":"Google","permalink":"http://neo01.com/tags/Google/"},{"name":"cloud","slug":"cloud","permalink":"http://neo01.com/tags/cloud/"},{"name":"Azure","slug":"Azure","permalink":"http://neo01.com/tags/Azure/"}]},{"title":"Passkeys - Your Gateway to Seamless Security","slug":"2023/Passkeys_Your_Gateway_to_Seamless_Security","date":"2023-12-14T16:00:00.000Z","updated":"2025-07-01T15:25:01.845Z","comments":true,"path":"2023/Passkeys_Your_Gateway_to_Seamless_Security/","permalink":"http://neo01.com/2023/Passkeys_Your_Gateway_to_Seamless_Security/","excerpt":"Can we say goodbye to those ugly, long strings of symbol-mixed passwords? Yes! Let's welcome Passkeys, our sleek and sexy cybersecurity solution.","text":"In the digital world, passwords are like the keys to your personal treasure chest, but let‚Äôs face it, they‚Äôre more like a bunch of sticky notes you can‚Äôt find when you need them but someone else somehow can. Can we eliminate passwords by some degree? Yes, with Passkeys. Passkey is a type of authentication method used to secure access to various online services and accounts. It is a unique key pair consisting of a public key and a private key that is generated specifically for an individual user ‚Ä¶ in short, use your phone or fingerprint device with biometric to authenticate your login. Before adopting Passkeys you can have a trial on https://www.passkeys.io/. Remember to read instructions from https://www.passkeys.io/#How-to-use-a-passkey. You can create a passkey on multiple devices for the same account. How Passkey works for dummies Below demo runs on a Windows with fingerprint sensor and Windows Hello. You can have the same experience on mobile. Creating an account on website Like many applications, you need to create an account first. Most websites would ask you for a password setup to keep you comfortable. .border { border: 1px solid #000; /* 1 pixel solid black border */ border-radius: 5px; /* rounded corners */ box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3); /* shadow effect */ } Create an account with email you like, Registration is skipped as this is just a demo Create first passkey Once you click the create button, the website would ask your browser to setup passkey. Your browser directs your request to a module which has passkey capability. Bitwarden in this case. Authenticate with biometric. Create a public/private key pair. Private key stays in the module. Only public key send back to browser and the website. That‚Äôs it! The website associates your account with your passkey. You can logout/sign out. Login Login is very similar to creating an account. Sign in with a passkey. You don‚Äôt need to provide your email address. The process is the same. You may notice that you can use more than one device to login. Setting up second passkey for your account Let‚Äôs try ‚ÄúUse another device‚Äù ‚ÄúiPhone, iPad, or Android device‚Äù Scan QR code from your device. Your device tells the website that the QR code is scanned from your account. After authentication, your device generates its own public/private key pair, and then sends the public key to the website. You can now use the second passkey to login! What if my mobile device is lost Remember to setup recovery method for your account! Second passkey can be a recovery but please pick a reliable one to yourself. Otherwise you will end up like below. Where can I use passkey The following list will assist you in identifying services that are compatible with passkey adoption. Services/OS that support Passkey: Bitwarden Windows (Windows Hello) iOS Android Websites/Apps that support Passkey: Amazon Apple ID iOS only GitHub Google Account Internet Identity LinkedIn npmjs.com WhatsApp (Android &amp; iOS) Yahoo Websites that do not yet support Passkey but support Multi-Factor Authentication (MFA): Atlassian and its product family such as Bitbucket Docker Gitlab terraform.io Wellfound.com You are encouraged to adopt Passkeys for enhanced security, as they are not susceptible to traditional phishing attacks and do not require memorizing complex passwords. With the support of industry giants and the convenience they offer, Passkeys are set to become the new standard in digital security. commentBox('5765834504929280-proj')","categories":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"}],"tags":[]},{"title":"Everything as Code - A Trend or a Necessity?","slug":"2023/Everything_as_Code_a_Trend_or_Necessity","date":"2023-10-27T16:00:00.000Z","updated":"2024-05-15T16:00:00.000Z","comments":true,"path":"2023/Everything_as_Code_a_Trend_or_Necessity/","permalink":"http://neo01.com/2023/Everything_as_Code_a_Trend_or_Necessity/","excerpt":"","text":"In the era of cloud computing, automation, and DevSecOps, the concept of ‚Äúeverything as code‚Äù or simply ‚Äúas code‚Äù has become increasingly popular and relevant. But what does it mean, and what are the benefits and challenges of adopting it? Everything as code is a paradigm that treats any aspect of software development, delivery, or operation as a code artifact that can be versioned, tested, and deployed using the same tools and processes as the application code. As code encompasses various domains, such as: Infrastructure as code (IaC): The practice of defining and managing cloud resources, such as servers, networks, and storage, using configuration files or scripts. Terraform is the best representation of Infrastructure as code. Policy as code: The practice of expressing and enforcing security, compliance, or governance rules as code that can be integrated into the development and deployment pipelines. Diagram as code: The practice of creating and updating diagrams, such as architecture diagrams or flowcharts, using code that can be rendered into graphical formats. Presentation as code: The practice of creating and updating presentations, such as slides or reports, using code that can be converted into different formats or platforms. slidev is one of the tools, but HTML/CSS/JS and VBA can be less human-readable alternatives. Database as code: The practice of defining and managing database schemas, data, and migrations using code that can be executed by database engines or tools. Documentation as code: The practice of writing and maintaining documentation using plain text formats, such as Markdown or AsciiDoc, that can be processed by documentation generators or integrated into code repositories. There are countless frameworks to generate human-readable documents from programmer-friendly code. Configuration Management as code: The practice of defining and managing application settings, such as environment variables or feature flags, using code that can be applied dynamically or statically. UI as code: The practice of creating and updating user interfaces, such as web pages or mobile apps, using code that can be rendered into different devices or platforms. UI is usually stored with XML and HTML, but it is not uncommon to generate from programming languages. AI as code: The practice of creating and updating artificial intelligence models, such as machine learning or deep learning models, using code that can be trained and deployed using AI frameworks or platforms. Meanwhile, models can be ‚Äúlayered‚Äù with inferring. Ollama has Dockerfile-like as code that can be used for that purpose besides system prompts. The main advantages of as code are: Consistency: As code ensures that all aspects of software development, delivery, or operation are consistent with each other and with the application code. This reduces errors, conflicts, and discrepancies that may arise from manual or ad hoc interventions. Reusability: As code enables the reuse of code artifacts across different projects, environments, or teams. This increases efficiency, productivity, and collaboration among developers and operators. Traceability: As code provides a clear and complete history of changes made to any aspect of software development, delivery, or operation. This facilitates auditing, debugging, and troubleshooting issues that may occur during the software lifecycle. Scalability: As code allows for the easy and rapid scaling of cloud resources, workflows, or models to meet changing demands or requirements. This improves performance, availability, and resilience of software systems. Automation: As code enables the automation of tasks that are otherwise tedious, time-consuming, or error-prone. This frees up developers and operators to focus on more creative or strategic activities. The main challenges of as code are: Complexity: As code introduces additional layers of abstraction and complexity to software development, delivery, or operation. This requires developers and operators to learn new skills, tools, and languages to deal with different domains of as code. Integration: As code requires the integration of various tools and platforms to support different domains of as code. This may pose compatibility issues, security risks, or maintenance overheads for developers and operators. Testing: Most as code demands rigorous testing of code artifacts to ensure their correctness, reliability, and quality. This may require additional resources, time, or expertise for developers and operators. Is it justified? Is it justified to use as code for each use case? The answer depends on several factors, such as: The nature and scope of the project: Some projects may benefit more from as code than others, depending on their size, complexity, or domain. For example, a large-scale, distributed, or data-intensive project may benefit more from IaC, WaC, or AIC than a small-scale, monolithic, or logic-intensive project. The maturity and availability of the tools and platforms: Some tools and platforms may support as code better than others, depending on their features, functionality, or compatibility. For example, some cloud providers may offer more options and flexibility for IaC than others, or some AI frameworks may offer more capabilities and performance for AIC than others. The skills and preferences of the developers and operators: Some developers and operators may prefer as code over others, depending on their skills, experience, or style. For example, some developers may enjoy writing code more than using graphical interfaces, or some operators may prefer using code more than using dashboards. Status of as code in each domain With the above factors, below is the scale from my personal view, as code status justified (5 star max) Infrastructure Very mature and widely used ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê Policy Mature but not being widely used ‚≠ê‚≠ê‚≠ê Diagram Depends on diagram type. Some are difficult to adjust layout ‚≠ê‚≠ê‚≠ê Presentation Difficult to fine-tune layout and create animations ‚≠ê Database ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê Documentation Markdown and many more ‚≠ê‚≠ê‚≠ê‚≠ê Configuration ‚≠ê‚≠ê‚≠ê UI Can be generated with programming language ‚≠ê‚≠ê‚≠ê‚≠ê AI Model can be layered ‚≠ê‚≠ê Diagram as Code Resources Mermaid JS https://mermaid.js.org/ The best way to represent diagrams as code in YAML language is through MermaidJS, a JavaScript library that can generate diagrams on the fly. GitHub and many platforms support MermaidJS natively. Other platforms like Hexo, which generates this blog, also have plugins to render diagrams with MermaidJS. The error messages are very intuitive compared to other diagram as code libraries. Highly recommended for writing simple diagrams. PlantUML https://github.com/plantuml/plantuml A well-known diagram as code generator produces images from human-readable language. It generates images at a tolerable speed, even when processing Java programs. This tool supports multiple-page diagrams. However, mastering positioning can be challenging even though it supports various layout types. Lines may run over labels and other issues may arise as your diagrams become more complex. AWS Diagram-as-Code https://github.com/awslabs/diagram-as-code The project began in February 2024, which is relatively fresh. The diagram looks nice with icons and grouping: Although it uses YAML, writing diagrams with its structure can be punishing once you start to set links between resources. You need to write at least four lines to describe them effectively, such as Source, Target, SourcePosition, and TargetPosition: links.yamlLinks: - Source: ALB SourcePosition: NNW Target: VPCPublicSubnet1Instance TargetPosition: SSE TargetArrowHead: Type: Open SourcePosition and TargetPosition are required because the line does not automatically position itself with respect to the resource. Although the diagram looks nice, it does not support AWS styling like callouts. Not recommended unless you want a quick diagram from infrastructure as code in CloudFormation, or converting from Terraform. However, you still need a lot of work to finalize a diagram. Conclusion In conclusion, as code is a powerful and promising paradigm that can enhance software development, delivery, or operation. However, it also comes with its own challenges and trade-offs that need to be considered carefully before adopting it. As code is not a one-size-fits-all solution, but rather a context-dependent choice that depends on the project, the tools, and the people involved. .article-entry ul li { margin-bottom: 20px; } commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[]},{"title":"Troubleshooting Terraform","slug":"2023/Troubleshooting_Terraform","date":"2023-09-26T16:00:00.000Z","updated":"2025-07-01T15:30:18.898Z","comments":true,"path":"2023/Troubleshooting_Terraform/","permalink":"http://neo01.com/2023/Troubleshooting_Terraform/","excerpt":"","text":"Terraform is a great tool for managing infrastructure as code, but sometimes it can be tricky to debug when things go wrong. In this blog post, I‚Äôll share tips on how to troubleshoot Terraform issues. Enabling Debug Log The TF_LOG environment variable allows you to set the log level for Terraform, which can be useful for getting more details about what Terraform is doing behind the scenes. You can set it to one of these values: TRACE, DEBUG, INFO, WARN, or ERROR. The default is INFO, which only shows high-level messages. To get more verbose output, you can set it to DEBUG. TRACE has details from DEBUG but includes dependency analysis details that are not needed for most debugging. For example, you can run this command before running Terraform: export TF_LOG=DEBUG and then terraform plan or run it in a single line export TF_LOG=DEBUG &amp;&amp; terraform plan If you specify the TF_LOG_PATH environment variable, logs will be stored in the file. TF_LOG_CORE and TF_LOG_PROVIDER The debug log can be massive and over 100MB! If you would like to focus on debugging a provider, you should use TF_LOG_PROVIDER with arguments from TF_LOG. If you suspect a problem with dependencies, you should use TF_LOG_CORE. Dependency and Parallelism Terraform analyzes dependencies between Terraform modules before execution. Dependency analysis ensures resources are provisioned in the correct order. Meanwhile, Terraform uses the analysis results for efficient parallel execution of operations by identifying independent sets of resources that can be provisioned or modified concurrently. However, logs from concurrent execution are very difficult to read, and we have to disable the concurrency with the parameter -parallelism=1 on plan and apply. With -parallelism=1, resources are created/modified/destroyed one at a time, in sequence. This allows for easier debugging and troubleshooting, as each resource is executed one at a time. e.g., terraform apply -parallelism=1: graph TD A[Terraform Operation] --> C[Resource 1 Modification] C --> D[Resource 2 Modification] D --> E[Terraform Execution Completed] When -parallelism is not specified, the default value is 10. The resources are created/modified/destroyed in parallel, allowing for faster execution. However, this can also make it more difficult to debug and troubleshoot issues, as multiple resources are executed simultaneously. e.g., terraform apply: graph TD A[Terraform Operation] --> C[Resource 1 Modification] A --> D[Resource 2 Modification] D --> E[Terraform Execution Completed] C --> E commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"terraform","slug":"terraform","permalink":"http://neo01.com/tags/terraform/"}]},{"title":"GitOps on Jenkins Pipelines","slug":"2023/GitOps_on_Jenkins","date":"2023-09-24T16:00:00.000Z","updated":"2025-07-01T15:16:06.821Z","comments":true,"path":"2023/GitOps_on_Jenkins/","permalink":"http://neo01.com/2023/GitOps_on_Jenkins/","excerpt":"","text":"If you‚Äôre a developer who loves automation, you might have heard of GitOps. GitOps is a way of managing your infrastructure and applications using Git as the single source of truth. GitOps lets you define your desired state in code, and then use tools like Terraform to apply that state to your environments. GitOps also enables continuous delivery, as any change in your Git repository triggers a pipeline that deploys the new version of your code. In the context of Jenkins pipelines, GitOps can be used to manage pipelines by treating the pipeline configuration as code, and using Git to manage changes to that code. This allows developers to version control their pipeline configurations, collaborate on changes with other team members, and easily roll back changes if necessary. Managing Jenkins Pipelines with Seeder Scripts A seeder script is a script to create and maintain your pipelines on Jenkins. It is usually written in Groovy scripts. Here is an example of a seeder script that creates pipelines in Jenkins. The script uses the Job DSL plugin to define the pipeline jobs in a declarative way. The script loops through a list of repositories and creates a pipeline job for each one. The details of the steps of each pipeline are referenced from the Jenkinsfile in their own repository. // Define the list of repositories def repos = ['repo1', 'repo2', 'repo3'] // Loop through the list and create a pipeline job for each one repos.each &#123; repo -> pipelineJob(\"$&#123;repo&#125;-pipeline\") &#123; // Use the SCM trigger to run the job when there is a change in the repository triggers &#123; scm('H/5 * * * *') &#125; // Define the pipeline script path as Jenkinsfile in the root of the repository definition &#123; cpsScm &#123; scm &#123; git &#123; remote &#123; url(\"https://github.com/$&#123;repo&#125;.git\") &#125; branch('master') &#125; &#125; scriptPath('Jenkinsfile') &#125; &#125; &#125; &#125; You may not feel the script is useful by having 3 pipelines created. Consider you need to create a pipeline for different environments, iterating simpler pipeline creation: // Define a list of repos and environments def repos = ['repo1', 'repo2', 'repo3'] def envs = ['dev', 'test', 'prod'] // Loop through the list and create a pipeline for each combination for (repo in repos) &#123; for (env in envs) &#123; // Define the pipeline name and description def pipelineName = \"$&#123;repo&#125;-$&#123;env&#125;\" def pipelineDesc = \"Pipeline for $&#123;repo&#125; in $&#123;env&#125; environment\" // Create a pipeline job using the DSL plugin pipelineJob(pipelineName) &#123; description(pipelineDesc) // Use the Jenkinsfile from the repo as the source of the pipeline definition definition &#123; cpsScm &#123; scm &#123; git &#123; remote &#123; url(\"https://github.com/$&#123;repo&#125;.git\") &#125; branches('master') &#125; &#125; // Specify the path to the Jenkinsfile in the repo scriptPath(\"Jenkinsfile-$&#123;env&#125;\") &#125; &#125; &#125; &#125; &#125; While seeder scripts can be used to define detailed steps in your pipeline, it‚Äôs important to keep these scripts simple and focused on managing the pipeline. Keeping seeder scripts simple makes it easier to maintain and collaborate with other team members. Benefits of Using GitOps with Seeder Scripts Using seeder scripts can bring several benefits, including: Automation: You can automate the creation and update of Jenkins pipelines based on the changes in your Git repository. This reduces manual errors and saves time and effort. Immutability: You can keep your Jenkins pipelines immutable, meaning that they are not modified manually after they are created. This ensures consistency and reliability across different environments and stages. Versioning: You can track the history and changes of your Jenkins pipelines using Git commits and branches. This enables you to roll back to previous versions, compare different versions, and audit the changes. Collaboration: You can collaborate with other developers and teams on your Jenkins pipelines using Git features such as pull requests, code reviews, and merge conflicts. This improves the quality and security of your pipelines. Recovery: If Jenkins is corrupted or deleted by accident, you can use the seeder job to redeploy the pipelines from the Git repository. Portability: You can use GitOps to create the same set of pipelines on another Jenkins server. This is especially useful when you would like to test your pipelines with Jenkins/plugin upgrades. However, there are also some challenges that you need to take care of when using GitOps to generate Jenkins pipelines. When you use GitOps to generate Jenkins pipelines, you may also use GitOps to destroy them when they are no longer needed. However, this may cause problems if you need to keep the output from pipeline executions (aka console log) for auditing or troubleshooting purposes. One way to overcome this challenge is to use a separate storage system for your log files. GitOps is a concept that you can apply to automate everything Ops by using Git as a single source of truth. Jenkins is just one of the applications. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"GitOps","slug":"GitOps","permalink":"http://neo01.com/tags/GitOps/"},{"name":"Jenkins","slug":"Jenkins","permalink":"http://neo01.com/tags/Jenkins/"},{"name":"Groovy","slug":"Groovy","permalink":"http://neo01.com/tags/Groovy/"}]},{"title":"My Best CoPilot Alternative - Running LLM on Local Machine","slug":"2023/My_Best_CoPilot_Alternative_Running_LLM_on_Local_Machine","date":"2023-09-02T16:00:00.000Z","updated":"2025-07-01T15:19:56.700Z","comments":true,"path":"2023/My_Best_CoPilot_Alternative_Running_LLM_on_Local_Machine/","permalink":"http://neo01.com/2023/My_Best_CoPilot_Alternative_Running_LLM_on_Local_Machine/","excerpt":"","text":"I‚Äôm always on the lookout for new and innovative tools to help me improve my coding skills and increase my productivity. Recently, I stumbled upon Code Llama, a free, open-source large language model (LLM) developed by Meta that allows you to set up on your low-cost gaming desktop. In this blog post, I‚Äôll be sharing my experience with Code Llama and how it can serve as a great alternative to GitHub CoPilot. Setup Code Llama with ollama ollama (https://ollama.ai/), which uses a Dockerfile-like configuration file. It also manages Docker layers from LLM to system prompt. ollama helps a lot to setup and run Code Llama. Although the website says Windows is coming soon, I followed steps in https://github.com/jmorganca/ollama and ran it successfully. The following are my setup, Windows 11 WSL 2 with Ubuntu Nvidia 3060 12GB https://github.com/jmorganca/ollama If you do not have enough video RAM, it falls back to system RAM and CPU. There are many models for you to choose (https://ollama.ai/library) but you should first try Code Llama. You can pull the Code Llama with ollama pull codellama like a docker image. However, there is a license agreement to accept (https://ai.meta.com/resources/models-and-libraries/llama-downloads/). Once you have requested, accepted, and been approved, you can start using it. If you do not, there are many other libraries you can try. ‚ùì Why I choose 12GB Video RAM on display card instead of 8GB, 16GB, 24GB? 8GB video cards are more common and cheaper but with an additional 4GB of video RAM (VRAM) you can run a larger model in the next tier. LLMs are usually built in 3 tiers with different model parameter sizes, each tier using a certain amount of VRAM approximately. Below shows 12GB fits both 7B and 13B. RAM more than 12GB is a waste unless you spend time on quantizing the model for the next tier and accept that the model runs much slower after quantization. Code Llama provides a 34B model that you can use with 24GB, which is the only use case for a 24GB video card. Model Size in storage Typical memory usage VRAM 8GB VRAM 12GB VRAM 24GB VRAM 2 X 24GB 7B 4GB 7GB ‚ùå ‚úÖ ‚úÖ ‚úÖ 13B 8GB 11GB ‚ùå ‚ùå ‚úÖ ‚úÖ 34B 19GB 23GB ‚ùå ‚ùå ‚úÖ ‚úÖ 70B 40GB 35GB ‚ùå ‚ùå ‚ùå ‚úÖ The largest video RAM size for a consumer-grade display card is 24GB, so you will need two video cards. How to Set Up Code Llama with Visual Studio Code Setting up Code Llama with Visual Studio Code is easy and straightforward. Search and install a Visual Studio Code extension ‚ÄúContinue‚Äù. This extension allows you to use LLM from the service provider and local LLM service like ollama. ‚ÄúContinue‚Äù starts an interactive tutorial and you should start to use it happily. Local vs CoPilot (or any other subscription-based service) There are many other CoPilot-like service providers that are free. Quality from free services is usually poor, so I will not compare them in the table below, Feature Local CoPilot (or any other subscription-based service) Cost of Ownership USD 200 for a second-hand nVidia 3060 12GB. Excluding the PC desktop that I already have - Price Free. Electricity costs me around 1kWh a month, which is negligible Subscription-based, starting from USD 10 a month ROI 20 months - LLM for you to choose Many. There are programming language-specific models. Depends on the provider Input token limit 100k (Code Llama) 1500 (Copilot) Setup Quite easy with ollama Easy Privacy Your data stays on your local machine Data is sent to third party for processing Input token is the ‚Äúmemory‚Äù of the context. GPT4‚Äôs input token is 8k; that‚Äôs why you feel the code generated is better than CoPilot when your requirement is complex. Please note the number could be inaccurate as technology is advancing quickly. It‚Äôs important to remember that the quality of the generated code is not just determined by the model used, but also by the system prompts and the context provided. This is because there are so many models you can use, and the prompt could matter more than a model. You can customize system prompts that fit you best and switch between models like crazy from Continue. For example, the poor code below could be generated from both Code Llama and GPT4 if you do not have a proper system prompt or if your context has been messed up, No system prompt write a python function to generate six unique numbers from 1 to 49 import random def get_unique_numbers(n): nums = [] while len(nums) &lt; n: num = random.randint(1, 49) if num not in nums: nums.append(num) return nums A simple system prompt makes a great difference. Not to mention other parameters such as temperature you can switch easily with ollama and Continue System prompt: You are a seasoned programmer with a focus on using a single line of code to solve a problem. Write a python function to generate six unique numbers from 1 to 49. def generate_unique_numbers(n): return random.sample(range(1, n), k=6) Conclusion Security and privacy are my top concerns. Running LLM is my best choice. commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"Keymap of My Split Keyboard","slug":"2024/09/KeyMap_Of_My_Split_Keyboard","date":"2023-08-15T17:18:24.000Z","updated":"2025-07-01T13:33:18.069Z","comments":true,"path":"2024/09/KeyMap_Of_My_Split_Keyboard/","permalink":"http://neo01.com/2024/09/KeyMap_Of_My_Split_Keyboard/","excerpt":"","text":"The Design Customizing a 36-key split keyboard can significantly enhance productivity, especially for those who, like myself, require one-handed navigation with a keyboard. With a dedicated layer activated by the left thumb, arrow keys are easily accessible, allowing for seamless navigation in tandem with a mouse. The left-hand keys are optimized for frequent use, ensuring the most commonly used functions are at my fingertips, which reduces the frequency of switching between keyboard and mouse. Additionally, a numpad layer is assigned to the right side, enabling quick number entry. The right thumb activates a layer for function keys, while another layer, activated by the right hand, is reserved for symbols, streamlining complex inputs. The layout of symbols resembles a traditional keymap. Opposite hands hold the modifier keys‚Äîshift, control, alt, and GUI‚Äîbalancing functionality across the keyboard. This thoughtful layout exemplifies the efficiency of a well-designed custom key map. Lastly, the key layout is QGMLWY, which has been proven to be more ergonomic than QWERTY. Design principles Keep frequently used keys on the left hand. Low learning curve and memorization. Use thumb to activate layers. Use modifier keys (Shift, Control, Alt, GUI) on opposite hands after a layer is activated. Use QGMLWY Include a numpad layer on the right hand for entering numbers quickly. Base Layer Q G M L W Y F U B ; D S T N R I A E O H Z X C V J K P , . / ‚áßSPACE‚å´‚èéTAB‚áß Left Hand Layers üîà‚èØVOL‚è∑VOL‚è∂[ ] 7 8 9 ‚†Ä GUI ALT CTRL ‚áß ( ) 4 5 6 ‚†Ä + - * / { } 1 2 3 ‚†Ä ‚áßHOLD‚†Ä0 . ‚áß ESC HOME ‚è∂END PGUP ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä TAB ‚è¥‚è∑‚èµPGDN CAPS ‚áßCTRL ALT GUI ‚èé‚†ÄINS DEL ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚áß‚†ÄHOLD‚†Ä‚†Ä‚áß Right Hand Layers ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ÄF7 F8 F9 F10 GUI ALT CTRL ‚áß‚†ÄINS F4 F5 F6 F11 ‚†Ä‚†Ä‚†Ä‚†Ä‚†ÄDEL F1 F2 F3 F12 ‚áß‚†Ä‚†ÄHOLD‚†Ä‚áß ! @ # $ % ^ &amp; * = GAME GUI ALT CTRL ‚áß| \\ ‚áßCTRL ALT GUI ~ ` _ ‚Äô &quot; ‚†ÄCAPS ‚†Ä‚†ÄBASE ‚áß- + ‚†ÄHOLD‚áß Gaming Layer ESC 1 2 3 4 5 6 7 8 9 0 ‚å´ TAB Q W E R T Y U I O P BASE ‚áßA S D F G H J K L ; ‚áß CTRL Z X C V B N M , . / CTRL GUIALTSPACE‚èéALT‚†Ä Keys ‚†Ä - Hold to activate layer ‚†Ä - Switch to layer ‚†Ä - To be update kbd { width: 30px; display: inline-block; text-align: center; } box { width: 48px; display: inline-block; } mbox { width: 52px; display: inline-block; } left-space{ width: 168px; display: inline-block; } mid{ width: 4px; display: inline-block; } commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[]},{"title":"Using ChatGPT to Draw Sequence Diagram","slug":"2023/Using_ChatGPT_to_Draw_Sequence_Diagram","date":"2023-05-09T16:00:00.000Z","updated":"2025-07-01T15:32:32.699Z","comments":true,"path":"2023/Using_ChatGPT_to_Draw_Sequence_Diagram/","permalink":"http://neo01.com/2023/Using_ChatGPT_to_Draw_Sequence_Diagram/","excerpt":"","text":"To use ChatGPT to generate a sequence diagram, you can provide a description of the system and the interactions between its components. The description should be written in a clear and concise manner, using plain language and logical ordering of events. Once you have the description, you can use a tool like Mermaid to create the diagram. In the following example using ChatGPT 3.5 Turbo, we have described the process of a user withdrawing cash from an ATM using their bank‚Äôs mobile app. We have requested that a sequence diagram be generated using Mermaid syntax. We refined the prompt approximately 10 times to ensure the best possible result. write mermaid to generate sequence diagram for a journey of a user to withdraw cash from atm by using his bank mobile app. user presses ‚Äúwithdraw cash from atm‚Äù button from bank app, user inputs the amount of cash to withdraw user presses ‚Äústart to withdraw‚Äù button from bank app, the bank app activates the camera by itself and is ready to scan a QR code the user presses a button on the ATM to show the mobile cash withdrawal QR code the atm calls withdraw token API to request a mobile withdraw token the withdraw token API generates a token with expiry, stores it into database, and then sends the token back to the atm the atm generates the QR code from the token, and then presents the QR code on atm screen the bank app scans the QR code and sends the token and withdraw amount to withdraw request api the withdraw request api checks if the token exists in the database. bank app shows invalid QR code if it does not exist. the withdraw request api checks if the token expired. bank app shows invalid QR code if it is expired. if the token exists and is not expired, the withdraw request api invalidates the token from database, and then commits the transaction with the token from transaction api. the transaction updates transaction status to database the atm polls ‚Äútransaction status api‚Äù to check if the transaction with the token has been completed. ‚Äútransaction status api‚Äù checks status from database and replies status to ATM. once completed, presents cash to user. the user picks up cash from atm ChatGPT generates natural language descriptions of a given prompt, which can be helpful for reviewing whether the prompt is clear and understandable to the model. Below is the script generated by ChatGPT. sequenceDiagram participant BankApp participant User participant ATM participant WithdrawTokenAPI participant WithdrawRequestAPI participant TransactionAPI participant Database participant TransactionStatusAPI User->>+BankApp: Press 'Withdraw Cash from ATM' button User->>+BankApp: Input amount of cash to withdraw User->>+BankApp: Press 'Start to Withdraw' button BankApp->>+BankApp: Activate camera by itself User->>+ATM: Press button to show mobile withdraw QR code ATM->>+WithdrawTokenAPI: Call withdraw token API WithdrawTokenAPI->>+Database: Store token with expiry WithdrawTokenAPI-->>-ATM: Send token ATM->>+ATM: Generate QR code from token ATM->>+User: Present mobile withdraw QR code BankApp->>+WithdrawRequestAPI: Scan QR code and send token and amount WithdrawRequestAPI->>+Database: Check if token exists Database-->>-WithdrawRequestAPI: Return token existence WithdrawRequestAPI->>+Database: Check if token is expired Database-->>-WithdrawRequestAPI: Return token expiry alt Token exists and is not expired WithdrawRequestAPI->>+Database: Invalidate token in database WithdrawRequestAPI->>+TransactionAPI: Commit transaction with token TransactionAPI->>+Database: Update transaction status to database ATM->>+TransactionStatusAPI: Poll transaction status API to check transaction completion TransactionStatusAPI->>+Database: Check transaction status from database Database-->>-TransactionStatusAPI: Return transaction completion status TransactionStatusAPI-->>-ATM: Return transaction completion status ATM->>+User: Present cash to user User->>+ATM: Pick up cash else Token does not exist or is expired BankApp->>+User: Show invalid QR code message end In this diagram, each participant is represented as a vertical line. The arrows indicate the flow of messages between the participants. The journey starts with the user pressing the ‚ÄòWithdraw Cash from ATM‚Äô button in the bank app and inputting the amount of cash to withdraw. The user then presses the ‚ÄòStart to Withdraw‚Äô button, which activates the camera in the bank app. The user then presses a button on the ATM to show the mobile withdraw QR code. The ATM calls the Withdraw Token API to request a mobile withdraw token, which is stored in the database and sent back to the ATM. The ATM generates a QR code from the token and presents it on the ATM screen. The bank app scans the QR code and sends the token and withdraw amount to the Withdraw Request API. The Withdraw Request API checks if the token exists in the database and if it is expired. If the token exists and is not expired, the Withdraw Request API invalidates the token in the database and commits the transaction with the token from the Transaction API. The Transaction API updates the transaction status to the database. The ATM polls the Transaction Status API to check for transaction completion, and the Transaction Status API checks the transaction status from the database and returns it to the ATM. Once the transaction is completed, the ATM presents the cash to the user. Finally, the user picks up the cash from the ATM, completing the withdrawal process. If the token does not exist or is expired, the bank app shows an invalid QR code message to the user. Below is the resulting sequence diagram. For the best experience, you should view it in mermaid live editor. sequenceDiagram participant BankApp participant User participant ATM participant WithdrawTokenAPI participant WithdrawRequestAPI participant TransactionAPI participant Database participant TransactionStatusAPI User->>+BankApp: Press 'Withdraw Cash from ATM' button User->>+BankApp: Input amount of cash to withdraw User->>+BankApp: Press 'Start to Withdraw' button BankApp->>+BankApp: Activate camera by itself User->>+ATM: Press button to show mobile withdraw QR code ATM->>+WithdrawTokenAPI: Call withdraw token API WithdrawTokenAPI->>+Database: Store token with expiry WithdrawTokenAPI-->>-ATM: Send token ATM->>+ATM: Generate QR code from token ATM->>+User: Present mobile withdraw QR code BankApp->>+WithdrawRequestAPI: Scan QR code and send token and amount WithdrawRequestAPI->>+Database: Check if token exists Database-->>-WithdrawRequestAPI: Return token existence WithdrawRequestAPI->>+Database: Check if token is expired Database-->>-WithdrawRequestAPI: Return token expiry alt Token exists and is not expired WithdrawRequestAPI->>+Database: Invalidate token in database WithdrawRequestAPI->>+TransactionAPI: Commit transaction with token TransactionAPI->>+Database: Update transaction status to database ATM->>+TransactionStatusAPI: Poll transaction status API to check transaction completion TransactionStatusAPI->>+Database: Check transaction status from database Database-->>-TransactionStatusAPI: Return transaction completion status TransactionStatusAPI-->>-ATM: Return transaction completion status ATM->>+User: Present cash to user User->>+ATM: Pick up cash else Token does not exist or is expired BankApp->>+User: Show invalid QR code message end commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"3D Printed Switch Blocker Cherry MX","slug":"2023/3D_Printed_Switch_Blocker_Cherry_MX","date":"2023-04-30T16:00:00.000Z","updated":"2024-04-28T16:00:00.000Z","comments":true,"path":"2023/3D_Printed_Switch_Blocker_Cherry_MX/","permalink":"http://neo01.com/2023/3D_Printed_Switch_Blocker_Cherry_MX/","excerpt":"","text":"Are you tired of accidentally hitting the wrong keys on your keyboard? Do you find yourself losing precious time because of a rogue Caps Lock or Windows key? Or maybe you‚Äôre like me and have a keyboard with more keys than you actually need after mapping, leaving you with unnecessary clutter. Fear not, my friend, for there is a solution to this all-too-common problem: a 3D printed switch blocker for Cherry MX switches! The size of the switch blocker is a perfect square of 18.8x18.8mm, with a height of 1mm. However, if you‚Äôre worried about blocking LED light, you may need to increase the thickness. No worries though, because you can easily modify the design to make it work for you. But what really sets this switch blocker apart is the notch on all sides. This ensures that the switch blocker stays securely in place and doesn‚Äôt pop out at the most inconvenient times. So whether you‚Äôre in the middle of a high-stakes game or a crucial work project, you can rest assured that your switch blocker will stay put. And the best part? You can download the model for this switch blocker from Tinkercad, a free 3D modeling website. So even if you don‚Äôt have any 3D modeling skills, you can still create your own custom switch blockers! And if you‚Äôre worried about the cost, don‚Äôt be. You can link many switch blockers together to save on printing costs. In fact, you can get 40 switch blockers for around 10 USD, including shipping from mainland to Hong Kong when you order from Taobao. So, what are you waiting for? Say goodbye to those frustrating accidental key presses and hello to a more efficient and enjoyable typing or gaming experience with your very own 3D printed switch blocker for Cherry MX switches. Happy printing! 3D Model of the switch blocker: commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"3D printing","slug":"3D-printing","permalink":"http://neo01.com/tags/3D-printing/"}]},{"title":"Handling invalid index on empty tuple from list in Terraform","slug":"2023/Handling_invalid_index_on_empty_tuple_from_list_in_Terraform","date":"2023-04-11T16:00:00.000Z","updated":"2025-07-01T15:18:10.911Z","comments":true,"path":"2023/Handling_invalid_index_on_empty_tuple_from_list_in_Terraform/","permalink":"http://neo01.com/2023/Handling_invalid_index_on_empty_tuple_from_list_in_Terraform/","excerpt":"","text":"It is common to use count = 0 to achieve feature toggle in Terraform. However, it could result in an empty tuple error when it is implemented in a resource and the feature is disabled. A tuple is a type of list that can contain any number of elements of different types. Index zero is used to access the enabled resource, e.g., module.feature[0].id. The tuple is empty when the resource is disabled, and module.feature[0] does not exist, resulting in an error. For example, below code runs well: locals &#123; my_tuple = [ &#123; name: \"a\" &#125;, &#123; name: \"b\" &#125; ] result = local.my_tuple[0].name &#125; output \"result\" &#123; value = local.result &#125; Output: $ terraform plan Changes to Outputs: + result = \"a\" However, it will throw an error when my_tuple is empty. locals &#123; my_tuple = [] result = local.my_tuple[0].name &#125; output \"result\" &#123; value = local.result &#125; Output: $ terraform plan ‚ï∑ ‚îÇ Error: Invalid index ‚îÇ ‚îÇ on main.tf line 5, in locals: ‚îÇ 5: value = local.my_tuple[0].name ‚îÇ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚îÇ ‚îÇ local.my_tuple is empty tuple ‚îÇ ‚îÇ The given key does not identify an element in this collection value: the collection has no elements. Feature toggling is a common use case for empty tuples. However, there are other use cases for empty tuples. For example, if you are using a module that returns a tuple, you may want to handle the case where the tuple is empty. Here are techniques that can be used to handle empty tuples in Terraform, Conditional Expressions A straightforward approach to handling empty tuples is to use a conditional expression to check whether the tuple is empty before trying to access an element. Here‚Äôs an example of how to use a conditional expression: locals &#123; my_tuple = [] result = length(local.my_tuple) > 0 ? local.my_tuple[0].name : \"default-value\" &#125; In this example, the length() function is used to check whether my_tuple is empty. If my_tuple is not empty, name in the first element ([0]) is assigned to the result variable. If my_tuple is empty, ‚Äúdefault-value‚Äù is assigned to the result variable. No empty tuple error is thrown because local.my_tuple[0].name is not evaluated when my_tuple is empty. This can be difficult to read when the variable name is long, as the variable name is repeated twice in the conditional expression. try Function Another approach to handling empty tuples is to use the try() function. The try() function is used to attempt to access a value and provide a default value if the value is undefined. Here‚Äôs an example of how to use the try() function: locals &#123; my_tuple = [] result = try(local.my_tuple[0].name, \"default-value\") &#125; In this example, the try() function is used to attempt to access name in the first element ([0]) of my_tuple. Since my_tuple is empty, the string ‚Äúdefault-value‚Äù is used as a default value for value. for Expression In Terraform 0.13.0 you can use for expressions to handle empty tuples: locals &#123; my_tuple = [] result = [for i in local.my_tuple: i.name] &#125; This is the least readable approach, but brings us to splat expressions below: ## Splat Expressions locals &#123; my_tuple = [] result = local.my_tuple[*].name &#125; Both for expressions and splat expressions are not supported in Terraform 0.12.29, but they are supported in Terraform 0.13.0 and later. Also, both return an empty tuple if the my_tuple is empty, unlike the conditional expression and try() function which a default value can be specified. A legacy splat expression local.my_tuple.*.name is also supported in Terraform 0.12.29 and later (v1.4 as of date of this post). However, this is not recommended as it could be removed in a future release. More information about splat expression, https://developer.hashicorp.com/terraform/language/expressions/splat It is worth noting that the result from the expressions is a tuple. You may need to convert it to a list with tolist() function, or toset() function if you want to remove duplicates and/or order the items. compact() function can be used to remove empty string and null values from a list. You can also use join() function to convert a list to a string. feature toggling with meta-argument for_each with dynamic blocks Use of for_each meta-argument with dynamic blocks can be an approach for feature toggling but beyond the scope of this post. References https://support.hashicorp.com/hc/en-us/articles/9471971461651-ERROR-Invalid-index-on-empty-tuple commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"terraform","slug":"terraform","permalink":"http://neo01.com/tags/terraform/"}]},{"title":"New Unlocked Job Roles for AI - Prompt Engineers!","slug":"2023/New_Unlocked_Job_Roles_for_AI_Prompt_Engineers","date":"2023-04-08T16:00:00.000Z","updated":"2025-07-01T15:21:03.687Z","comments":true,"path":"2023/New_Unlocked_Job_Roles_for_AI_Prompt_Engineers/","permalink":"http://neo01.com/2023/New_Unlocked_Job_Roles_for_AI_Prompt_Engineers/","excerpt":"","text":"Once upon a time, in a world not so different from ours, people were anxious about the rise of AI and how it would take over their jobs. But in this magical world, they soon discovered that, as AI developed, new and exciting job roles were being unlocked, like that of a ‚ÄúPrompt Engineer.‚Äù Meet the Prompt Engineer In this enchanted era of generative AI development, we find ourselves with innovative job titles like ‚ÄúPrompt Engineer.‚Äù Imagine someone who has a keen eye for graphic design and a passion for AI image generation models like Stable Diffusion and Midjourney. These talented individuals are tasked with crafting course materials, demos, and examples to teach others how to create professional-looking graphic design assets using AI. Job description expert from https://prompthero.com/jobs/177145-prompt-engineer-for-graphic-design-contractor-at-prompthero, ‚Ä¶can demonstrate exceptional ability and prove that your workflow yields amazing graphic design assets people actually end up using. While graphics prompt engineers focus on the technical aspects of graphics design, such as developing prompt, train models, or optimizing performance, traditional graphics designers focus on the artistic aspects, such as creating visual concepts, selecting colors, and designing layouts. By working together, graphics prompt engineers and traditional graphics designers can leverage each other‚Äôs strengths to create effective and visually appealing products or projects. For example, the engineer may be able to develop prompt that enables a designer to create more complex and dynamic graphics, while the designer can provide creative input to ensure that the graphics are aesthetically pleasing and aligned with the project‚Äôs objectives. We‚Äôve also seen the emergence of ‚ÄúLegal Prompt Engineers.‚Äù These professionals have a background in law and deep knowledge of language models like GPT-3 and ChatGPT. They work closely with lawyers and law firms to revolutionize the legal industry by designing and developing high-quality prompts for various legal and non-legal use cases. You can find more job description in https://prompthero.com/jobs/prompt-engineering-jobs Can a traditional graphic designer become a Prompt Engineer? Yes, absolutely! Some traditional graphic designers are already taking advantage of the opportunities offered by AI technology. They‚Äôre using AI models to create high-quality graphics for their clients, which saves them time and money. And they‚Äôre also using AI to create graphics for their own personal projects, which allows them to express their creativity and passion for design/law. With the passion they learn more about AI technology and become a Prompt Engineer. How to Become a Prompt Engineer Now that you‚Äôve heard about these fascinating roles, you might be wondering how to become a Prompt Engineer yourself. Here are some suggestions: Develop a strong understanding of AI models: Spend time learning about the AI models used for image generation or natural language processing. Explore platforms like OpenAI to gain insights into the latest developments in the field. Develop your niche expertise: Depending on the type of Prompt Engineer you want to become, focus on developing your graphic design skills or deepening your legal knowledge, for example. Get hands-on experience: Practice working with AI models and prompt to create content, designs, or solutions in your chosen niche. This will help you build a portfolio showcasing your AI-generated work. Stay current with the AI industry: Keep yourself updated on the latest advancements and breakthroughs in AI technology. This will help you stay competitive and informed about changes in the job market. The Next AI-Unlocked Job Role As the world of AI continues to grow and transform, it‚Äôs only a matter of time before we see even more creative job roles emerge. One possibility is the ‚ÄúAI Content Strategist,‚Äù who specializes in designing content strategies that leverage AI-generated content for marketing, SEO, and social media campaigns. The AI-Created Job Role Twist But what if these new job roles were actually created by AI itself? Imagine an AI system generating a list of job roles that perfectly align with the needs of an ever-evolving job market. It‚Äôs not entirely impossible, and it would be a testament to the incredible advancements in AI and the limitless opportunities it can create. So, no need to worry, dear reader, for the future of mankind in the job market is still opportunistic and filled with potential! In conclusion, as the AI landscape evolves, we can expect to see even more exciting job roles emerge, offering opportunities for professionals to combine their passions with AI technology. The future is bright, and the possibilities are endless! commentBox('5765834504929280-proj')","categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"Pair Programming with ChatGPT - A Developer's Dream Come True","slug":"2023/Pair_Programming_with_ChatGPT_A_Developer_s_Dream_Come_True","date":"2023-03-29T16:00:00.000Z","updated":"2025-07-01T15:23:00.040Z","comments":true,"path":"2023/Pair_Programming_with_ChatGPT_A_Developer_s_Dream_Come_True/","permalink":"http://neo01.com/2023/Pair_Programming_with_ChatGPT_A_Developer_s_Dream_Come_True/","excerpt":"","text":"As a full stack developer, I have practiced pair programming with many humans over the years. However, recently I had the opportunity to work with ChatGPT, a large language model trained by OpenAI, and it was a game-changer. I found that ChatGPT was not replacing my role, but rather working as a pair programming companion, providing me with valuable insights and perspectives. Let‚Äôs dive into how it transformed my pair programming experience! Human and ChatGPT: A Perfect Synergy The partnership between a human developer and ChatGPT is quite unique. Here‚Äôs my typical loop: Requirements Gathering: We human developer provides the requirements for a specific feature or function. ChatGPT write code and we human review. Summarizing Requirements: I found it very useful to ask ChatGPT summarizes my requirements, as I usually not provide my requirements in one go. This helps me to check if we are in the same page. Unit Test Template: ChatGPT generates a unit test template based on the summarized requirements. Human Completes and Refines Unit Test: We human developer completes and refines the unit test and provides feedback to ChatGPT, refining their understanding of the task. Its turn for ChatGPT to review my code In reverse, the human can write a program and ask ChatGPT to review and summarize the code. This process helps identify potential issues and ensures that the code meets the desired requirements. However, sometime you may need to help ChatGPT a little instead of throwing a piece of code. For example, Try #1, simply ask to review Prompt: review following terraform code in main.tf. resource \"some_resource\" \"resource_name\" &#123; name = \"some_name\" value = condition == true ? \"aaa,bbb,ccc,$&#123;var.b&#125;\" : \"$&#123;var.a&#125;,aaa,bbb,ccc,$&#123;var.b&#125;\" &#125; Response The code you provided creates a resource named ‚Äúsome_resource‚Äù with the name ‚Äúresource_name‚Äù and sets the ‚Äúname‚Äù attribute to ‚Äúsome_name‚Äù. Additionally, it sets the ‚Äúvalue‚Äù attribute based on a condition. If the ‚Äúcondition‚Äù variable is true, then ‚Äúvalue‚Äù is set to ‚Äúaaa,bbb,ccc,${var.b}‚Äù. If ‚Äúcondition‚Äù is false, then ‚Äúvalue‚Äù is set to ‚Äú${var.a},aaa,bbb,ccc,$${var.b}‚Äù. The code appears to be valid and functional, assuming that the variables ‚Äúa‚Äù, ‚Äúb‚Äù, and ‚Äúcondition‚Äù have been properly defined. However, it‚Äôs important to ensure that the resource type and its attributes are correct and properly configured for your infrastructure needs. Additionally, it‚Äôs a good practice to use descriptive names for resources and attributes to make it easier to understand the purpose of the code. The above sounds meaningless. Lets refine our question a little bit Try #2, tell what you want from code review Prompt: review following terraform code in main.tf. can you propose better coding? resource \"some_resource\" \"resource_name\" &#123; name = \"some_name\" value = condition == true ? \"aaa,bbb,ccc,$&#123;var.b&#125;\" : \"$&#123;var.a&#125;,aaa,bbb,ccc,$&#123;var.b&#125;\" &#125; Response The code seems fine in terms of syntax, but if you‚Äôre looking for suggestions, here are a few: It‚Äôs always a good idea to use meaningful names for your resources, so you can easily identify them later. Instead of ‚Äúsome_resource‚Äù and ‚Äúresource_name‚Äù, try to come up with more descriptive names. In the value attribute, it‚Äôs generally better to avoid using ternary operators for complex expressions, as they can make the code harder to read and understand. Instead, consider breaking the expression into multiple lines, or creating a separate variable that holds the computed value. Consider using interpolation syntax (${‚Ä¶}) only when necessary. In this case, since var.a and var.b are already variables, you can simply concatenate them with the other strings using the + operator. Here‚Äôs an example of how you could refactor the code with these suggestions: resource \"some_resource\" \"example\" &#123; name = \"example_resource\" value = compute_value(var.a, var.b, condition) &#125; // Define a separate function to compute the value // This makes the code easier to read and understand // and allows for reuse if needed locals &#123; compute_value = (a, b, condition) => &#123; if condition &#123; \"aaa,bbb,ccc,\" + b &#125; else &#123; a + \",aaa,bbb,ccc,\" + b &#125; &#125; &#125; This code uses a local variable to define a separate function that computes the value based on the input variables and the condition flag. This makes the code easier to read and understand, and also allows for reuse if needed. With the magic question can you propose better coding? you have much meaningful result. Although it is not able to spot I am repeating part of the variable (,aaa,bbb,ccc,$&#123;var.b&#125;), which goes against the DRY principle. I have rewritten a bit and asked again as below, Try #3, ask for opinion from 2 pieces of my code Prompt: which terraform code is better, can you propose better coding? code 1, resource \"some_resource\" \"resource_name\" &#123; name = \"some_name\" value = condition == true ? \"aaa,bbb,ccc,$&#123;var.b&#125;\" : \"$&#123;var.a&#125;,aaa,bbb,ccc,$&#123;var.b&#125;\" &#125; code2, locals &#123; a = &#123; \"aaa\", \"bbb\", \"ccc\", var.b, &#125; &#125; resource \"some_resource\" \"resource_name\" &#123; name = \"some_name\" value = join(\",\", condition == true ? [] : var.a, local.a) &#125; Response Both code examples are valid and functional, but they have different purposes and implementations. Code 1 uses a ternary operator to set the ‚Äúvalue‚Äù attribute of the ‚Äúsome_resource‚Äù resource based on a condition. It‚Äôs a concise way of setting the attribute, but it can be less readable for more complex expressions. Code 2 uses a local variable to create a list of values to be joined together. It uses the ‚Äújoin‚Äù function to concatenate the values in the list with a comma as a separator. This approach can be more readable for longer lists of values and expressions. Ultimately, the choice between these two code examples depends on the specific needs and requirements of your infrastructure. If you have a small list of values and a simple condition, Code 1 might be more appropriate. If you have a longer list of values and a more complex expression, Code 2 might be more appropriate. To propose a better coding, I would suggest combining the best parts of both code examples to create a more readable, maintainable, and extensible code. locals &#123; some_values = [ \"aaa\", \"bbb\", \"ccc\", var.b, ] &#125; resource \"some_resource\" \"resource_name\" &#123; name = \"some_name\" value = join(\",\", concat(var.a, condition ? [] : local.some_values)) &#125; In this code, we use a local variable to store the hardcoded values and the ‚Äúvar.b‚Äù variable. Then, we concatenate the values of the ‚Äúvar.a‚Äù and local variable using the ‚Äúconcat‚Äù function. Finally, we use the ‚Äújoin‚Äù function to concatenate the values with a comma separator. This code is more readable, maintainable, and extensible than the previous examples. It separates the hardcoded values from the variables, uses a more readable ‚Äúconcat‚Äù function instead of the ternary operator, and uses a more concise ‚Äújoin‚Äù function. Which combines improvements from both human and AI! However, I will use try #2 most likely as is effortless. Advantages of ChatGPT in Pair Programming Here are some of the key advantages of using ChatGPT in pair programming, instead of another human: 24/7 Availability: ChatGPT is always available, allowing you to work on projects whenever inspiration strikes, without waiting for a fellow developer. Instant Feedback: Receive feedback on your code in real-time, streamlining your development process. Consistency: ChatGPT offers consistent feedback quality, free from human bias or mood fluctuations. Diversity: ChatGPT can provide diverse perspectives and insights that a human pair programmer may not have. This can lead to more creative and innovative solutions. Learning Opportunities: By observing ChatGPT‚Äôs suggestions and code reviews, developers can learn new coding techniques and best practices. Potential drawback As shown in the example you should notice if you don‚Äôt provide enough background or ask the correct question, the review result is not satisfactory. GitHub Copilot with Visual Studio Code I found it helps in code complete but it lacks interactivity for now. A New Era of Collaboration Pair programming with ChatGPT is a game-changer. It offers a powerful synergy between human developers and AI, streamlining the development process and offering new learning opportunities. While it can never replace the creativity and problem-solving capabilities of a human developer, ChatGPT is an invaluable tool in the modern developer‚Äôs arsenal. So, give it a try and experience the future of pair programming for yourself! commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"},{"name":"terraform","slug":"terraform","permalink":"http://neo01.com/tags/terraform/"}]},{"title":"Using custom validation to validate other variables in Terraform","slug":"2022/Using-custom-validation-to-validate-other-variables-in-Terraform","date":"2022-12-08T16:00:00.000Z","updated":"2025-07-01T15:11:55.696Z","comments":true,"path":"2022/Using-custom-validation-to-validate-other-variables-in-Terraform/","permalink":"http://neo01.com/2022/Using-custom-validation-to-validate-other-variables-in-Terraform/","excerpt":"","text":"This blog post is generated with ChatGPT In Terraform, you can use custom validation blocks to define your own custom validation rules for Terraform variables. These validation blocks allow you to specify a validation function that Terraform will use to validate the value of the variable. You can also use these custom validation blocks to validate other variables in your Terraform configuration. To validate other variables from a custom validation function, you can use the var keyword followed by the name of the variable you want to validate. For example, if you have two variables named subnet_id and vpc_id, and you want to validate that the subnet_id is associated with the vpc_id, you could define a custom validation block like this: variable \"subnet_id\" &#123; type = string &#125; variable \"vpc_id\" &#123; type = string &#125; validation &#123; condition = can_associate_subnet_with_vpc(var.subnet_id, var.vpc_id) error_message = \"The specified subnet is not associated with the specified VPC.\" &#125; function can_associate_subnet_with_vpc(subnet_id, vpc_id) &#123; // perform validation logic here &#125; In the example above, we define a custom validation block that calls the can_associate_subnet_with_vpc function to validate that the subnet_id is associated with the vpc_id. The can_associate_subnet_with_vpc function takes two arguments, subnet_id and vpc_id, which are both passed using the var keyword. Inside the function, you can perform any validation logic you need to validate the variables. If the validation is successful, the function should return true, and if the validation fails, it should return false. By using the var keyword and passing the variables to your custom validation function, you can easily validate multiple variables in your Terraform configuration and ensure that they meet your requirements. In summary, to validate other variables from a custom validation function in Terraform, you can use the var keyword followed by the name of the variable you want to validate. This allows you to easily validate multiple variables in your Terraform configuration and ensure that they meet your requirements. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"terraform","slug":"terraform","permalink":"http://neo01.com/tags/terraform/"}]},{"title":"Home Assistant Sensor for Hong Kong Observatory","slug":"2022/Home-Assistant-Sensor-for-Hong-Kong-Observatory","date":"2022-12-01T07:04:04.000Z","updated":"2025-07-01T15:10:00.214Z","comments":true,"path":"2022/Home-Assistant-Sensor-for-Hong-Kong-Observatory/","permalink":"http://neo01.com/2022/Home-Assistant-Sensor-for-Hong-Kong-Observatory/","excerpt":"","text":"Hong Kong Observatory Tseung Kwan O (TKO) weather, humidity, temperature and 10-minute wind speed and direction - platform: rest name: hko_tko_humidity resource: https:&#x2F;&#x2F;data.weather.gov.hk&#x2F;weatherAPI&#x2F;hko_data&#x2F;regional-weather&#x2F;latest_1min_humidity.csv value_template: &quot;&#123;&#123; value | regex_findall_index(find&#x3D;&#39;Tseung Kwan O,(.*)&#39;) | float | round(0) &#125;&#125;&quot; device_class: &quot;humidity&quot; unit_of_measurement: &quot;%&quot; scan_interval: 600 - platform: rest name: hko_tko_temperature resource: https:&#x2F;&#x2F;data.weather.gov.hk&#x2F;weatherAPI&#x2F;hko_data&#x2F;regional-weather&#x2F;latest_1min_temperature.csv value_template: &quot;&#123;&#123; value | regex_findall_index(find&#x3D;&#39;Tseung Kwan O,(.*)&#39;) | float | round(1) &#125;&#125;&quot; device_class: &quot;temperature&quot; unit_of_measurement: &quot;¬∞C&quot; scan_interval: 600 - platform: rest name: hk_tko_wind resource: https:&#x2F;&#x2F;data.weather.gov.hk&#x2F;weatherAPI&#x2F;hko_data&#x2F;regional-weather&#x2F;latest_10min_wind.csv value_template: &quot;&#123;&#123; value | regex_findall_index(find&#x3D;&#39;Tseung Kwan O,(.*)&#39;) &#125;&#125;&quot; scan_interval: 600 - platform: template sensors: tko_wind_direction: friendly_name: &quot;TKO 10-minute wind direction&quot; value_template: &quot;&#123;&#123; states(&#39;sensor.hk_tko_wind&#39;) | regex_findall_index(find&#x3D;&#39;([^,]+),&#39;) &#125;&#125; &quot; icon_template: &quot;hass:compass&quot; tko_wind_speed: friendly_name: &quot;TKO 10-minute mean speed&quot; value_template: &quot;&#123;&#123; states(&#39;sensor.hk_tko_wind&#39;) | regex_findall_index(find&#x3D;&#39;[^,]+,([^,]+),&#39;) &#125;&#125; &quot; unit_of_measurement: &quot;km&#x2F;hour&quot; icon_template: &quot;hass:tailwind&quot; tko_wind_gust: friendly_name: &quot;TKO 10-minute max gust&quot; value_template: &quot;&#123;&#123; states(&#39;sensor.hk_tko_wind&#39;) | regex_findall_index(find&#x3D;&#39;[^,]+,[^,]+,([^,]+)&#39;) &#125;&#125; &quot; unit_of_measurement: &quot;km&#x2F;hour&quot; icon_template: &quot;hass:weather-windy&quot; commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"Home Assistant","slug":"Home-Assistant","permalink":"http://neo01.com/tags/Home-Assistant/"},{"name":"Open Data","slug":"Open-Data","permalink":"http://neo01.com/tags/Open-Data/"}]},{"title":"How To Setup Root Certificate For MITM Proxy On iOS","slug":"2018/How-To-Setup-Root-Certificate-For-MITM-Proxy-On-iOS","date":"2018-03-27T16:00:00.000Z","updated":"2025-07-01T15:06:17.318Z","comments":true,"path":"2018/How-To-Setup-Root-Certificate-For-MITM-Proxy-On-iOS/","permalink":"http://neo01.com/2018/How-To-Setup-Root-Certificate-For-MITM-Proxy-On-iOS/","excerpt":"","text":"Trusting the root certificate for debugging proxies such as BrowserMob-Proxy on iOS is quite strict in its forward direction. You can download the certificate from ca-certificate-rsa.cer using Device‚Äôs Safari, or you can drag the file into the Simulator as well. Tap on Allow to install the cert Tap Install on the upper right Again, tap Install on the upper right Install Once verified, tap on Done. The certificate is installed To trust the certificate as Root Certificate, goto About in General Scroll down until you see Certificate Trust Settings Toggle on the LittleProxy MITM to trust it Tap Continue to trust it as Root Certificate Done. Now all traffic can be intercepted by the proxy without any complaint img { width: 50% } commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"},{"name":"Test Automation","slug":"Test-Automation","permalink":"http://neo01.com/tags/Test-Automation/"}]},{"title":"The easiest way to perform network latency test on an App in iPhone","slug":"2018/The-easiest-way-to-perform-network-latency-test-on-an-App-in-iPhone","date":"2018-01-03T16:00:00.000Z","updated":"2025-07-01T15:08:11.301Z","comments":true,"path":"2018/The-easiest-way-to-perform-network-latency-test-on-an-App-in-iPhone/","permalink":"http://neo01.com/2018/The-easiest-way-to-perform-network-latency-test-on-an-App-in-iPhone/","excerpt":"","text":"Simulating network latency or even poor network conditions in iOS is very easy. You don‚Äôt need to set up a proxy, router, or a poor network provider. All you have to do is enable Developer mode using Xcode. Then, you can see the Developer icon, which allows you to easily simulate various network scenarios. Under Developer, you can see the Network Link Conditioner. By default it is Off. Tap on the Network Link Conditioner, There are several profiles for you to use. You can utilize the ping time (round-trip) from your mobile phone to your target backend, and then subtract the ping time from your lab‚Äôs backend. To create a new profile, simply tap on Add a profile‚Ä¶ Let‚Äôs say the ping time is 900ms, you can set either Out Delay, In Delay or both. Done! img { width: 50% } commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"}]},{"title":"Gsource on Mac","slug":"2017/Gsource-on-Mac","date":"2017-12-07T16:00:00.000Z","updated":"2025-07-01T14:58:45.685Z","comments":true,"path":"2017/Gsource-on-Mac/","permalink":"http://neo01.com/2017/Gsource-on-Mac/","excerpt":"","text":"It is often difficult to tell how hard developers are working to non-IT folks. Usually, I try to let them watch Gource. Setting up Gource on Mac is not difficult, but it has several steps. First, you have to have Brew installed. Then, run the commands below from Terminal, # install wget if you don't have brew install wget # gsource dependency brew install glew brew install pkg-config brew install sdl2 brew install sdl2_image brew install boost brew install glm brew install pcre # download and build Gource wget https://github.com/acaudwell/Gource/releases/download/gource-0.47/gource-0.47.tar.gz tar vfxz gource-0.47.tar.gz cd gource-0.47 ./configure # assume no error from configure make install The binary will install into /usr/local/bin/gource. Run the command below to generate the video from a directory with a Git repository cd [your git repository] /usr/local/bin/gource You can replace the default icon with yours by renaming your avatar to the Git author name such as ‚ÄúYour Name.png‚Äù as in the Git log, place it in the local directory, and run the Gource command below /usr/local/bin/gource --user-image-dir . If you feel the video is too long, you can adjust the speed by changing the simulation time scale (default: 1.0) with -c, --time-scale, or SCALE. You can make your video less messy by reducing the maximum number of files from unlimited to a value such as 100 with --max-files NUMBER Adding elasticity is fun with -e 0.5 when a large number of files are being added or deleted. More information can be found in Controls The video can be output to a file with the option -o FILENAME. The file size can be over 10GB for a 1-minute video, so beware. After the video is generated, you can use libav to convert it to MP4, brew install libav avconv -vcodec ppm -f image2pipe -i gource.ppm -c:v libx265 -c:a copy gource.mkv Gource of my blog: commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"Visualization","slug":"Visualization","permalink":"http://neo01.com/tags/Visualization/"},{"name":"Mac","slug":"Mac","permalink":"http://neo01.com/tags/Mac/"}]},{"title":"How to login Cisco VPN automatically on macOS High Sierra","slug":"2017/How-to-login-Cisco-VPN-automatically-on-macOS-High-Sierra","date":"2017-12-05T16:00:00.000Z","updated":"2025-07-01T14:59:48.890Z","comments":true,"path":"2017/How-to-login-Cisco-VPN-automatically-on-macOS-High-Sierra/","permalink":"http://neo01.com/2017/How-to-login-Cisco-VPN-automatically-on-macOS-High-Sierra/","excerpt":"","text":"There is no way to save a password when logging into a Cisco IPSec VPN on a Macintosh operating system (macOS). The best solution for me is writing an AppleScript in Automator, or running it from the command line, to automate the login process. AppleScript in Automator Open Apple‚Äôs Automator, Choose New Document Select Service The service created has receives selected text by default. It means you need to select text or having focus in a text editor to enable the service. Try to search for action Run AppleScript. Then, drag the action into the right-hand-side. Paste below code into the editor, on run &#123;input, parameters&#125; set vpn_name to \"'your VPN name'\" set user_name to \"your username\" set passwd to \"your password\" tell application \"System Events\" set rc to do shell script \"scutil --nc status \" &amp; vpn_name if rc starts with \"Disconnected\" then do shell script \"scutil --nc start \" &amp; vpn_name &amp; \" --user \" &amp; user_name delay 3 keystroke passwd keystroke return end if end tell return input end run Update vpn_name, username and passwd in the script. You can refer to the screenshot below for the vpn_name, which is VPN (Cisco IPSec). The script uses scutil --nc status to check the VPN connection status, and scutil --nc start to initiate the VPN connection. Typically, the VPN login dialog appears within 3 seconds. If your laptop is slow, please update the value in delay 3. To automate the process, try running the script using the play button and observe how it works. Save the script with a name such as VPN Login. In the System Preferences -&gt; Keyboard -&gt; Shortcuts, you can find the automation script. Assign a shortcut key. By default, the script is assigned to the Text service during its creation. To use the keyboard shortcut, you will need to select some text or have focus in a text editor enabled. Try selecting text from a text editor, such as Atom. With the proper shortcut key set up, you should be able to automate the VPN login. This script should work with Sierra or earlier versions of macOS, although I haven‚Äôt tested it on older systems myself. Please let me know if you have any results using this method on older macOS platforms AppleScript from command line Open Apple‚Äôs Script Editor, Choose New Document Paste below code into the editor. Please refers to AppleScript in Automator set vpn_name to \"'your VPN name'\" set user_name to \"your username\" set passwd to \"your password\" tell application \"System Events\" set rc to do shell script \"scutil --nc status \" &amp; vpn_name if rc starts with \"Disconnected\" then do shell script \"scutil --nc start \" &amp; vpn_name &amp; \" --user \" &amp; user_name delay 3 keystroke passwd keystroke return end if end tell Save the script. You can run the script with osascript [programfile] from Terminal. Have fun! commentBox('5765834504929280-proj')","categories":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"}],"tags":[{"name":"MacOS","slug":"MacOS","permalink":"http://neo01.com/tags/MacOS/"}]},{"title":"Capture screen into clipboard instead of file on Mac","slug":"2017/capture-screen-into-clipboard-instead-of-file-on-mac","date":"2017-07-17T16:00:00.000Z","updated":"2025-07-01T14:56:54.224Z","comments":true,"path":"2017/capture-screen-into-clipboard-instead-of-file-on-mac/","permalink":"http://neo01.com/2017/capture-screen-into-clipboard-instead-of-file-on-mac/","excerpt":"","text":"Many people know how to capture screen into a file on Mac by using Command + Shift + 3 for a full screenshot and 4 for cross hair selection tool. However, I found I want to paste the captured image into an editor directly more than saving the image into a file. The hotkey for taking a screenshot to the clipboard is very inconvenient, which is Control + Command + Shift + 3 or 4. The following steps show how to reassign the shortcuts for taking a screenshot to the clipboard instead of a file. 1. Go to System Preference and click Keyboard, 2. Click on the second key to reassign Command + Shift + 3 for ‚ÄúCopy picture of screen to the clipboard‚Äù. It is fine to see the conflict icon as it will be resolved later 3. Click the first key to reassign the Control + Command + Shift + 3 , which is less frequently using. 4. Do the same for capturing with cross hair selection tool. My personal preference for taking screenshot to a file is Option + Command + Shift + 3 , commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://neo01.com/tags/Mac/"}]},{"title":"Mark Six master on Linux/Mac","slug":"2017/Mark-six-master-on-linuxmac","date":"2017-07-17T16:00:00.000Z","updated":"2024-02-05T16:00:00.000Z","comments":true,"path":"2017/Mark-six-master-on-linuxmac/","permalink":"http://neo01.com/2017/Mark-six-master-on-linuxmac/","excerpt":"","text":"Mark Six is a lottery in Hong Kong. You can select 6 numbers from a pool of 49 numbers on the lottery ticket. There are numerous single-line commands that can be used to generate 6 numbers randomly from 1 to 49. python 2 python -c 'import random; print [ random.randint(1,49) for _ in xrange(6)]' awk awk -v min=1 -v max=49 'BEGIN&#123; srand(); for (i = 0; i &lt; 6; i++) print int(min+rand()*(max-min+1))&#125;' bash for i in &#123;1..6&#125;; do echo $(( ( RANDOM % 49 ) + 1)); done jot on Mac macOS 10.13 High Sierra no longer provides jot jot -r -s ' ' 6 1 49 | tr ' ' '\\n' However, you will soon find repeated numbers are generated from the above solutions. The trick to have non-repeated generated numbers is using random sort from an array with 49 numbers, python 2 python -c 'import random; a = range(1, 49); random.shuffle(a); print a[:6:]' jot on Mac macOS 10.13 High Sierra no longer provides jot jot 49 1 49 | gsort --random-sort | head -n 6 Using AI to write python script Using AI to generate Python scripts is extremely straightforward. Let‚Äôs write a prompt and compare it with what we wrote in 2017. The prompt is: Write a Python script that pick six random unique numbers from 1 to 49, inclusive. Write it simple and testable. import random def get_random_numbers(): return random.sample(range(1, 50), 6) print(get_random_numbers()) The result is great! We can add AI to unit test as well. import unittest from your_script import get_random_numbers class TestGetRandomNumbers(unittest.TestCase): def test_length(self): self.assertEqual(len(get_random_numbers()), 6) def test_values(self): numbers = get_random_numbers() self.assertTrue(all(1 &lt;= x &lt;= 49 for x in numbers)) def test_uniqueness(self): numbers = get_random_numbers() self.assertTrue(len(set(numbers)) == len(numbers)) if __name__ == '__main__': unittest.main() The unit test is better than many developers! commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"python","slug":"python","permalink":"http://neo01.com/tags/python/"},{"name":"ShellScript","slug":"ShellScript","permalink":"http://neo01.com/tags/ShellScript/"},{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"}]},{"title":"My Fiddler Cookbook","slug":"2017/my-fiddler-cookbook","date":"2017-05-19T16:00:00.000Z","updated":"2025-07-01T15:04:19.515Z","comments":true,"path":"2017/my-fiddler-cookbook/","permalink":"http://neo01.com/2017/my-fiddler-cookbook/","excerpt":"","text":"Fiddler is my favorite debugging proxy on Windows. Usually, I use Python to write simple debugging proxy which is usually less than 30 lines until it needs https. Enabling https decryption That‚Äôs why my first configuration on Fiddler is Decrypting HTTPS traffic, Check Decrypt HTTPS traffic and click OK. It will then ask to install a Trust Root Certificate, The scary text is a warning about https traffic being seen by Fiddler. Fiddler‚Äôs root certificate is now trusted, which means Fiddler can generate certificates trusted by your applications, including your browser. If it doesn‚Äôt prompt you to install the certificate, you can have the certificate installed with below, A Simple Load Test You can run a very simple load test by selecting multiple request, and then press R. Beware the response from the server may be cached in different layer of the infrastructure. You can see how well the servers perform from the Timeline. Sometimes you can even see the number of outgoing connection limit on Windows by checking with Timeline. Modifying your request You can also modify your request before sending it out, commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[]},{"title":"Corporate Network Survival Guide - How to Connect with Another WiFi Router with the Same SSID","slug":"2016/corporate-network-survival-guide-how-to-connect-with-another-wifi-router-with-the-same-ssid","date":"2016-11-05T16:00:00.000Z","updated":"2025-07-01T14:53:00.321Z","comments":true,"path":"2016/corporate-network-survival-guide-how-to-connect-with-another-wifi-router-with-the-same-ssid/","permalink":"http://neo01.com/2016/corporate-network-survival-guide-how-to-connect-with-another-wifi-router-with-the-same-ssid/","excerpt":"","text":"If you find your notebook has WiFi connectivity in a certain area but loses it in some areas with full WiFi signal, you may be under a faulty WiFi router. There are many routers in an office that share the same SSID so that your notebook determines the best WiFi router to connect with. However, some may fail over time. The steps below may help if you connect to a faulty WiFi router nearby that allows you to connect but does not have proper Internet connectivity. First, use the command below to check which WiFi router you are connecting to: $ netsh wlan show interface Take a look at the BSSID under SSID. SSID is an ID that could represent more than one WiFi router, but BSSID is the unique ID for a specific WiFi router: There is 1 interface on the system: Name : Wireless Network Connection Description : Intel(R) Centrino(R) Advanced-N 6205 GUID : d827d652-b7f5-412e-xxxx-1235ea895d99 Physical address : aa:aa:aa:aa:aa:aa State : connected SSID : ABC BSSID : zz:zz:zz:zz:zz:zz Network type : Infrastructure Radio type : 802.11n Authentication : WPA2-Personal Cipher : CCMP Connection mode : Auto Connect Channel : 1 Receive rate (Mbps) : 144 Transmit rate (Mbps) : 144 Signal : 99% Profile : ABC Hosted network status : Not started The notebook is connected to the WiFi network ABC via router zz:zz:zz:zz:zz:zz. Are any other routers available under the SSID ABC? $ netsh wlan show all Look for SHOW NETWORK MODE=BSSID from the result. It shows all the routers available for WiFi network ABC: ======================================================================= ======================= SHOW NETWORKS MODE=BSSID ====================== ======================================================================= SSID 8 : ABC Network type : Infrastructure Authentication : WPA2-Personal Encryption : CCMP BSSID 1 : xx:xx:xx:xx:xx:xx Signal : 80% Radio type : 802.11n Channel : 40 Basic rates (Mbps) : 6 12 24 Other rates (Mbps) : 9 18 36 48 54 BSSID 2 : yy:yy:yy:yy:yy:yy Signal : 76% Radio type : 802.11n Channel : 161 Basic rates (Mbps) : 6 12 24 Other rates (Mbps) : 9 18 36 48 54 BSSID 3 : zz:zz:zz:zz:zz:zz Signal : 99% Radio type : 802.11n Channel : 11 Basic rates (Mbps) : 6.5 16 19.5 117 Other rates (Mbps) : 18 19.5 24 36 39 48 54 156 There are 3 BSSIDs under SSID ABC, which means there are 3 WiFi routers in range when you are trying to connect to the WiFi network named ABC. The WiFi router with the strongest signal to your notebook is used by default, as it can provide the best connectivity and transfer speed. However, the router with the strongest signal is not configured properly in this case. How do we force the notebook to connect to a router that is working although the signal is weaker? Let‚Äôs say we want to connect to the router with BSSID xx:xx:xx:xx:xx:xx. Forcing Connection with BSSID In Windows, we can go to the Control Panel and manage your WiFi settings. Right-click on the WiFi network that you want to connect with, and then select Properties. In the Wireless Network Properties, check Enable Intel connection settings, then click Configure. Select Mandatory Access Point, key in the BSSID that you want to connect with. Click OK to save the settings. It may be slower as you have poor connectivity due to poor signal strength, but you survive at least until someone fixes the issue. The above option only works for Intel WiFi adapters. I do not know if other WiFi drivers provide the feature for enforcing BSSID. Let me know if you have found it in another WiFi driver. commentBox('5765834504929280-proj')","categories":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"}],"tags":[{"name":"enterprise","slug":"enterprise","permalink":"http://neo01.com/tags/enterprise/"},{"name":"wifi","slug":"wifi","permalink":"http://neo01.com/tags/wifi/"}]},{"title":"Setup IMAP with SSL-only on iPhone/iPad","slug":"2016/setup-imap-with-ssl-only-on-iphoneipad","date":"2016-06-07T16:00:00.000Z","updated":"2025-07-01T14:55:13.958Z","comments":true,"path":"2016/setup-imap-with-ssl-only-on-iphoneipad/","permalink":"http://neo01.com/2016/setup-imap-with-ssl-only-on-iphoneipad/","excerpt":"","text":"img { width: 50% } You cannot setup IMAP on iPhone/iPad (iOS devices) with a server that only provides IMAP SSL (port 993). iOS detects the existence of IMAP by using non-SSL IMAP port, which is port 143. Here is the trick that helps you to set it up. First, and most important, you have to disable any possible Internet connection. The easiest way is to switch to airplane mode. Go to Settings, tap on Mail, Contacts, Calendars Tap on Add Account Tap on Other Enter basic information and tap Next It would ask for you incoming and outgoing mail server. Fill in the server information. Tap Next. It prompts for network connectivity. Tap OK to ignore it. Tap Next again. This time you can Save. Save again. Tap on the newly created account. Tap on Advanced. Enable Use SSL. Tap Account on top left to save changes and back to previous screen. Remember to switch back to normal mode from airplane mode before testing your email settings. commentBox('5765834504929280-proj')","categories":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"}]},{"title":"Setting up HTTP/2 with Apache and PHP on Debian 8","slug":"2016/http2-apache-php-debian-8","date":"2016-03-14T16:00:00.000Z","updated":"2025-07-01T14:54:20.370Z","comments":true,"path":"2016/http2-apache-php-debian-8/","permalink":"http://neo01.com/2016/http2-apache-php-debian-8/","excerpt":"","text":"My blog has been migrated to a new Debian Virtual Private Server (VPS). I was trying to enable SPDY on my new server, but support from Google for Apache is somewhat broken. The latest Chrome browser supports SPDY 3.1 only, but Google only provides SPDY 3.0 to the Apache module. I decided to skip SPDY and set up HTTP/2, as more major browsers are adopting HTTP/2. HTTP/1.1 makes multiple new connections Before HTTP/2, let‚Äôs have a brief idea of how slow HTTP/1.1 is, As you can see from the above chart, 21 new connections are trying to connect to the HTTP server simultaneously after the first request. The gray line in timelines represents time wasted on connecting to the server. My poor server can only serve 5 (first 3, 7th, and 8th) immediately. Overall, the client has to wait for 0.5-1s to start downloading content and reach the red goal line, which means the page is ready for rendering. HTTP/2 multiplexes from the original connection Below is HTTP/2. No more gray! This is because HTTP/2 keeps one single connection (multiplexing) and no time is wasted on handshaking connections. There are many more benefits from HTTP/2. Feel free to explore! Setup To set up HTTP/2 on Apache with PHP5 on Debian 8, I have to use Apache 2.4.18 from the testing channel as this version includes mod_http2. Meanwhile, mod_fcgid is used, but no NPN is required. Lastly, SSL is required for HTTP/2. Create /etc/apt/sources.list.d/testing.list deb http://mirror.steadfast.net/debian/ testing main contrib non-free deb-src http://mirror.steadfast.net/debian/ testing main contrib non-free deb http://ftp.us.debian.org/debian/ testing main contrib non-free deb-src http://ftp.us.debian.org/debian/ testing main contrib non-free Create /etc/apt/preferences.d/testing.pref Package: * Pin: release a=testing Pin-Priority: 750 Add below to site config file &lt;Location /> AddHandler fcgid-script .php Options +ExecCGI FcgidWrapper /usr/bin/php-cgi .php &lt;/Location> Run below commands # install Apache 2.4.18 from testing channel instead of 2.4.10 from stable sudo apt-get install apache2/testing apache2-data/testing apache2-bin/testing libnghttp2-14 libssl1.0.2 apache2-mpm-worker/testing # fcgid sudo apt-get libapache2-mod-fcgid # PHP from testing channel sudo apt-get install php-getid3/testing php-common/testing libphp-phpmailer/testing sudo a2enmod mpm_prefork sudo a2enmod fcgid sudo a2dismod php5 # finally, restart apache sudo apache2ctl restart Showing active HTTP/2 session Open chrome://net-internals/#events&amp;q=type:HTTP2_SESSION%20is:active from Chrome. You should see your site listed as in the below screenshot if you have set it up successfully, There are many tutorials about setting up SPDY that would suggest choosing SPDY from the dropdown. SPDY has been removed from the recent version of Chrome. About the new VPS I have been using Openshift.com for free for years. However, I have to switch to another service from Openshift because the free account doesn‚Äôt support CA-signed SSL. Paid users can add CA-signed SSL to their website. I do not mind paying, but they do not accept payment from Hong Kong. SSL is getting more important in search engine ranking, and it is required for an advanced protocol such as SPDY that can improve page loading performance. I chose a VPS from hostmada.com for USD 24 a year in the end. Enjoy! commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[]},{"title":"CLLocationManager Tutorial and Troubleshooting","slug":"2016/cllocationmanager-tutorial-and-troubleshooting","date":"2016-02-27T16:00:00.000Z","updated":"2025-07-01T14:51:37.508Z","comments":true,"path":"2016/cllocationmanager-tutorial-and-troubleshooting/","permalink":"http://neo01.com/2016/cllocationmanager-tutorial-and-troubleshooting/","excerpt":"","text":"Many developers complain that mobile application development is more difficult than web application development. They try to follow tutorials online precisely, but the mobile application still doesn‚Äôt work. This is because mobile platforms evolve rapidly, and tutorials just can‚Äôt keep up to date. My friend had the above situation and failed to get any location update from the location manager. He added the CoreLocation.framework library to Link Binary, Then, he put the code below, and it seems right. However, nothing comes out to the console. This is because, starting from iOS 8, you need to add NSLocationAlwaysUsageDescription or NSLocationWhenInUseUsageDescription, depending on requestAlwaysAuthorization (for background location) or requestWhenInUseAuthorization (location only when foreground). Let‚Äôs start to build and run the app. You should see the alert below if you start it for the first time. You should get an update after tapping Allow. You may need to adjust the location if you are running the Simulator by choosing a location from Debug -&gt; Location. I have uploaded the project to https://github.com/neoalienson/CLLocationManagerSample Good luck, and I hope this tutorial does not become outdated very soon! commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"},{"name":"Swift","slug":"Swift","permalink":"http://neo01.com/tags/Swift/"}]},{"title":"A just for fun benchmark test for C, Go, Java, Javascript, PHP, Python and Swift","slug":"2015/go-vs-swift-a-simple-benchmark-test","date":"2015-12-13T16:00:00.000Z","updated":"2025-09-30T15:18:01.062Z","comments":true,"path":"2015/go-vs-swift-a-simple-benchmark-test/","permalink":"http://neo01.com/2015/go-vs-swift-a-simple-benchmark-test/","excerpt":"","text":"The story begins with Swift and Go I like the beauty of Apple‚Äôs Swift language more than Google‚Äôs Go. Ok, it is subjective. Apple has Swift open source, I decided to run a simple benchmark test to have an objective idea for which language is better in terms of speed. Bubble sort in Go, package main import \"testing\" func BenchmarkBubbleSort(b *testing.B) &#123; array := [...]int&#123;83,86,77,15,93,35,86,92,49,21,62,27,90,59,63,26,40,26,72,36,11,68,67,29,82,30,62,23,67,35,29,2,22,58,69,67,93,56,11,42,29,73,21,19,84,37,98,24,15,70,13,26,91,80,56,73,62,70,96,81,5,25,84,27,36,5,46,29,13,57,24,95,82,45,14,67,34,64,43,50,87,8,76,78,88,84,3,51,54,99,32,60,76,68,39,12,26,86,94,39,95,70,34,78,67,1,97,2,17,92,52,56,1,80,86,41,65,89,44,19,40,29,31,17,97,71,81,75,9,27,67,56,97,53,86,65,6,83,19,24,28,71,32,29,3,19,70,68,8,15,40,49,96,23,18,45,46,51,21,55,79,88,64,28,41,50,93,0,34,64,24,14,87,56,43,91,27,65,59,36,32,51,37,28,75,7,74,21,58,95,29,37,35,93,18,28,43,11,28,29,76,4,43,63,13,38,6,40,4,18,28,88,69,17,17,96,24,43,70,83,90,99,72,25,44,90,5,39,54,86,69,82,42,64,97,7,55,4,48,11,22,28,99,43,46,68,40,22,11,10,5,1,61,30,78,5,20,36,44,26,22,65,8,16,82,58,24,37,62,24,0,36,52,99,79,50,68,71,73,31,81,30,33,94,60,63,99,81,99,96,59,73,13,68,90,95,26,66,84,40,90,84,76,42,36,7,45,56,79,18,87,12,48,72,59,9,36,10,42,87,6,1,13,72,21,55,19,99,21,4,39,11,40,67,5,28,27,50,84,58,20,24,22,69,96,81,30,84,92,72,72,50,25,85,22,99,40,42,98,13,98,90,24,90,9,81,19,36,32,55,94,4,79,69,73,76,50,55,60,42,79,84,93,5,21,67,4,13,61,54,26,59,44,2,2,6,84,21,42,68,28,89,72,8,58,98,36,8,53,48,3,33,33,48,90,54,67,46,68,29,0,46,88,97,49,90,3,33,63,97,53,92,86,25,52,96,75,88,57,29,36,60,14,21,60,4,28,27,50,48,56,2,94,97,99,43,39,2,28,3,0,81,47,38,59,51,35,34,39,92,15,27,4,29,49,64,85,29,43,35,77,0,38,71,49,89,67,88,92,95,43,44,29,90,82,40,41,69,26,32,61,42,60,17,23,61,81,9,90,25,96,67,77,34,90,26,24,57,14,68,5,58,12,86,0,46,26,94,16,52,78,29,46,90,47,70,51,80,31,93,57,27,12,86,14,55,12,90,12,79,10,69,89,74,55,41,20,33,87,88,38,66,70,84,56,17,6,60,49,37,5,59,17,18,45,83,73,58,73,37,89,83,7,78,57,14,71,29,0,59,18,38,25,88,74,33,57,81,93,58,70,99,17,39,69,63,22,94,73,47,31,62,82,90,92,91,57,15,21,57,74,91,47,51,31,21,37,40,54,30,98,25,81,16,16,2,31,39,96,4,38,80,18,21,70,62,12,79,77,85,36,4,76,83,7,59,57,44,99,11,27,50,36,60,18,5,63,49,44,11,5,34,91,75,55,14,89,68,93,18,5,82,22,82,17,30,93,74,26,93,86,53,43,74,14,13,79,77,62,75,88,19,10,32,94,17,46,35,37,91,53,43,73,28,25,91,10,18,17,36,63,55,90,58,30,4,71,61,33,85,89,73,4,51,5,50,68,3,85,6,95,39,49,20,67,26,63,77,96,81,65,60,36,55,70,18,11,42,32,96,79,21,70,84,72,27,34,40,83,72,98,30,63,47,50,30,73,14,59,22,47,24,82,35,32,4,54,43,98,86,40,78,59,62,62,83,41,48,23,24,72,22,54,35,21,57,65,47,71,76,69,18,1,3,53,33,7,59,28,6,97,20,84,8,34,98,91,76,98,15,52,71,89,59,6,10,16,24,9,39,0,78,9,53,81,14,38,89,26,67,47,23,87,31,32,22,81,75,50,79,90,54,50,31,13,57,94,81,81,3,20,33,82,81,87,15,96,25,4,22,92,51,97,32,34,81,6,15,57,8,95,99,62,97,83,76,54,77,9,87,32,82,21,66,63,60,82,11,85,86,85,30,90,83,14,76,16,20,92,25,28,39,25,90,36,60,18,43,37,28,82,21,10,55,88,25,15,70,37,53,8,22,83,50,57,97,27,26,69,71,51,49,10,28,39,98,88,10,93,77,90,76,99,52,31,87,77,99,57,66,52,17,41,35,68,98,84,95,76,5,66,28,54,28,8,93,78,97,55,72,74,45,0,25,97,83,12,27,82,21&#125; for c := 0; c &lt; 100; c++ &#123; for i := 0; i &lt; len(array); i++ &#123; for y := 0; y &lt; len(array) - 1; y++ &#123; if array[y+1] &lt; array[y] &#123; t := array[y] array[y] = array[y+1] array[y+1] = t &#125; &#125; &#125; &#125; &#125; Bubble sort in Swift, func benchmarkBubbleSort() &#123; var array : [Int] = [83,86,77,15,93,35,86,92,49,21,62,27,90,59,63,26,40,26,72,36,11,68,67,29,82,30,62,23,67,35,29,2,22,58,69,67,93,56,11,42,29,73,21,19,84,37,98,24,15,70,13,26,91,80,56,73,62,70,96,81,5,25,84,27,36,5,46,29,13,57,24,95,82,45,14,67,34,64,43,50,87,8,76,78,88,84,3,51,54,99,32,60,76,68,39,12,26,86,94,39,95,70,34,78,67,1,97,2,17,92,52,56,1,80,86,41,65,89,44,19,40,29,31,17,97,71,81,75,9,27,67,56,97,53,86,65,6,83,19,24,28,71,32,29,3,19,70,68,8,15,40,49,96,23,18,45,46,51,21,55,79,88,64,28,41,50,93,0,34,64,24,14,87,56,43,91,27,65,59,36,32,51,37,28,75,7,74,21,58,95,29,37,35,93,18,28,43,11,28,29,76,4,43,63,13,38,6,40,4,18,28,88,69,17,17,96,24,43,70,83,90,99,72,25,44,90,5,39,54,86,69,82,42,64,97,7,55,4,48,11,22,28,99,43,46,68,40,22,11,10,5,1,61,30,78,5,20,36,44,26,22,65,8,16,82,58,24,37,62,24,0,36,52,99,79,50,68,71,73,31,81,30,33,94,60,63,99,81,99,96,59,73,13,68,90,95,26,66,84,40,90,84,76,42,36,7,45,56,79,18,87,12,48,72,59,9,36,10,42,87,6,1,13,72,21,55,19,99,21,4,39,11,40,67,5,28,27,50,84,58,20,24,22,69,96,81,30,84,92,72,72,50,25,85,22,99,40,42,98,13,98,90,24,90,9,81,19,36,32,55,94,4,79,69,73,76,50,55,60,42,79,84,93,5,21,67,4,13,61,54,26,59,44,2,2,6,84,21,42,68,28,89,72,8,58,98,36,8,53,48,3,33,33,48,90,54,67,46,68,29,0,46,88,97,49,90,3,33,63,97,53,92,86,25,52,96,75,88,57,29,36,60,14,21,60,4,28,27,50,48,56,2,94,97,99,43,39,2,28,3,0,81,47,38,59,51,35,34,39,92,15,27,4,29,49,64,85,29,43,35,77,0,38,71,49,89,67,88,92,95,43,44,29,90,82,40,41,69,26,32,61,42,60,17,23,61,81,9,90,25,96,67,77,34,90,26,24,57,14,68,5,58,12,86,0,46,26,94,16,52,78,29,46,90,47,70,51,80,31,93,57,27,12,86,14,55,12,90,12,79,10,69,89,74,55,41,20,33,87,88,38,66,70,84,56,17,6,60,49,37,5,59,17,18,45,83,73,58,73,37,89,83,7,78,57,14,71,29,0,59,18,38,25,88,74,33,57,81,93,58,70,99,17,39,69,63,22,94,73,47,31,62,82,90,92,91,57,15,21,57,74,91,47,51,31,21,37,40,54,30,98,25,81,16,16,2,31,39,96,4,38,80,18,21,70,62,12,79,77,85,36,4,76,83,7,59,57,44,99,11,27,50,36,60,18,5,63,49,44,11,5,34,91,75,55,14,89,68,93,18,5,82,22,82,17,30,93,74,26,93,86,53,43,74,14,13,79,77,62,75,88,19,10,32,94,17,46,35,37,91,53,43,73,28,25,91,10,18,17,36,63,55,90,58,30,4,71,61,33,85,89,73,4,51,5,50,68,3,85,6,95,39,49,20,67,26,63,77,96,81,65,60,36,55,70,18,11,42,32,96,79,21,70,84,72,27,34,40,83,72,98,30,63,47,50,30,73,14,59,22,47,24,82,35,32,4,54,43,98,86,40,78,59,62,62,83,41,48,23,24,72,22,54,35,21,57,65,47,71,76,69,18,1,3,53,33,7,59,28,6,97,20,84,8,34,98,91,76,98,15,52,71,89,59,6,10,16,24,9,39,0,78,9,53,81,14,38,89,26,67,47,23,87,31,32,22,81,75,50,79,90,54,50,31,13,57,94,81,81,3,20,33,82,81,87,15,96,25,4,22,92,51,97,32,34,81,6,15,57,8,95,99,62,97,83,76,54,77,9,87,32,82,21,66,63,60,82,11,85,86,85,30,90,83,14,76,16,20,92,25,28,39,25,90,36,60,18,43,37,28,82,21,10,55,88,25,15,70,37,53,8,22,83,50,57,97,27,26,69,71,51,49,10,28,39,98,88,10,93,77,90,76,99,52,31,87,77,99,57,66,52,17,41,35,68,98,84,95,76,5,66,28,54,28,8,93,78,97,55,72,74,45,0,25,97,83,12,27,82,21] for _ in 1...100 &#123; for _ in 1 ... array.count &#123; for y in 0 ... (array.count - 2) &#123; if array[y+1] &lt; array[y] &#123; let t = array[y] array[y] = array[y+1] array[y+1] = t &#125; &#125; &#125; &#125; &#125; benchmarkBubbleSort() You can hardly tell which language is better from the above samples. However, the results is pretty easy to guess, $ sh run.sh testing: warning: no tests to run PASS BenchmarkBubbleSort-4 1000000000 0.09 ns/op ok _/home/neo/Documents/go_vs_swift **0.740s** Compiling swift 11 months ago fix Start test 2 years ago relocate real **5.85** user 5.75 sys 0.04 Swift completed in 5.85 seconds but Go only needs 0.74 seconds. Other languages Ok, I am curious to know the performance of other languages. Test runs 3 times for each language, and discard time from the first run. The result is average from the second and last run. It is enough as this test is just for fun. Warning: No optimization flag uses for all compilers/interpreters. You will experience huge differences once you apply those flag. I will not go deep into this topic. C #define SIZE 1000 int main() &#123; short array [SIZE]= &#123;83,86,77,15,93,35,86,92,49,21,62,27,90,59,63,26,40,26,72,36,11,68,67,29,82,30,62,23,67,35,29,2,22,58,69,67,93,56,11,42,29,73,21,19,84,37,98,24,15,70,13,26,91,80,56,73,62,70,96,81,5,25,84,27,36,5,46,29,13,57,24,95,82,45,14,67,34,64,43,50,87,8,76,78,88,84,3,51,54,99,32,60,76,68,39,12,26,86,94,39,95,70,34,78,67,1,97,2,17,92,52,56,1,80,86,41,65,89,44,19,40,29,31,17,97,71,81,75,9,27,67,56,97,53,86,65,6,83,19,24,28,71,32,29,3,19,70,68,8,15,40,49,96,23,18,45,46,51,21,55,79,88,64,28,41,50,93,0,34,64,24,14,87,56,43,91,27,65,59,36,32,51,37,28,75,7,74,21,58,95,29,37,35,93,18,28,43,11,28,29,76,4,43,63,13,38,6,40,4,18,28,88,69,17,17,96,24,43,70,83,90,99,72,25,44,90,5,39,54,86,69,82,42,64,97,7,55,4,48,11,22,28,99,43,46,68,40,22,11,10,5,1,61,30,78,5,20,36,44,26,22,65,8,16,82,58,24,37,62,24,0,36,52,99,79,50,68,71,73,31,81,30,33,94,60,63,99,81,99,96,59,73,13,68,90,95,26,66,84,40,90,84,76,42,36,7,45,56,79,18,87,12,48,72,59,9,36,10,42,87,6,1,13,72,21,55,19,99,21,4,39,11,40,67,5,28,27,50,84,58,20,24,22,69,96,81,30,84,92,72,72,50,25,85,22,99,40,42,98,13,98,90,24,90,9,81,19,36,32,55,94,4,79,69,73,76,50,55,60,42,79,84,93,5,21,67,4,13,61,54,26,59,44,2,2,6,84,21,42,68,28,89,72,8,58,98,36,8,53,48,3,33,33,48,90,54,67,46,68,29,0,46,88,97,49,90,3,33,63,97,53,92,86,25,52,96,75,88,57,29,36,60,14,21,60,4,28,27,50,48,56,2,94,97,99,43,39,2,28,3,0,81,47,38,59,51,35,34,39,92,15,27,4,29,49,64,85,29,43,35,77,0,38,71,49,89,67,88,92,95,43,44,29,90,82,40,41,69,26,32,61,42,60,17,23,61,81,9,90,25,96,67,77,34,90,26,24,57,14,68,5,58,12,86,0,46,26,94,16,52,78,29,46,90,47,70,51,80,31,93,57,27,12,86,14,55,12,90,12,79,10,69,89,74,55,41,20,33,87,88,38,66,70,84,56,17,6,60,49,37,5,59,17,18,45,83,73,58,73,37,89,83,7,78,57,14,71,29,0,59,18,38,25,88,74,33,57,81,93,58,70,99,17,39,69,63,22,94,73,47,31,62,82,90,92,91,57,15,21,57,74,91,47,51,31,21,37,40,54,30,98,25,81,16,16,2,31,39,96,4,38,80,18,21,70,62,12,79,77,85,36,4,76,83,7,59,57,44,99,11,27,50,36,60,18,5,63,49,44,11,5,34,91,75,55,14,89,68,93,18,5,82,22,82,17,30,93,74,26,93,86,53,43,74,14,13,79,77,62,75,88,19,10,32,94,17,46,35,37,91,53,43,73,28,25,91,10,18,17,36,63,55,90,58,30,4,71,61,33,85,89,73,4,51,5,50,68,3,85,6,95,39,49,20,67,26,63,77,96,81,65,60,36,55,70,18,11,42,32,96,79,21,70,84,72,27,34,40,83,72,98,30,63,47,50,30,73,14,59,22,47,24,82,35,32,4,54,43,98,86,40,78,59,62,62,83,41,48,23,24,72,22,54,35,21,57,65,47,71,76,69,18,1,3,53,33,7,59,28,6,97,20,84,8,34,98,91,76,98,15,52,71,89,59,6,10,16,24,9,39,0,78,9,53,81,14,38,89,26,67,47,23,87,31,32,22,81,75,50,79,90,54,50,31,13,57,94,81,81,3,20,33,82,81,87,15,96,25,4,22,92,51,97,32,34,81,6,15,57,8,95,99,62,97,83,76,54,77,9,87,32,82,21,66,63,60,82,11,85,86,85,30,90,83,14,76,16,20,92,25,28,39,25,90,36,60,18,43,37,28,82,21,10,55,88,25,15,70,37,53,8,22,83,50,57,97,27,26,69,71,51,49,10,28,39,98,88,10,93,77,90,76,99,52,31,87,77,99,57,66,52,17,41,35,68,98,84,95,76,5,66,28,54,28,8,93,78,97,55,72,74,45,0,25,97,83,12,27,82,21&#125; int t; for (int c = 0; c &lt; 100; c++) &#123; for (int i = 0; i &lt; SIZE; i++) &#123; for (int y = 0; y &lt; SIZE - 1; y++) &#123; if (array[y+1] &lt; array[y]) &#123; t = array[y]; array[y] = array[y+1]; array[y+1] = t; &#125; &#125; &#125; &#125; &#125; We compile C with gcc and clang. gcc complete the soring in 0.218, while clang in 0.193. Java (1.8.0) class Benchmark &#123; public static void main (String args[]) &#123; int[] array = new int[]&#123;83,86,77,15,93,35,86,92,49,21,62,27,90,59,63,26,40,26,72,36,11,68,67,29,82,30,62,23,67,35,29,2,22,58,69,67,93,56,11,42,29,73,21,19,84,37,98,24,15,70,13,26,91,80,56,73,62,70,96,81,5,25,84,27,36,5,46,29,13,57,24,95,82,45,14,67,34,64,43,50,87,8,76,78,88,84,3,51,54,99,32,60,76,68,39,12,26,86,94,39,95,70,34,78,67,1,97,2,17,92,52,56,1,80,86,41,65,89,44,19,40,29,31,17,97,71,81,75,9,27,67,56,97,53,86,65,6,83,19,24,28,71,32,29,3,19,70,68,8,15,40,49,96,23,18,45,46,51,21,55,79,88,64,28,41,50,93,0,34,64,24,14,87,56,43,91,27,65,59,36,32,51,37,28,75,7,74,21,58,95,29,37,35,93,18,28,43,11,28,29,76,4,43,63,13,38,6,40,4,18,28,88,69,17,17,96,24,43,70,83,90,99,72,25,44,90,5,39,54,86,69,82,42,64,97,7,55,4,48,11,22,28,99,43,46,68,40,22,11,10,5,1,61,30,78,5,20,36,44,26,22,65,8,16,82,58,24,37,62,24,0,36,52,99,79,50,68,71,73,31,81,30,33,94,60,63,99,81,99,96,59,73,13,68,90,95,26,66,84,40,90,84,76,42,36,7,45,56,79,18,87,12,48,72,59,9,36,10,42,87,6,1,13,72,21,55,19,99,21,4,39,11,40,67,5,28,27,50,84,58,20,24,22,69,96,81,30,84,92,72,72,50,25,85,22,99,40,42,98,13,98,90,24,90,9,81,19,36,32,55,94,4,79,69,73,76,50,55,60,42,79,84,93,5,21,67,4,13,61,54,26,59,44,2,2,6,84,21,42,68,28,89,72,8,58,98,36,8,53,48,3,33,33,48,90,54,67,46,68,29,0,46,88,97,49,90,3,33,63,97,53,92,86,25,52,96,75,88,57,29,36,60,14,21,60,4,28,27,50,48,56,2,94,97,99,43,39,2,28,3,0,81,47,38,59,51,35,34,39,92,15,27,4,29,49,64,85,29,43,35,77,0,38,71,49,89,67,88,92,95,43,44,29,90,82,40,41,69,26,32,61,42,60,17,23,61,81,9,90,25,96,67,77,34,90,26,24,57,14,68,5,58,12,86,0,46,26,94,16,52,78,29,46,90,47,70,51,80,31,93,57,27,12,86,14,55,12,90,12,79,10,69,89,74,55,41,20,33,87,88,38,66,70,84,56,17,6,60,49,37,5,59,17,18,45,83,73,58,73,37,89,83,7,78,57,14,71,29,0,59,18,38,25,88,74,33,57,81,93,58,70,99,17,39,69,63,22,94,73,47,31,62,82,90,92,91,57,15,21,57,74,91,47,51,31,21,37,40,54,30,98,25,81,16,16,2,31,39,96,4,38,80,18,21,70,62,12,79,77,85,36,4,76,83,7,59,57,44,99,11,27,50,36,60,18,5,63,49,44,11,5,34,91,75,55,14,89,68,93,18,5,82,22,82,17,30,93,74,26,93,86,53,43,74,14,13,79,77,62,75,88,19,10,32,94,17,46,35,37,91,53,43,73,28,25,91,10,18,17,36,63,55,90,58,30,4,71,61,33,85,89,73,4,51,5,50,68,3,85,6,95,39,49,20,67,26,63,77,96,81,65,60,36,55,70,18,11,42,32,96,79,21,70,84,72,27,34,40,83,72,98,30,63,47,50,30,73,14,59,22,47,24,82,35,32,4,54,43,98,86,40,78,59,62,62,83,41,48,23,24,72,22,54,35,21,57,65,47,71,76,69,18,1,3,53,33,7,59,28,6,97,20,84,8,34,98,91,76,98,15,52,71,89,59,6,10,16,24,9,39,0,78,9,53,81,14,38,89,26,67,47,23,87,31,32,22,81,75,50,79,90,54,50,31,13,57,94,81,81,3,20,33,82,81,87,15,96,25,4,22,92,51,97,32,34,81,6,15,57,8,95,99,62,97,83,76,54,77,9,87,32,82,21,66,63,60,82,11,85,86,85,30,90,83,14,76,16,20,92,25,28,39,25,90,36,60,18,43,37,28,82,21,10,55,88,25,15,70,37,53,8,22,83,50,57,97,27,26,69,71,51,49,10,28,39,98,88,10,93,77,90,76,99,52,31,87,77,99,57,66,52,17,41,35,68,98,84,95,76,5,66,28,54,28,8,93,78,97,55,72,74,45,0,25,97,83,12,27,82,21&#125;; int t; for (int c = 0; c &lt; 100; c++) &#123; for (int i = 0; i &lt; array.length; i++) &#123; for (int y = 0; y &lt; array.length - 1; y++) &#123; if (array[y+1] &lt; array[y]) &#123; t = array[y]; array[y] = array[y+1]; array[y+1] = t; &#125; &#125; &#125; &#125; &#125; &#125; Javascript (nodejs v0.10.25) array = [83,86,77,15,93,35,86,92,49,21,62,27,90,59,63,26,40,26,72,36,11,68,67, 29,82,30,62,23,67,35,29,2,22,58,69,67,93,56,11,42,29,73,21,19,84,37,98,24, 15,70,13,26,91,80,56,73,62,70,96,81,5,25,84,27,36,5,46,29,13,57,24,95,82,45, 14,67,34,64,43,50,87,8,76,78,88,84,3,51,54,99,32,60,76,68,39,12,26,86,94,39, 95,70,34,78,67,1,97,2,17,92,52,56,1,80,86,41,65,89,44,19,40,29,31,17,97,71,81, 75,9,27,67,56,97,53,86,65,6,83,19,24,28,71,32,29,3,19,70,68,8,15,40,49,96,23, 18,45,46,51,21,55,79,88,64,28,41,50,93,0,34,64,24,14,87,56,43,91,27,65,59,36, 32,51,37,28,75,7,74,21,58,95,29,37,35,93,18,28,43,11,28,29,76,4,43,63,13,38, 6,40,4,18,28,88,69,17,17,96,24,43,70,83,90,99,72,25,44,90,5,39,54,86,69,82,42, 64,97,7,55,4,48,11,22,28,99,43,46,68,40,22,11,10,5,1,61,30,78,5,20,36,44,26, 22,65,8,16,82,58,24,37,62,24,0,36,52,99,79,50,68,71,73,31,81,30,33,94,60,63, 99,81,99,96,59,73,13,68,90,95,26,66,84,40,90,84,76,42,36,7,45,56,79,18,87,12, 48,72,59,9,36,10,42,87,6,1,13,72,21,55,19,99,21,4,39,11,40,67,5,28,27,50,84, 58,20,24,22,69,96,81,30,84,92,72,72,50,25,85,22,99,40,42,98,13,98,90,24,90,9, 81,19,36,32,55,94,4,79,69,73,76,50,55,60,42,79,84,93,5,21,67,4,13,61,54,26, 59,44,2,2,6,84,21,42,68,28,89,72,8,58,98,36,8,53,48,3,33,33,48,90,54,67,46, 68,29,0,46,88,97,49,90,3,33,63,97,53,92,86,25,52,96,75,88,57,29,36,60,14,21, 60,4,28,27,50,48,56,2,94,97,99,43,39,2,28,3,0,81,47,38,59,51,35,34,39,92,15, 27,4,29,49,64,85,29,43,35,77,0,38,71,49,89,67,88,92,95,43,44,29,90,82,40,41, 69,26,32,61,42,60,17,23,61,81,9,90,25,96,67,77,34,90,26,24,57,14,68,5,58,12, 86,0,46,26,94,16,52,78,29,46,90,47,70,51,80,31,93,57,27,12,86,14,55,12,90,12, 79,10,69,89,74,55,41,20,33,87,88,38,66,70,84,56,17,6,60,49,37,5,59,17,18,45, 83,73,58,73,37,89,83,7,78,57,14,71,29,0,59,18,38,25,88,74,33,57,81,93,58,70, 99,17,39,69,63,22,94,73,47,31,62,82,90,92,91,57,15,21,57,74,91,47,51,31,21,37, 40,54,30,98,25,81,16,16,2,31,39,96,4,38,80,18,21,70,62,12,79,77,85,36,4,76,83, 7,59,57,44,99,11,27,50,36,60,18,5,63,49,44,11,5,34,91,75,55,14,89,68,93,18,5, 82,22,82,17,30,93,74,26,93,86,53,43,74,14,13,79,77,62,75,88,19,10,32,94,17,46, 35,37,91,53,43,73,28,25,91,10,18,17,36,63,55,90,58,30,4,71,61,33,85,89,73,4, 51,5,50,68,3,85,6,95,39,49,20,67,26,63,77,96,81,65,60,36,55,70,18,11,42,32,96, 79,21,70,84,72,27,34,40,83,72,98,30,63,47,50,30,73,14,59,22,47,24,82,35,32,4, 54,43,98,86,40,78,59,62,62,83,41,48,23,24,72,22,54,35,21,57,65,47,71,76,69, 18,1,3,53,33,7,59,28,6,97,20,84,8,34,98,91,76,98,15,52,71,89,59,6,10,16,24,9, 39,0,78,9,53,81,14,38,89,26,67,47,23,87,31,32,22,81,75,50,79,90,54,50,31,13, 57,94,81,81,3,20,33,82,81,87,15,96,25,4,22,92,51,97,32,34,81,6,15,57,8,95,99, 62,97,83,76,54,77,9,87,32,82,21,66,63,60,82,11,85,86,85,30,90,83,14,76,16,20, 92,25,28,39,25,90,36,60,18,43,37,28,82,21,10,55,88,25,15,70,37,53,8,22,83,50, 57,97,27,26,69,71,51,49,10,28,39,98,88,10,93,77,90,76,99,52,31,87,77,99,57, 66,52,17,41,35,68,98,84,95,76,5,66,28,54,28,8,93,78,97,55,72,74,45,0,25,97,83,12,27,82,21]; for (c = 0; c &lt; 100; c++) &#123; for (i = 0; i &lt; array.length; i++) &#123; for (y = 0; y &lt; array.length - 1; y++) &#123; if (array[y+1] &lt; array[y]) &#123; t = array[y]; array[y] = array[y+1]; array[y+1] = t; &#125; &#125; &#125; &#125; PHP (5.6.11-1ubuntu3.1) &lt;?PHP $array = array(83,86,77,15,93,35,86,92,49,21,62,27,90,59,63,26,40,26,72,36,11,68,67,29,82,30,62,23,67,35,29,2,22,58,69,67,93,56,11,42,29,73,21,19,84,37,98,24,15,70,13,26,91,80,56,73,62,70,96,81,5,25,84,27,36,5,46,29,13,57,24,95,82,45,14,67,34,64,43,50,87,8,76,78,88,84,3,51,54,99,32,60,76,68,39,12,26,86,94,39,95,70,34,78,67,1,97,2,17,92,52,56,1,80,86,41,65,89,44,19,40,29,31,17,97,71,81,75,9,27,67,56,97,53,86,65,6,83,19,24,28,71,32,29,3,19,70,68,8,15,40,49,96,23,18,45,46,51,21,55,79,88,64,28,41,50,93,0,34,64,24,14,87,56,43,91,27,65,59,36,32,51,37,28,75,7,74,21,58,95,29,37,35,93,18,28,43,11,28,29,76,4,43,63,13,38,6,40,4,18,28,88,69,17,17,96,24,43,70,83,90,99,72,25,44,90,5,39,54,86,69,82,42,64,97,7,55,4,48,11,22,28,99,43,46,68,40,22,11,10,5,1,61,30,78,5,20,36,44,26,22,65,8,16,82,58,24,37,62,24,0,36,52,99,79,50,68,71,73,31,81,30,33,94,60,63,99,81,99,96,59,73,13,68,90,95,26,66,84,40,90,84,76,42,36,7,45,56,79,18,87,12,48,72,59,9,36,10,42,87,6,1,13,72,21,55,19,99,21,4,39,11,40,67,5,28,27,50,84,58,20,24,22,69,96,81,30,84,92,72,72,50,25,85,22,99,40,42,98,13,98,90,24,90,9,81,19,36,32,55,94,4,79,69,73,76,50,55,60,42,79,84,93,5,21,67,4,13,61,54,26,59,44,2,2,6,84,21,42,68,28,89,72,8,58,98,36,8,53,48,3,33,33,48,90,54,67,46,68,29,0,46,88,97,49,90,3,33,63,97,53,92,86,25,52,96,75,88,57,29,36,60,14,21,60,4,28,27,50,48,56,2,94,97,99,43,39,2,28,3,0,81,47,38,59,51,35,34,39,92,15,27,4,29,49,64,85,29,43,35,77,0,38,71,49,89,67,88,92,95,43,44,29,90,82,40,41,69,26,32,61,42,60,17,23,61,81,9,90,25,96,67,77,34,90,26,24,57,14,68,5,58,12,86,0,46,26,94,16,52,78,29,46,90,47,70,51,80,31,93,57,27,12,86,14,55,12,90,12,79,10,69,89,74,55,41,20,33,87,88,38,66,70,84,56,17,6,60,49,37,5,59,17,18,45,83,73,58,73,37,89,83,7,78,57,14,71,29,0,59,18,38,25,88,74,33,57,81,93,58,70,99,17,39,69,63,22,94,73,47,31,62,82,90,92,91,57,15,21,57,74,91,47,51,31,21,37,40,54,30,98,25,81,16,16,2,31,39,96,4,38,80,18,21,70,62,12,79,77,85,36,4,76,83,7,59,57,44,99,11,27,50,36,60,18,5,63,49,44,11,5,34,91,75,55,14,89,68,93,18,5,82,22,82,17,30,93,74,26,93,86,53,43,74,14,13,79,77,62,75,88,19,10,32,94,17,46,35,37,91,53,43,73,28,25,91,10,18,17,36,63,55,90,58,30,4,71,61,33,85,89,73,4,51,5,50,68,3,85,6,95,39,49,20,67,26,63,77,96,81,65,60,36,55,70,18,11,42,32,96,79,21,70,84,72,27,34,40,83,72,98,30,63,47,50,30,73,14,59,22,47,24,82,35,32,4,54,43,98,86,40,78,59,62,62,83,41,48,23,24,72,22,54,35,21,57,65,47,71,76,69,18,1,3,53,33,7,59,28,6,97,20,84,8,34,98,91,76,98,15,52,71,89,59,6,10,16,24,9,39,0,78,9,53,81,14,38,89,26,67,47,23,87,31,32,22,81,75,50,79,90,54,50,31,13,57,94,81,81,3,20,33,82,81,87,15,96,25,4,22,92,51,97,32,34,81,6,15,57,8,95,99,62,97,83,76,54,77,9,87,32,82,21,66,63,60,82,11,85,86,85,30,90,83,14,76,16,20,92,25,28,39,25,90,36,60,18,43,37,28,82,21,10,55,88,25,15,70,37,53,8,22,83,50,57,97,27,26,69,71,51,49,10,28,39,98,88,10,93,77,90,76,99,52,31,87,77,99,57,66,52,17,41,35,68,98,84,95,76,5,66,28,54,28,8,93,78,97,55,72,74,45,0,25,97,83,12,27,82,21); for ($c = 0; $c &lt; 100; $c++) &#123; for ($i = 0; $i &lt; count($array); $i++) &#123; for ($y = 0; $y &lt; count($array) - 1; $y++) &#123; if ($array[$y+1] &lt; $array[$y]) &#123; $t = $array[$y]; $array[$y] = $array[$y+1]; $array[$y+1] = $t; &#125; &#125; &#125; &#125; ?> Python (Python 2.7.10) from array import * array_ = array('i', [83,86,77,15,93,35,86,92,49,21,62,27,90,59,63,26,40,26,72,36,11,68,67,29,82,30,62,23,67,35,29,2,22,58,69,67,93,56,11,42,29,73,21,19,84,37,98,24,15,70,13,26,91,80,56,73,62,70,96,81,5,25,84,27,36,5,46,29,13,57,24,95,82,45,14,67,34,64,43,50,87,8,76,78,88,84,3,51,54,99,32,60,76,68,39,12,26,86,94,39,95,70,34,78,67,1,97,2,17,92,52,56,1,80,86,41,65,89,44,19,40,29,31,17,97,71,81,75,9,27,67,56,97,53,86,65,6,83,19,24,28,71,32,29,3,19,70,68,8,15,40,49,96,23,18,45,46,51,21,55,79,88,64,28,41,50,93,0,34,64,24,14,87,56,43,91,27,65,59,36,32,51,37,28,75,7,74,21,58,95,29,37,35,93,18,28,43,11,28,29,76,4,43,63,13,38,6,40,4,18,28,88,69,17,17,96,24,43,70,83,90,99,72,25,44,90,5,39,54,86,69,82,42,64,97,7,55,4,48,11,22,28,99,43,46,68,40,22,11,10,5,1,61,30,78,5,20,36,44,26,22,65,8,16,82,58,24,37,62,24,0,36,52,99,79,50,68,71,73,31,81,30,33,94,60,63,99,81,99,96,59,73,13,68,90,95,26,66,84,40,90,84,76,42,36,7,45,56,79,18,87,12,48,72,59,9,36,10,42,87,6,1,13,72,21,55,19,99,21,4,39,11,40,67,5,28,27,50,84,58,20,24,22,69,96,81,30,84,92,72,72,50,25,85,22,99,40,42,98,13,98,90,24,90,9,81,19,36,32,55,94,4,79,69,73,76,50,55,60,42,79,84,93,5,21,67,4,13,61,54,26,59,44,2,2,6,84,21,42,68,28,89,72,8,58,98,36,8,53,48,3,33,33,48,90,54,67,46,68,29,0,46,88,97,49,90,3,33,63,97,53,92,86,25,52,96,75,88,57,29,36,60,14,21,60,4,28,27,50,48,56,2,94,97,99,43,39,2,28,3,0,81,47,38,59,51,35,34,39,92,15,27,4,29,49,64,85,29,43,35,77,0,38,71,49,89,67,88,92,95,43,44,29,90,82,40,41,69,26,32,61,42,60,17,23,61,81,9,90,25,96,67,77,34,90,26,24,57,14,68,5,58,12,86,0,46,26,94,16,52,78,29,46,90,47,70,51,80,31,93,57,27,12,86,14,55,12,90,12,79,10,69,89,74,55,41,20,33,87,88,38,66,70,84,56,17,6,60,49,37,5,59,17,18,45,83,73,58,73,37,89,83,7,78,57,14,71,29,0,59,18,38,25,88,74,33,57,81,93,58,70,99,17,39,69,63,22,94,73,47,31,62,82,90,92,91,57,15,21,57,74,91,47,51,31,21,37,40,54,30,98,25,81,16,16,2,31,39,96,4,38,80,18,21,70,62,12,79,77,85,36,4,76,83,7,59,57,44,99,11,27,50,36,60,18,5,63,49,44,11,5,34,91,75,55,14,89,68,93,18,5,82,22,82,17,30,93,74,26,93,86,53,43,74,14,13,79,77,62,75,88,19,10,32,94,17,46,35,37,91,53,43,73,28,25,91,10,18,17,36,63,55,90,58,30,4,71,61,33,85,89,73,4,51,5,50,68,3,85,6,95,39,49,20,67,26,63,77,96,81,65,60,36,55,70,18,11,42,32,96,79,21,70,84,72,27,34,40,83,72,98,30,63,47,50,30,73,14,59,22,47,24,82,35,32,4,54,43,98,86,40,78,59,62,62,83,41,48,23,24,72,22,54,35,21,57,65,47,71,76,69,18,1,3,53,33,7,59,28,6,97,20,84,8,34,98,91,76,98,15,52,71,89,59,6,10,16,24,9,39,0,78,9,53,81,14,38,89,26,67,47,23,87,31,32,22,81,75,50,79,90,54,50,31,13,57,94,81,81,3,20,33,82,81,87,15,96,25,4,22,92,51,97,32,34,81,6,15,57,8,95,99,62,97,83,76,54,77,9,87,32,82,21,66,63,60,82,11,85,86,85,30,90,83,14,76,16,20,92,25,28,39,25,90,36,60,18,43,37,28,82,21,10,55,88,25,15,70,37,53,8,22,83,50,57,97,27,26,69,71,51,49,10,28,39,98,88,10,93,77,90,76,99,52,31,87,77,99,57,66,52,17,41,35,68,98,84,95,76,5,66,28,54,28,8,93,78,97,55,72,74,45,0,25,97,83,12,27,82,21] for c in range(0, 100): for i in range(0, len(array_)): for y in range(0, len(array_) - 1): if array_[y+1] &lt; array_[y]: t = array_[y] array_[y] = array_[y+1] array_[y+1] = t Java is the winner! At least for the dummy who doesn‚Äôt know how to set optimization flag. Results Warning: No optimization flag uses for all compilers/interpreters. You will experience huge differences once you apply those flag. I will not go deep into this topic. var chart = echarts.init(document.getElementById('7kqqby8c204')); chart.setOption({\"title\":{\"text\":\"Time (ms) of bubble sort in different language, lower is better\"},\"animation\":true,\"tooltip\":{\"trigger\":\"axis\"},\"xAxis\":{\"data\":[\"Swift\",\"Go\",\"C (gcc)\",\"C (clang)\"]},\"yAxis\":{},\"series\":[{\"name\":\"Value\",\"type\":\"bar\",\"data\":[\"5850\",\"740\",\"218\",\"193\"]}]}); Sources in GitHub https://github.com/neoalienson/c_java_javascript_go_php_python_swift commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"Apple","slug":"Apple","permalink":"http://neo01.com/tags/Apple/"},{"name":"Swift","slug":"Swift","permalink":"http://neo01.com/tags/Swift/"},{"name":"nodejs","slug":"nodejs","permalink":"http://neo01.com/tags/nodejs/"},{"name":"Java","slug":"Java","permalink":"http://neo01.com/tags/Java/"},{"name":"C#","slug":"C","permalink":"http://neo01.com/tags/C/"},{"name":"Go","slug":"Go","permalink":"http://neo01.com/tags/Go/"},{"name":"PHP","slug":"PHP","permalink":"http://neo01.com/tags/PHP/"},{"name":"Python","slug":"Python","permalink":"http://neo01.com/tags/Python/"}]},{"title":"Introducing try-catch from Apple Swift 2, with sandbox on web by IBM Bluemix","slug":"2015/apple-swift-2-sandbox-on-web-by-ibm","date":"2015-12-06T16:00:00.000Z","updated":"2025-07-01T14:43:15.888Z","comments":true,"path":"2015/apple-swift-2-sandbox-on-web-by-ibm/","permalink":"http://neo01.com/2015/apple-swift-2-sandbox-on-web-by-ibm/","excerpt":"","text":"Apple Swift is a programming language for iOS application development at the beginning. It can be found on Mac‚Äôs Xcode. Now Apple Swift 2 is hosted on IBM Bluemix‚Äôs website (http://swiftlang.ng.bluemix.net). The Swift version is 2.2-dev as of today, Swift version 2.2-dev (LLVM 46be9ff861, Clang 4deb154edc, Swift 778f82939c) Target: x86_64-unknown-linux-gnu There are many language features introduced in Swift 2. Let‚Äôs begin with the elegant try-catch feature from a sample code, /* Basic Fibonacci function in swift. Demonstrates func calls and recursion. */ func Fibonacci(i: Int) throws -> Int &#123; if i &lt;= 2 &#123; return 1 &#125; else &#123; return **try** Fibonacci(i - 1) + Fibonacci(i - 2) &#125; &#125; do &#123; try print(Fibonacci(22)) /* do something that doesn't throw in the middle */ // the keyword reminds you below function will throw try print(Fibonacci(11)) &#125; catch &#123; print(\"error\") &#125; The function doesn‚Äôt really throw anything, but you can see the function calls that throw are prefixed with try. The evolution speed of Swift language seems a little bit faster than Google‚Äôs Go language on this feature. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"Apple","slug":"Apple","permalink":"http://neo01.com/tags/Apple/"},{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"},{"name":"Swift","slug":"Swift","permalink":"http://neo01.com/tags/Swift/"}]},{"title":"Setup script after WD Cloud firmware updated","slug":"2015/setup-script-after-wd-cloud-firmware-updated","date":"2015-10-18T16:00:00.000Z","updated":"2025-07-01T14:50:03.385Z","comments":true,"path":"2015/setup-script-after-wd-cloud-firmware-updated/","permalink":"http://neo01.com/2015/setup-script-after-wd-cloud-firmware-updated/","excerpt":"","text":"You lose all custom configurations whenever the WD Cloud firmware has updated. Below scripts help me to revert my settings, Update SSH server to use public key authentication Login to root on the WD Cloud and create .ssh on the server side, mkdir ~/.ssh Upload public key from your machine to the server, Replace nas with your host/IP address. scp ~/.ssh/id_rsa.pub root@_**nas**_:~/.ssh/authorized_keys on the server-side chmod go-rwx ~/.ssh sed -i.bak \"s/PubkeyAuthentication no/PubkeyAuthentication yes/\" /etc/ssh/sshd_config /etc/init.d/ssh restart You can ssh to the nas without entering the password. In short, # run it from your own machine # prerequisites, you have generated a public/private key pair in ~/.ssh # configuration export TARGET_SERVER=nas ssh root@$TARGET_SERVER mkdir ~/.ssh Upload public key from your machine to the server, Replace nas with your host/IP address. scp ~/.ssh/id_rsa.pub root@nas:~/.ssh/authorized_keys on the server-side ssh root@$TARGET_SERVER &lt;&lt; EOF chmod go-rwx ~/.ssh sed -i.bak \"s/PubkeyAuthentication no/PubkeyAuthentication yes/\" /etc/ssh/sshd_config /etc/init.d/ssh restart EOF If you do not want to build packages, you can download from https://app.box.com/wdcloud. I will try to keep it up-to-date. Script to build general packages Below script build packages such as transmission, joe, etc # build useful component base on my personal preference WD Cloud (ubuntu, arm) ### configuration ### # your WD cloud host name export SERVER_HOST=nas # target cloud version WD_VERSION=04.04.02-105 ### execute ### # download and unpack the gpl source and build tools wget http://download.wdc.com/gpl/gpl-source-wd_my_cloud-$WD_VERSION.zip rm -rf packages unzip gpl-source-wd_my_cloud-$WD_VERSION.zip packages/build_tools/debian/* mkdir 64k-wheezy cp -R packages/build_tools/debian/* ./64k-wheezy echo '#!/bin/bash' > 64k-wheezy/build.sh echo './build-armhf-package.sh --pagesize=64k $1 wheezy' >> 64k-wheezy/build.sh chmod a+x 64k-wheezy/build.sh cd 64k-wheezy ./setup.sh bootstrap/wheezy-bootstrap_1.24.14_armhf.tar.gz build mv build/usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static_orig cp /usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static # override build/etc/apt/sources.list echo \"deb http://security.debian.org/ wheezy/updates main contrib non-free\" > build/etc/apt/sources.list echo \"deb-src http://security.debian.org/ wheezy/updates main contrib non-free\" >> build/etc/apt/sources.list echo \"deb http://ftp.debian.org/debian wheezy-updates main contrib non-free\" >> build/etc/apt/sources.list echo \"deb-src http://ftp.debian.org/debian wheezy-updates main contrib non-free\" >> build/etc/apt/sources.list echo \"deb http://ftp.debian.org/debian wheezy main contrib non-free\" >> build/etc/apt/sources.list echo \"deb-src http://ftp.debian.org/debian wheezy main contrib non-free\" >> build/etc/apt/sources.list # optional until you need to use backports packages echo \"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free\" >> build/etc/apt/sources.list echo \"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free\" >> build/etc/apt/sources.list cp /etc/resolv.conf build/etc # exiv2 ./build.sh exiv2 # editor ./build.sh joe scp build/root/joe_*.deb root@$SERVER_HOST:~ ssh root@$SERVER_HOST dpkg -i joe_*.deb # htop ./build.sh htop scp build/root/htop_*.deb root@$SERVER_HOST:~ ssh root@$SERVER_HOST dpkg -i htop_*.deb # unrar ./build.sh unrar scp build/root/unrar_*.deb root@$SERVER_HOST:~ ssh root@$SERVER_HOST dpkg -i unrar_*.deb # transmission # below build process will be finished after an hour or so ./build.sh libcurl3-gnutls ./build.sh libminiupnpc5 ./build.sh libnatpmp1 ./build.sh transmission-common ./build.sh transmission-daemon # upload scp build/root/libcurl3-gnutls_*.deb root@$SERVER_HOST:~ scp build/root/libminiupnpc5_*.deb root@$SERVER_HOST:~ scp build/root/libnatpmp1_*.deb root@$SERVER_HOST:~ scp build/root/transmission-common_*.deb root@$SERVER_HOST:~ scp build/root/transmission-daemon_*.deb root@$SERVER_HOST:~ # install ssh root@$SERVER_HOST dpkg -i libcurl3-gnutls_*.deb ssh root@$SERVER_HOST dpkg -i libminiupnpc5_*.deb ssh root@$SERVER_HOST dpkg -i libnatpmp1_*.deb ssh root@$SERVER_HOST dpkg -i transmission-common_*.deb ssh root@$SERVER_HOST dpkg -i transmission-daemon_*.deb # the transmission daemon / web should be started # if not, /etc/init.d/transmission-daemon start # in case you have backup settings, upload settings and restart # /etc/init.d/transmission-daemon restart # nodejs ./build.sh libc-ares2 scp build/root/libc-ares2_*.deb root@$SERVER_HOST:~ ssh root@$SERVER_HOST dpkg -i libc-ares2_*.deb # it takes an hour to build ./build.sh libv8 scp build/root/libv8-3*.deb root@$SERVER_HOST:~ ssh root@$SERVER_HOST dpkg -i libv8-3*.deb wget https://nodejs.org/dist/v4.2.1/node-v4.2.1-linux-armv7l.tar.gz tar xvfz node-v4.2.1-linux-armv7l.tar.gz cd node-v4.2.1-linux-armv7l commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"arm","slug":"arm","permalink":"http://neo01.com/tags/arm/"},{"name":"wdcloud","slug":"wdcloud","permalink":"http://neo01.com/tags/wdcloud/"}]},{"title":"MerchCircle","slug":"2015/merchcirlce","date":"2015-05-04T16:00:00.000Z","updated":"2025-07-01T14:47:46.210Z","comments":true,"path":"2015/merchcirlce/","permalink":"http://neo01.com/2015/merchcirlce/","excerpt":"","text":"This is the application we built for the MasterCode hackathon 2015 Hong Kong. The application was submitted to http://www.hackathon.io/sellspree. The source code for this project can be found at https://github.com/neoalienson/merchcircle-app (iOS) and https://github.com/neoalienson/merchcircle-web (Web and Backend). The Web and backend hosts were on Heroku. MerchCircle is the simplest solution for selling things to your friends. By tapping on ‚ÄòSell something‚Äô, you can become a shop owner. You will be required to use MasterCard credit numbers, as we utilize the MasterCard money transfer API to receive money upon transaction completion. After sharing the item link to your friend, your friend can pay you directly through our web frontend, Cha-ching! commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"},{"name":"Swift","slug":"Swift","permalink":"http://neo01.com/tags/Swift/"},{"name":"hackathon","slug":"hackathon","permalink":"http://neo01.com/tags/hackathon/"},{"name":"Java","slug":"Java","permalink":"http://neo01.com/tags/Java/"}]},{"title":"Mastercode/Mastercard Hackathon 2015 @ Hong Kong","slug":"2015/mastercode-mastercard-hackathon-2015-hong-kong","date":"2015-04-22T16:00:00.000Z","updated":"2025-07-01T14:46:15.440Z","comments":true,"path":"2015/mastercode-mastercard-hackathon-2015-hong-kong/","permalink":"http://neo01.com/2015/mastercode-mastercard-hackathon-2015-hong-kong/","excerpt":"","text":"My first hackathon I joined my first hackathon, hosted by AngelHack at MasterCard‚Äôs in Hong Kong, in March 2015. This event attracted around 150 participants from both local and overseas locations. The maximum team size was five persons, so there could be over 50 teams. The event started at 9 am, but teams from overseas began lining up as early as 7:30 am because the first six teams in line would get their own team room for the event. Participants were free to join the event as individuals and attempt to form or join a team on that day. What is a hackathon? One of my teammates had participated in several hackathons, and she told me that a hackathon is an event where you use your programming and analytical skills to solve a specific problem during the event. An example would be developing an algorithm to solve a Sudoku puzzle with minimal code statements. The Mastercode hackathon was somewhat different from others. The Mastercard API has been open to the public for years, allowing every team to take advantage of brainstorming their idea or even starting development before the event started. The goal was to develop a business and a demo using the Mastercard API. Unlike other hackathons, the demo does not need to be completed by the end of the event, so technical skills were not as important as business ideas and graphic design in this hackathon. Joining as an individual Individuals can give a pitch about their idea or skill, and try to form or join a team on the first day morning for this event. However, not many participants gave their pitch, and none of them introduced themselves as many teams had already formed before the event started. Once a new team is formed, they need to brainstorm an idea. Therefore, joining as an individual would face a significant disadvantage, as they would face difficulties in finding team members and would need to spend valuable time on pitching and brainstorming before starting work. On the other hand, you can make a new friend and enjoy the process of working closely with a team. A brief presentation about Mastercard‚Äôs API was given to those who didn‚Äôt read the documentation in the morning. The host announced that there is a ‚Äòsecret‚Äô API from the public API, which wasn‚Äôt actually secret at all. To do well in the event, it‚Äôs essential to be well-prepared if you want to win. My team As you may have noticed, our team has a female member, who is a young designer from Toronto, Canada. The other team members are developers. We are a team dominated by IT professionals, with a focus on delivery rather than creativity. Judging from 2-minute pitch Every team demonstrates their product within a 2-minute presentation in front of five judges. The judges then have one minute to raise questions to the team. It seems to me that most judges have very little idea about Mastercard‚Äôs APIs. They can only ask common and simple questions such as ‚ÄòHow many Mastercard APIs have you used?‚Äô, ‚ÄòWhat is the business model?‚Äô Sometimes, the judges don‚Äôt even have any questions. It would be better if the judges had a deeper understanding of the API, allowing them to critically evaluate the project‚Äôs feasibility. http://angelhack.com/masteryourcard-masters-of-code-hong-kong If you want to test whether you have the ability to start a startup, you should join the event. MerchCircle is the product we developed on that day. You can learn more at #mastersofcode. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"},{"name":"hackathon","slug":"hackathon","permalink":"http://neo01.com/tags/hackathon/"}]},{"title":"Cross-Building for WD Cloud and Node.js","slug":"2015/cross-building-for-wd-cloud-and-nodejs","date":"2015-03-13T16:00:00.000Z","updated":"2025-09-30T14:58:28.103Z","comments":true,"path":"2015/cross-building-for-wd-cloud-and-nodejs/","permalink":"http://neo01.com/2015/cross-building-for-wd-cloud-and-nodejs/","excerpt":"","text":"WD Cloud runs Debian Linux on ARM. When you build applications for other architectures, you need to use cross-building. I have successfully built a package on Ubuntu 14 by following this post with a few notes. If you see an error message like: Err http://ftp.debian.org wheezy-updates Release.gpg Could not resolve 'ftp.debian.org' Then, copy /etc/resolv.conf into build/etc, e.g., sudo cp /etc/resolv.conf build/etc Please check here for a list of WD Cloud firmware images. Summary of Cross-Building with Wheezy for WD Cloud Firmware Version 4 or Above # required for cross-building apt-get install qemu-user-static apt-get install binfmt-support # folder for building mkdir wdmc-build cd wdmc-build # download location can be found in http://support.wdc.com/product/download.asp?groupid=904&amp;amp;lang=en wget http://download.wdc.com/gpl/gpl-source-wd_my_cloud-04.01.03-421.zip unzip gpl-source-wd_my_cloud-04.01.03-421.zip packages/build_tools/debian/* mkdir 64k-wheezy cp -R packages/build_tools/debian/* ./64k-wheezy echo '#!/bin/bash' &amp;gt; 64k-wheezy/build.sh echo './build-armhf-package.sh --pagesize=64k $1 wheezy' &amp;gt;&amp;gt; 64k-wheezy/build.sh chmod a+x 64k-wheezy/build.sh cd 64k-wheezy # the setup script will prompt for root password during chroot ./setup.sh bootstrap/wheezy-bootstrap_1.24.14_armhf.tar.gz build sudo mv build/usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static_orig sudo cp /usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static # override build/etc/apt/sources.list sudo echo \"deb http://security.debian.org/ wheezy/updates main contrib non-free\" &amp;gt; build/etc/apt/sources.list sudo echo \"deb-src http://security.debian.org/ wheezy/updates main contrib non-free\" &amp;gt;&amp;gt; build/etc/apt/sources.list sudo echo \"deb http://ftp.debian.org/debian wheezy-updates main contrib non-free\" &amp;gt;&amp;gt; build/etc/apt/sources.list sudo echo \"deb-src http://ftp.debian.org/debian wheezy-updates main contrib non-free\" &amp;gt;&amp;gt; build/etc/apt/sources.list sudo echo \"deb http://ftp.debian.org/debian wheezy main contrib non-free\" &amp;gt;&amp;gt; build/etc/apt/sources.list sudo echo \"deb-src http://ftp.debian.org/debian wheezy main contrib non-free\" &amp;gt;&amp;gt; build/etc/apt/sources.list # optional until you need to use backports packages sudo echo \"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free\" &amp;gt;&amp;gt; build/etc/apt/sources.list sudo echo \"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free\" &amp;gt;&amp;gt; build/etc/apt/sources.list sudo cp /etc/resolv.conf build/etc Then you can build by running build.sh with the package name, e.g., ./build.sh joe It will download the source package from the repository, cross-compile it, and build a deb file. The process could take over 10 minutes. Once it is successful, you can scp the .deb file to your router and install it with dpkg -i. Building Node.js Manually It is a little tricky to build Node.js because the source is not in the repository. I have tried to use a binary from http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz, but it failed with: cannot execute binary file You can follow the scripts to build it manually: # setup utils ./setup.sh bootstrap/wheezy-bootstrap_1.24.14_armhf.tar.gz build sudo mkdir -p build/root/binutils sudo tar vfx binutils/binutils-armhf-64k.tar.gz -C build/root/binutils sudo chroot build /bin/bash cd /root/binutils dpkg -i binutils_*.deb dpkg -i binutils-multiarch_*.deb export DEBIAN_FRONTEND=noninteractive export DEBCONF_NONINTERACTIVE_SEEN=true export LC_ALL=C export LANGUAGE=C export LANG=C export DEB_CFLAGS_APPEND='-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE' export DEB_BUILD_OPTIONS=nocheck cd /root # now the build environment is ready wget http://nodejs.org/dist/v0.12.0/node-v0.12.0.tar.gz tar vfxz node-v0.12.0.tar.gz cd node-v0.12.0 ./configure make # go back to original environment exit The binary is ready in build/root/node-v0.12.0/node for you to upload to the WD Cloud. You can upload to /usr/local/bin in your WD Cloud. You also need to download npm and other components from http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz. Extract the files and put them in either /usr/local or /usr. wget http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz tar vfxz node-v0.12.0-linux-x86.tar.gz cd node-v0.12.0-linux-x86 rm bin/node cp -R include /usr/local cp -R share /usr/local cp -R lib /usr/local cp -R bin /usr/local Remember not to override the binary you have uploaded. Package List Below is a list of packages I have successfully built: htop joe unrar transmission libcurl3-gnutls libminiupnpc5 libnatpmp1 transmission-common transmission-daemon Node.js prerequisites libc-ares2 libv8 python3-pip libcurl3-gnutls python2.6 python3 python3-pkg-resources python3-setuptools python-pkg-resources python-setuptools liberror-perl (required for git) git rrdtool (required for cacti) virtual-mysql-client (required for cacti) php5-mysql (required for cacti) dbconfig-common (required for cacti) libphp-adodb (required for cacti) snmp (required for cacti) php5-snmp (required for cacti) cacti Packages are uploaded to [https://app.box.com/wdcloud](https://app.box.com/wdcloud target=_blank). Script to build: commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"arm","slug":"arm","permalink":"http://neo01.com/tags/arm/"},{"name":"nodejs","slug":"nodejs","permalink":"http://neo01.com/tags/nodejs/"},{"name":"wdcloud","slug":"wdcloud","permalink":"http://neo01.com/tags/wdcloud/"}]},{"title":"Rewriting blocking AJAX (async: false in JQuery)","slug":"2014/rewriting-blocking-ajax-async-false-in-jquery","date":"2014-12-14T16:00:00.000Z","updated":"2025-07-01T14:39:33.502Z","comments":true,"path":"2014/rewriting-blocking-ajax-async-false-in-jquery/","permalink":"http://neo01.com/2014/rewriting-blocking-ajax-async-false-in-jquery/","excerpt":"","text":"When I applied Jasmine Ajax to test a piece of JavaScript, I was stuck, and I discovered that the cause was no support for blocking AJAX calls from Jasmine Ajax. I don‚Äôt blame Jasmine Ajax because I don‚Äôt think making blocking AJAX calls makes sense at all. Almost all developers consider AJAX to be an acronym standing for Asynchronous. However, the world of AJAX can be complicated to some new learners, and it‚Äôs not uncommon to see AJAX calls with blocking. Blocking AJAX calls are considered a poor practice in most web, mobile, and server platforms. The reasons differ slightly by platform, but overall, JavaScripts are single-threaded, and any blocking call means cessation of function. Below is an example of a jQuery AJAX call with blocking using async: false (and another anti-pattern, using global variables), var someGlobal = false; $.ajax(&#123; type: \"GET\", url: \"//somewhere\", contentType: \"application/json; charset=utf-8\", async: false, success: (function() &#123; someGlobal = true; &#125;) &#125;); if (someGlobal) &#123; // follow-up &#125; The above example is easy to follow in some sense because it runs step-by-step. The value of someGlobal is properly assigned before following up. Everything is fine except for the blocking and use of a global variable. Let‚Äôs rewrite this and see. $.ajax(&#123; type: \"GET\", url: \"//somewhere\", contentType: \"application/json; charset=utf-8\", async:true, success: (function() &#123; followUp(true); &#125;), error: (function() &#123; followUp(false); &#125;) &#125;); // parameter result is renamed from someGlobal function followUp(result) &#123; // follow-up &#125; Now, the AJAX request is not blocked due to the async: true setting. We‚Äôve placed the code for follow-up into a separate followUp function. No global variable is needed. In the real world, this could become part of a callback chain, and we‚Äôll discuss that later. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"jasmine","slug":"jasmine","permalink":"http://neo01.com/tags/jasmine/"},{"name":"javascript","slug":"javascript","permalink":"http://neo01.com/tags/javascript/"}]},{"title":"Google Maps Shows Traffic Alerts During Route Planning in Hong Kong","slug":"2014/google-map-show-traffic-alerts-during-route-planning-in-hong-kong","date":"2014-08-17T16:00:00.000Z","updated":"2025-07-01T14:31:50.587Z","comments":true,"path":"2014/google-map-show-traffic-alerts-during-route-planning-in-hong-kong/","permalink":"http://neo01.com/2014/google-map-show-traffic-alerts-during-route-planning-in-hong-kong/","excerpt":"","text":"While commuting to work this morning, I considered whether driving might be a viable option. My new workplace is in Tung Chung, and I typically commute by bus and MTR. I used my iPhone to access Google Maps, tapped on the destination, and checked which route was better. To my surprise, one of the routes displayed a traffic alert! I had assumed this feature was exclusive to Apple Maps and available only in certain major cities like New York City. I never expected it to be available in Hong Kong. I switched to check the route from Tung Chung to Hong Kong Island. It appeared that the traffic alert was specific to eastbound traffic only. Next, I checked westbound traffic by switching back to the original route from Hong Kong Island to Tung Chung. Sure enough, it showed normal traffic conditions. After searching online, I couldn‚Äôt find any relevant information about the traffic alert. It wasn‚Äôt until 10 minutes later, when I returned to the office, that I found a related report. I am confident that these traffic incident reports are updated in real time. Hooray! According to the Hong Kong government‚Äôs website (http://www.gov.hk/en/theme/psi/datasets/specialtrafficnews.htm), the source of these traffic incident reports may come from the government itself. commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"Google","slug":"Google","permalink":"http://neo01.com/tags/Google/"}]},{"title":"Discover Swift: Writing a Pachinko game on iOS with Swift and SpriteKit","slug":"2014/discover-swift-writing-a-pachinko-game-on-ios-with-swift-and-spritekit","date":"2014-08-05T16:00:00.000Z","updated":"2025-07-01T14:30:21.290Z","comments":true,"path":"2014/discover-swift-writing-a-pachinko-game-on-ios-with-swift-and-spritekit/","permalink":"http://neo01.com/2014/discover-swift-writing-a-pachinko-game-on-ios-with-swift-and-spritekit/","excerpt":"Do you like Swift, the programming language that comes with XCode 6 from Apple? You may not know, but I developed a fondness for it after writing a game with it. I am going to show you how to write a game with Swift. If you‚Äôd like to jump right into the source code of this game, you can download or clone it from GitHub","text":"Do you like Swift, the programming language that comes with XCode 6 from Apple? You may not know, but I developed a fondness for it after writing a game with it. I am going to show you how to write a game with Swift. If you‚Äôd like to jump right into the source code of this game, you can download or clone it from GitHub Getting started with XCode 6 Firstly, you need to download XCode 6. At the moment, XCode 6 is not officially released, so you‚Äôll need to join ‚ÄòiOS Developer Program‚Äô to access it. Once you‚Äôve installed Xcode and chosen to create a new project, you can select the iOS Application with Game template, Fill in product name, choosing the language Swift and the framework SpriteKit, Type Inference Once the canned game is created, you can set scaleMode in GameViewController.swift to .AspectFit, e.g., scene.scaleMode = .AspectFit. The canned version sets scaleMode to .AspectFill. I got lost with the coordinates when using .AspectFill and found that part of the game scene wasn‚Äôt being shown under this mode. I discovered that setting scaleMode to .AspectFit would be easier to learn the coordinate system because all of the scene is shown. Empty spaces are added with .AspectFit if they don‚Äôt match, so you won‚Äôt miss any part of your scene. You don‚Äôt need to specify the type for .AspectFit, as Swift can infer the type from scene.scaleMode using Type Inference. Additionally, the semicolon is not required to end a statement. Are you starting to love it? Handling different scene aspect ratio Next, resize the GameScene.sks to 640 width and 1136 height such that it fits aspect ratio to iPhone 5. Note that the numbers aren‚Äôt in pixel units because the scene can be scaled according to scaleMode, using 640 is easier for reference purposes in the game program. It may be difficult to see the selected game scene on your first launch, as it will fits the editor by default; zooming out with the ‚Äò-‚Äô icon can help. You‚Äôll know you‚Äôve selected the scene from breadcrumb or property window on right. Build basic game elements with SpriteKit SpriteKit is very familiar to me as I have experience with Cocos2d and Cocos2d-x. It is an all-in-one physics engine, 2d graphics engine, and animation engine. Let‚Äôs start by creating pins, fences and borders. import SpriteKit class GameScene: SKScene &#123; var borderBottom: SKShapeNode? = nil override func didMoveToView(view: SKView) &#123; let top = scene.size.height; let right = scene.size.width; // pins let pinRadius : CGFloat = 5 let pinSpacing : CGFloat = 100 for var x : CGFloat = 75; x &amp;lt; 500; x += pinSpacing &#123; for var y : CGFloat = 200; y &amp;lt; 800; y += pinSpacing &#123; let sprite = SKShapeNode(circleOfRadius: pinRadius) sprite.physicsBody = SKPhysicsBody(circleOfRadius: pinRadius) sprite.physicsBody.dynamic = false // straggered pins sprite.position.x = x + (y % (pinSpacing * 2)) / 2 sprite.position.y = y sprite.fillColor = UIColor.whiteColor() self.addChild(sprite) &#125; &#125; // fences let fenceSpacing : CGFloat = 100 let fenceSize = CGSize(width: 5, height: 75) for var x : CGFloat = fenceSpacing; x &amp;lt; right - 100; x += fenceSpacing &#123; let sprite = SKShapeNode(rectOfSize: fenceSize) sprite.physicsBody = SKPhysicsBody(rectangleOfSize: fenceSize) sprite.physicsBody.dynamic = false sprite.position = CGPoint(x: x, y: fenceSize.height / 2) sprite.fillColor = UIColor.whiteColor() self.addChild(sprite) &#125; // bottom let pathBottom = CGPathCreateMutable() CGPathMoveToPoint(pathBottom, nil, 0, 0) CGPathAddLineToPoint(pathBottom, nil, right, 0) borderBottom = SKShapeNode(path: pathBottom) borderBottom?.physicsBody = SKPhysicsBody(edgeChainFromPath: pathBottom) borderBottom?.physicsBody.dynamic = false self.addChild(borderBottom) // other borders let path = CGPathCreateMutable() CGPathMoveToPoint(path, nil, 0, 0) CGPathAddLineToPoint(path, nil, 0, top) CGPathAddLineToPoint(path, nil, right - 150, top) CGPathAddLineToPoint(path, nil, right - 50, top - 50) CGPathAddLineToPoint(path, nil, right, top - 150) CGPathAddLineToPoint(path, nil, right, 0) let borders = SKShapeNode(path: path) borders.physicsBody = SKPhysicsBody(edgeChainFromPath: path) borders.physicsBody.dynamic = false self.addChild(borders) &#125; &#125; Non-optional/Optional Variable? You may wonder what SKShapeNode? is in var borderBottom: SKShapeNode? = nil. In Swift, variables are non-optional by default and cannot be set to nil (or null) without explicit declaration. To make a variable optional, you need to append a question mark (?) to the end of its type. This design makes Swift more fool-proof because many developers in other languages accidentally dereference variables, leading to null pointer exceptions or method calls on undefined objects. Having an optional annotation can be helpful, but it would clutter your code with unnecessary annotations. Well, we still don‚Äôt have a game to play yet! Now let‚Äôs try to add some action and make things more fun. override func touchesBegan(touches: NSSet, withEvent event: UIEvent) &#123; // launch a ball let sprite = SKSpriteNode(imageNamed:\"Spaceship\") sprite.xScale = 0.15 sprite.yScale = 0.15 sprite.position = CGPoint(x: 605, y: 40) sprite.physicsBody = SKPhysicsBody(circleOfRadius: 30) sprite.physicsBody.contactTestBitMask = 1 self.addChild(sprite) // give some randomness sprite.physicsBody.velocity.dy = 3000 + CGFloat(rand()) * 300 / CGFloat(RAND_MAX); &#125; The spaceships fill up the screen if you tap continuously. Let‚Äôs do something when the spaceship hits the floor, Handle object collision First, make the GameScence conform to SKPhysicsContactDelegate, which means that it can now have a function to handle contacts between physics objects. class GameScene: SKScene, SKPhysicsContactDelegate &#123; var score = 0 And below is the function to handle object contact, func didBeginContact(contact: SKPhysicsContact!) &#123; if contact.bodyA == borderBottom?.physicsBody &#123; let body = contact.bodyB // disable futher collision body.contactTestBitMask = 0 let node = body.node // fade out node.runAction(SKAction.sequence([ SKAction.fadeAlphaTo(0, duration: 1), SKAction.removeFromParent()])) // update score score += 10 let label = self.childNodeWithName(\"score\") as SKLabelNode label.text = String(score) // score float up from the ball let scoreUp = SKLabelNode(text: \"+10\") scoreUp.position = node.position self.addChild(scoreUp) scoreUp.runAction(SKAction.sequence([ SKAction.moveBy(CGVector(dx: 0, dy: 50), duration: 1), SKAction.removeFromParent() ])) &#125; &#125; You should set contact delegate to the GameScene since it conforms to the protocol, override func didMoveToView(view: SKView) &#123; // setup collision delegate self.physicsWorld.contactDelegate = self &#125; Cool! I hope you‚Äôre not addicted to the game. Download/browse source in GitHub. I wish that one day, Swift and SpriteKit would become cross-platform. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"},{"name":"Swift","slug":"Swift","permalink":"http://neo01.com/tags/Swift/"}]},{"title":"iOS 8 Time-Lapse Videos","slug":"2014/ios-8-time-lapsed-videos","date":"2014-07-27T16:00:00.000Z","updated":"2025-07-01T14:34:06.803Z","comments":true,"path":"2014/ios-8-time-lapsed-videos/","permalink":"http://neo01.com/2014/ios-8-time-lapsed-videos/","excerpt":"","text":"I have installed iOS 8 beta 3 on an iPhone 4s. The default camera now supports taking time-lapse videos. Taking a time-lapse video with the camera is very simple because you do not have any options‚Ä¶ It takes a frame every second in my experience, at least based on my observations. Below is the dawn of Tai Wai, Hong Kong, which I took from my bedside counter, Another one I took while driving, It‚Äôs generally better to take time-lapse videos during busy traffic and daylight. Time-lapse videos of driving on highways at night can result in a dizzying video with little visibility, as shown below (which didn‚Äôt turn out so well): commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"}]},{"title":"Share a Coke with Neo","slug":"2014/share-a-coke-with-neo","date":"2014-03-26T16:00:00.000Z","updated":"2025-07-01T14:40:43.179Z","comments":true,"path":"2014/share-a-coke-with-neo/","permalink":"http://neo01.com/2014/share-a-coke-with-neo/","excerpt":"","text":"My friend brought me a bottle of Coke with my name on it from his business trip to South Africa, You can check https://www.shareacoke.co.za/ for the available names. There are similar activities in the U.K. as well, http://www.coca-cola.co.uk/share-a-coke/share-a-coke.html commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[]},{"title":"Testing Android Wear Integration","slug":"2014/testing-android-wear-integration","date":"2014-03-26T16:00:00.000Z","updated":"2025-07-01T14:41:34.163Z","comments":true,"path":"2014/testing-android-wear-integration/","permalink":"http://neo01.com/2014/testing-android-wear-integration/","excerpt":"","text":"We have integrated a messaging app with Android Wear in an emulator. Android Wear can receive notifications, reply to messages, and initiate VoIP calls through the mobile app. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://neo01.com/tags/Android/"}]},{"title":"Test Your Abilities in Low-Level Hacking","slug":"2014/low-level-hacking-test","date":"2014-01-23T16:00:00.000Z","updated":"2025-07-01T14:36:44.559Z","comments":true,"path":"2014/low-level-hacking-test/","permalink":"http://neo01.com/2014/low-level-hacking-test/","excerpt":"","text":"https://microcorruption.com This is a simulation game that involves hacking an electronic lock. It requires a solid understanding of low-level programming. If you‚Äôre not familiar with Assembly, consider playing Watch Dogs instead. The game features a comprehensive in-game debugger and several debug symbols. Hint: Read the hardware manual. Below is the bit diagram of the Status Register (sr), which will be useful during hacking. This is my progress so far, commentBox('5765834504929280-proj')","categories":[{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"}],"tags":[{"name":"Assembly","slug":"Assembly","permalink":"http://neo01.com/tags/Assembly/"},{"name":"Hacking","slug":"Hacking","permalink":"http://neo01.com/tags/Hacking/"}]},{"title":"Accelerate the Android Emulator","slug":"2013/Accelerate-the-Android-Emulator","date":"2013-07-16T16:00:00.000Z","updated":"2025-07-01T14:26:59.766Z","comments":true,"path":"2013/Accelerate-the-Android-Emulator/","permalink":"http://neo01.com/2013/Accelerate-the-Android-Emulator/","excerpt":"","text":"For a long time, the most frequent complaints about the Android emulator were its slow startup and operational speeds. Using the Intel Atom x86 system image helped slightly, but not significantly. However, last year, Intel released the Intel Hardware Accelerated Execution Manager (HAXM), which dramatically improved the situation. Previously, it took several minutes from the Android boot animation to reach the screen lock, but now it takes just 10 seconds! Installing HAXM First, ensure your CPU supports VT, which most CPUs today do. Then, go to the Extras section in the Android SDK Manager and install the Intel x86 Emulator Accelerator (HAXM). Note that this step only downloads the package; you must complete the installation by locating it in the SDK Path. For example, on a Mac, it is downloaded to SDK Path /extras/intel/Hardware_Accelerated_Execution_Manager. You then open the IntelHAXM.dmg file and run the package inside to finish the installation. After running the Emulator, if successful, you will see in the Console: Emulator] HAX is working and emulator runs in fast virt mode. If you want to see how fast the Android emulator runs on a MacBook Air, you can watch the following video. commentBox('5765834504929280-proj')","categories":[{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://neo01.com/tags/Android/"}]},{"title":"Minecraft Map for Hong Kong","slug":"2013/minecraft-hong-kong-map","date":"2013-01-22T16:00:00.000Z","updated":"2025-07-01T14:28:45.683Z","comments":true,"path":"2013/minecraft-hong-kong-map/","permalink":"http://neo01.com/2013/minecraft-hong-kong-map/","excerpt":"","text":"First, create a 5000x5000 pixel height map, where each pixel corresponds to 1 meter in Minecraft. Considering that Hong Kong spans approximately 50,000 meters (50 km) from south to north, the resulting scale of the Minecraft map would be 1:10. However, in Minecraft, due to visibility limitations, the terrain doesn‚Äôt quite resemble the actual Hong Kong landscape. To get a better view, you‚Äôd need to use a map viewer that allows you to see farther. Here‚Äôs the effect: While the mountainous terrain on Hong Kong Island is somewhat recognizable, the height map‚Äôs handling of flat areas isn‚Äôt ideal‚Äîit needs some smoothing. Now, let‚Äôs consider the next steps: Is it worthwhile to achieve a 1:1, 1:2, or 1:5 scale? Going 1:1 would be quite a trek, and a larger scale might make the streets look odd. So, it‚Äôs a balancing act! üòÑ Download Map commentBox('5765834504929280-proj')","categories":[{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"http://neo01.com/tags/Minecraft/"}]}],"categories":[{"name":"AI","slug":"AI","permalink":"http://neo01.com/categories/AI/"},{"name":"Development","slug":"Development","permalink":"http://neo01.com/categories/Development/"},{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/categories/Cybersecurity/"},{"name":"Art Gallery","slug":"AI/Art-Gallery","permalink":"http://neo01.com/categories/AI/Art-Gallery/"},{"name":"Misc","slug":"Misc","permalink":"http://neo01.com/categories/Misc/"}],"tags":[{"name":"AI, Architecture, Software Engineering","slug":"AI-Architecture-Software-Engineering","permalink":"http://neo01.com/tags/AI-Architecture-Software-Engineering/"},{"name":"AI, Architecture","slug":"AI-Architecture","permalink":"http://neo01.com/tags/AI-Architecture/"},{"name":"AI","slug":"AI","permalink":"http://neo01.com/tags/AI/"},{"name":"DevSecOps","slug":"DevSecOps","permalink":"http://neo01.com/tags/DevSecOps/"},{"name":"Security","slug":"Security","permalink":"http://neo01.com/tags/Security/"},{"name":"docker","slug":"docker","permalink":"http://neo01.com/tags/docker/"},{"name":"Minecraft","slug":"Minecraft","permalink":"http://neo01.com/tags/Minecraft/"},{"name":"Cybersecurity","slug":"Cybersecurity","permalink":"http://neo01.com/tags/Cybersecurity/"},{"name":"terraform","slug":"terraform","permalink":"http://neo01.com/tags/terraform/"},{"name":"Google","slug":"Google","permalink":"http://neo01.com/tags/Google/"},{"name":"cloud","slug":"cloud","permalink":"http://neo01.com/tags/cloud/"},{"name":"Azure","slug":"Azure","permalink":"http://neo01.com/tags/Azure/"},{"name":"GitOps","slug":"GitOps","permalink":"http://neo01.com/tags/GitOps/"},{"name":"Jenkins","slug":"Jenkins","permalink":"http://neo01.com/tags/Jenkins/"},{"name":"Groovy","slug":"Groovy","permalink":"http://neo01.com/tags/Groovy/"},{"name":"3D printing","slug":"3D-printing","permalink":"http://neo01.com/tags/3D-printing/"},{"name":"Home Assistant","slug":"Home-Assistant","permalink":"http://neo01.com/tags/Home-Assistant/"},{"name":"Open Data","slug":"Open-Data","permalink":"http://neo01.com/tags/Open-Data/"},{"name":"iOS","slug":"iOS","permalink":"http://neo01.com/tags/iOS/"},{"name":"Test Automation","slug":"Test-Automation","permalink":"http://neo01.com/tags/Test-Automation/"},{"name":"Visualization","slug":"Visualization","permalink":"http://neo01.com/tags/Visualization/"},{"name":"Mac","slug":"Mac","permalink":"http://neo01.com/tags/Mac/"},{"name":"MacOS","slug":"MacOS","permalink":"http://neo01.com/tags/MacOS/"},{"name":"python","slug":"python","permalink":"http://neo01.com/tags/python/"},{"name":"ShellScript","slug":"ShellScript","permalink":"http://neo01.com/tags/ShellScript/"},{"name":"enterprise","slug":"enterprise","permalink":"http://neo01.com/tags/enterprise/"},{"name":"wifi","slug":"wifi","permalink":"http://neo01.com/tags/wifi/"},{"name":"Swift","slug":"Swift","permalink":"http://neo01.com/tags/Swift/"},{"name":"Apple","slug":"Apple","permalink":"http://neo01.com/tags/Apple/"},{"name":"nodejs","slug":"nodejs","permalink":"http://neo01.com/tags/nodejs/"},{"name":"Java","slug":"Java","permalink":"http://neo01.com/tags/Java/"},{"name":"C#","slug":"C","permalink":"http://neo01.com/tags/C/"},{"name":"Go","slug":"Go","permalink":"http://neo01.com/tags/Go/"},{"name":"PHP","slug":"PHP","permalink":"http://neo01.com/tags/PHP/"},{"name":"Python","slug":"Python","permalink":"http://neo01.com/tags/Python/"},{"name":"arm","slug":"arm","permalink":"http://neo01.com/tags/arm/"},{"name":"wdcloud","slug":"wdcloud","permalink":"http://neo01.com/tags/wdcloud/"},{"name":"hackathon","slug":"hackathon","permalink":"http://neo01.com/tags/hackathon/"},{"name":"jasmine","slug":"jasmine","permalink":"http://neo01.com/tags/jasmine/"},{"name":"javascript","slug":"javascript","permalink":"http://neo01.com/tags/javascript/"},{"name":"Android","slug":"Android","permalink":"http://neo01.com/tags/Android/"},{"name":"Assembly","slug":"Assembly","permalink":"http://neo01.com/tags/Assembly/"},{"name":"Hacking","slug":"Hacking","permalink":"http://neo01.com/tags/Hacking/"}]}