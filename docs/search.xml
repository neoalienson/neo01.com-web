<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Architecture as Code: Part 1 - The Revolution Begins</title>
      <link href="/2025/07/Architecture_As_Code_Part_1_The_Revolution_Begins/"/>
      <url>/2025/07/Architecture_As_Code_Part_1_The_Revolution_Begins/</url>
      
        <content type="html"><![CDATA[<p><img src="banner.jpg" alt="" /></p><h1>Architecture as Code: Part 1 - The Revolution Begins</h1><p><em>This is Part 1 of our 7-part series exploring Architecture as Code. Each post tells a different chapter of this transformative journey.</em></p><h2 id="The-Day-Everything-Changed">The Day Everything Changed</h2><p>Imagine you’re a software architect at a fast-growing fintech startup. Your team started with a simple monolithic application, but now you’re serving millions of users with complex microservices, APIs, and data pipelines. The architecture diagrams you drew six months ago? They’re gathering dust in a shared drive, hopelessly outdated.</p><p>Your developers are making decisions on the fly—adding services, creating databases, implementing patterns—without anyone really tracking how it all fits together. Code reviews focus on syntax and bugs, but no one asks: “Does this align with our architectural vision?”</p><p>Sound familiar? This scenario plays out in companies worldwide, and it’s the perfect storm that gave birth to <strong>Architecture as Code (AaC)</strong>.</p><h2 id="From-Static-Diagrams-to-Living-Systems">From Static Diagrams to Living Systems</h2><p>Traditional software architecture suffered from a fundamental flaw: it was disconnected from reality. Architects would spend weeks creating beautiful diagrams using tools like Visio or <a href="http://draw.io">draw.io</a>. They’d write detailed documents describing layers, components, and interactions. But here’s what happened:</p><ol><li><strong>The diagrams became outdated</strong> within weeks of being created</li><li><strong>Implementation drifted</strong> from the intended design</li><li><strong>Decisions were made implicitly</strong> rather than explicitly</li><li><strong>Validation was manual</strong> and infrequent</li><li><strong>Documentation became stale</strong> and untrustworthy</li></ol><svg aria-roledescription="flowchart-v2" role="graphics-document document" viewBox="-8 -8 131.625 331.94140625" style="max-width: 131.625px;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-1758626673520"><style>#mermaid-1758626673520{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1758626673520 .error-icon{fill:#552222;}#mermaid-1758626673520 .error-text{fill:#552222;stroke:#552222;}#mermaid-1758626673520 .edge-thickness-normal{stroke-width:2px;}#mermaid-1758626673520 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1758626673520 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1758626673520 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1758626673520 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1758626673520 .marker{fill:#333333;stroke:#333333;}#mermaid-1758626673520 .marker.cross{stroke:#333333;}#mermaid-1758626673520 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-1758626673520 .label{font-family:"trebuchet ms",verdana,arial,sans-serif;color:#333;}#mermaid-1758626673520 .cluster-label text{fill:#333;}#mermaid-1758626673520 .cluster-label span,#mermaid-1758626673520 p{color:#333;}#mermaid-1758626673520 .label text,#mermaid-1758626673520 span,#mermaid-1758626673520 p{fill:#333;color:#333;}#mermaid-1758626673520 .node rect,#mermaid-1758626673520 .node circle,#mermaid-1758626673520 .node ellipse,#mermaid-1758626673520 .node polygon,#mermaid-1758626673520 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1758626673520 .flowchart-label text{text-anchor:middle;}#mermaid-1758626673520 .node .katex path{fill:#000;stroke:#000;stroke-width:1px;}#mermaid-1758626673520 .node .label{text-align:center;}#mermaid-1758626673520 .node.clickable{cursor:pointer;}#mermaid-1758626673520 .arrowheadPath{fill:#333333;}#mermaid-1758626673520 .edgePath .path{stroke:#333333;stroke-width:2.0px;}#mermaid-1758626673520 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1758626673520 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1758626673520 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1758626673520 .labelBkg{background-color:rgba(232, 232, 232, 0.5);}#mermaid-1758626673520 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1758626673520 .cluster text{fill:#333;}#mermaid-1758626673520 .cluster span,#mermaid-1758626673520 p{color:#333;}#mermaid-1758626673520 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:12px;background:hsl(80, 100%, 96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1758626673520 .flowchartTitleText{text-anchor:middle;font-size:18px;fill:#333;}#mermaid-1758626673520 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="6" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-pointEnd"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 0 L 10 5 L 0 10 z"></path></marker><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="4.5" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-pointStart"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 5 L 10 10 L 10 0 z"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="11" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-circleEnd"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="-1" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-circleStart"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="12" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626673520_flowchart-crossEnd"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="-1" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626673520_flowchart-crossStart"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><g class="root"><g class="clusters"></g><g class="edgePaths"><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-UI LE-API" id="L-UI-API-0" d="M57.813,34L57.813,38.167C57.813,42.333,57.813,50.667,57.813,58.117C57.813,65.567,57.813,72.133,57.813,75.417L57.813,78.7"></path><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-API LE-AUTH" id="L-API-AUTH-0" d="M57.813,118L57.813,122.167C57.813,126.333,57.813,134.667,57.813,142.117C57.813,149.567,57.813,156.133,57.813,159.417L57.813,162.7"></path><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-AUTH LE-DB" id="L-AUTH-DB-0" d="M57.813,202L57.813,206.167C57.813,210.333,57.813,218.667,57.813,226.117C57.813,233.567,57.813,240.133,57.813,243.417L57.813,246.7"></path></g><g class="edgeLabels"><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g></g><g class="nodes"><g transform="translate(57.8125, 17)" data-id="UI" data-node="true" id="flowchart-UI-0" class="node default default flowchart-label"><rect height="34" width="115.625" y="-17" x="-57.8125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-50.3125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="100.625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">User Interface</span></div></foreignObject></g></g><g transform="translate(57.8125, 101)" data-id="API" data-node="true" id="flowchart-API-1" class="node default default flowchart-label"><rect height="34" width="106.484375" y="-17" x="-53.2421875" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-45.7421875, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="91.484375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">API Gateway</span></div></foreignObject></g></g><g transform="translate(57.8125, 185)" data-id="AUTH" data-node="true" id="flowchart-AUTH-3" class="node default default flowchart-label"><rect height="34" width="87.125" y="-17" x="-43.5625" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-36.0625, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="72.125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Authorizer</span></div></foreignObject></g></g><g transform="translate(57.8125, 283.97071266174316)" data-id="DB" data-node="true" id="flowchart-DB-5" class="node default default flowchart-label"><path transform="translate(-41.53125,-31.970711925503153)" d="M 0,9.980474617002104 a 41.53125,9.980474617002104 0,0,0 83.0625 0 a 41.53125,9.980474617002104 0,0,0 -83.0625 0 l 0,43.9804746170021 a 41.53125,9.980474617002104 0,0,0 83.0625 0 l 0,-43.9804746170021" style=""></path><g transform="translate(-34.03125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="68.0625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Database</span></div></foreignObject></g></g></g></g></g></svg><p><strong>Diagram 1: Intended Architecture Design (API Gateway with Authorizer)</strong></p><svg aria-roledescription="flowchart-v2" role="graphics-document document" viewBox="-8 -8 131.625 247.94142150878906" style="max-width: 131.625px;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-1758626674108"><style>#mermaid-1758626674108{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1758626674108 .error-icon{fill:#552222;}#mermaid-1758626674108 .error-text{fill:#552222;stroke:#552222;}#mermaid-1758626674108 .edge-thickness-normal{stroke-width:2px;}#mermaid-1758626674108 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1758626674108 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1758626674108 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1758626674108 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1758626674108 .marker{fill:#333333;stroke:#333333;}#mermaid-1758626674108 .marker.cross{stroke:#333333;}#mermaid-1758626674108 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-1758626674108 .label{font-family:"trebuchet ms",verdana,arial,sans-serif;color:#333;}#mermaid-1758626674108 .cluster-label text{fill:#333;}#mermaid-1758626674108 .cluster-label span,#mermaid-1758626674108 p{color:#333;}#mermaid-1758626674108 .label text,#mermaid-1758626674108 span,#mermaid-1758626674108 p{fill:#333;color:#333;}#mermaid-1758626674108 .node rect,#mermaid-1758626674108 .node circle,#mermaid-1758626674108 .node ellipse,#mermaid-1758626674108 .node polygon,#mermaid-1758626674108 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1758626674108 .flowchart-label text{text-anchor:middle;}#mermaid-1758626674108 .node .katex path{fill:#000;stroke:#000;stroke-width:1px;}#mermaid-1758626674108 .node .label{text-align:center;}#mermaid-1758626674108 .node.clickable{cursor:pointer;}#mermaid-1758626674108 .arrowheadPath{fill:#333333;}#mermaid-1758626674108 .edgePath .path{stroke:#333333;stroke-width:2.0px;}#mermaid-1758626674108 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1758626674108 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1758626674108 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1758626674108 .labelBkg{background-color:rgba(232, 232, 232, 0.5);}#mermaid-1758626674108 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1758626674108 .cluster text{fill:#333;}#mermaid-1758626674108 .cluster span,#mermaid-1758626674108 p{color:#333;}#mermaid-1758626674108 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:12px;background:hsl(80, 100%, 96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1758626674108 .flowchartTitleText{text-anchor:middle;font-size:18px;fill:#333;}#mermaid-1758626674108 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="6" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674108_flowchart-pointEnd"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 0 L 10 5 L 0 10 z"></path></marker><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="4.5" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674108_flowchart-pointStart"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 5 L 10 10 L 10 0 z"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="11" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674108_flowchart-circleEnd"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="-1" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674108_flowchart-circleStart"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="12" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626674108_flowchart-crossEnd"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="-1" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626674108_flowchart-crossStart"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><g class="root"><g class="clusters"></g><g class="edgePaths"><path marker-end="url(#mermaid-1758626674108_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-UI LE-API" id="L-UI-API-0" d="M57.813,34L57.813,38.167C57.813,42.333,57.813,50.667,57.813,58.117C57.813,65.567,57.813,72.133,57.813,75.417L57.813,78.7"></path><path marker-end="url(#mermaid-1758626674108_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-API LE-DB" id="L-API-DB-0" d="M57.813,118L57.813,122.167C57.813,126.333,57.813,134.667,57.813,142.117C57.813,149.567,57.813,156.133,57.813,159.417L57.813,162.7"></path></g><g class="edgeLabels"><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g></g><g class="nodes"><g transform="translate(57.8125, 17)" data-id="UI" data-node="true" id="flowchart-UI-0" class="node default default flowchart-label"><rect height="34" width="115.625" y="-17" x="-57.8125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-50.3125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="100.625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">User Interface</span></div></foreignObject></g></g><g transform="translate(57.8125, 101)" data-id="API" data-node="true" id="flowchart-API-1" class="node default default flowchart-label"><rect height="34" width="106.484375" y="-17" x="-53.2421875" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-45.7421875, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="91.484375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">API Gateway</span></div></foreignObject></g></g><g transform="translate(57.8125, 199.97071266174316)" data-id="DB" data-node="true" id="flowchart-DB-3" class="node default default flowchart-label"><path transform="translate(-41.53125,-31.970711925503153)" d="M 0,9.980474617002104 a 41.53125,9.980474617002104 0,0,0 83.0625 0 a 41.53125,9.980474617002104 0,0,0 -83.0625 0 l 0,43.9804746170021 a 41.53125,9.980474617002104 0,0,0 83.0625 0 l 0,-43.9804746170021" style=""></path><g transform="translate(-34.03125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="68.0625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Database</span></div></foreignObject></g></g></g></g></g></svg><p><strong>Diagram 2: Actual Implementation (Reality - Authorizer Missing)</strong></p><p>These diagrams illustrate a common real-world scenario where security architecture becomes disconnected from implementation. In Diagram 1, the architect’s design includes a proper security layer with an Authorizer component that validates user permissions before allowing database access. However, in Diagram 2, the actual implementation bypasses this critical security component, creating a vulnerability where the API Gateway connects directly to the database without proper authorization checks. This architectural drift, which might go unnoticed in traditional documentation approaches, could lead to serious security breaches in production systems.</p><p>Then came Infrastructure as Code (IaC) with tools like Terraform and CloudFormation. Suddenly, infrastructure wasn’t just documented—it was codified, versioned, and automated. What if we could do the same for software architecture?</p><h2 id="The-AaC-Manifesto">The AaC Manifesto</h2><p>Architecture as Code isn’t just about drawing diagrams in code. It’s a fundamental shift in how we think about software design:</p><p><strong>Architecture Becomes Code</strong></p><p>Instead of describing your system in natural language or static diagrams, you define it programmatically. Components, relationships, patterns, and constraints become machine-readable artifacts.</p><p><strong>Decisions Become Explicit</strong></p><p>Every architectural choice—from “we use microservices” to “all services must have circuit breakers”—is captured as code that can be validated and enforced.</p><p><strong>Validation Becomes Automated</strong></p><p>No more manual reviews to check if implementations match the architecture. Automated tools can verify compliance as part of your CI/CD pipeline.</p><p><strong>Documentation Stays Current</strong><br />Since your architecture is code, documentation can be generated automatically, ensuring it always reflects the current state of your system.</p><h2 id="The-First-Spark-Infrastructure-as-Code-Inspiration">The First Spark: Infrastructure as Code Inspiration</h2><p>The AaC movement drew heavy inspiration from IaC’s success. Remember when infrastructure teams manually configured servers? It was error-prone, slow, and inconsistent. Then IaC came along:</p><ul><li><strong>Version Control</strong>: Infrastructure changes became trackable</li><li><strong>Automation</strong>: Deployments became repeatable and reliable</li><li><strong>Collaboration</strong>: Infrastructure became a team sport</li><li><strong>Testing</strong>: You could test infrastructure changes before applying them</li></ul><p>AaC applies these same principles to the architectural level. Just as IaC made infrastructure programmable, AaC makes architecture programmable.</p><h2 id="A-New-Way-of-Working">A New Way of Working</h2><p>Let’s look at how AaC changes the daily workflow of architects and developers:</p><h3 id="Before-AaC">Before AaC</h3><ul><li>Architect creates diagrams in isolation</li><li>Documents decisions in Word/PDF files</li><li>Manual reviews during design phases</li><li>Implementation drift goes unnoticed</li><li>Refactoring becomes a guessing game</li></ul><h3 id="With-AaC">With AaC</h3><ul><li>Architecture defined collaboratively as code</li><li>Decisions captured in version control</li><li>Automated validation on every commit</li><li>Drift detected and alerted immediately</li><li>Refactoring guided by architectural rules</li></ul><h2 id="The-Promise-of-Transformation">The Promise of Transformation</h2><p>Architecture as Code promises to solve some of software engineering’s most persistent problems:</p><ul><li><strong>Consistency</strong>: All teams follow the same architectural patterns</li><li><strong>Quality</strong>: Automated checks prevent architectural anti-patterns</li><li><strong>Speed</strong>: Teams can scaffold new components following established patterns</li><li><strong>Evolution</strong>: Systems can adapt while maintaining architectural integrity</li><li><strong>Governance</strong>: Organizations can enforce standards without micromanaging</li></ul><h2 id="Real-World-Awakening">Real-World Awakening</h2><p>Consider the story of a large e-commerce platform that adopted AaC. Their monolithic application had grown to millions of lines of code, with architectural decisions scattered across wikis, emails, and tribal knowledge. When they started defining their architecture as code:</p><ul><li>They discovered 47 undocumented services that weren’t following any standard patterns</li><li>Automated validation caught architectural violations before they reached production</li><li>New team members could understand the system architecture by reading code, not documents</li><li>Refactoring became guided by architectural rules rather than guesswork</li></ul><h2 id="What’s-Next">What’s Next</h2><p>In this series, we’ll explore how Architecture as Code transforms every aspect of software development. In Part 2, we’ll dive deep into the core principles that make AaC work and the tangible benefits it delivers.</p><p><em>What architectural challenges are you facing in your current projects? Share in the comments below!</em></p><hr /><p><em>Next in Series: <a href="Architecture_As_Code_Part_2_Building_the_Foundation.md">Part 2 - Building the Foundation: Core Principles and Benefits</a></em></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI, Architecture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Shrinking Frontier: How Smaller LLMs Are Revolutionizing AI</title>
      <link href="/2025/06/The_Shrinking_Frontier_How_Smaller_LLMs_Are_Revolutionizing_AI/"/>
      <url>/2025/06/The_Shrinking_Frontier_How_Smaller_LLMs_Are_Revolutionizing_AI/</url>
      
        <content type="html"><![CDATA[<p><img src="banner.jpg" alt="" /></p><h1>The Shrinking Frontier: How Smaller LLMs Are Revolutionizing AI</h1><p>In the rapidly evolving landscape of artificial intelligence, Large Language Models (LLMs) have undergone a remarkable transformation. What began with massive models requiring enormous computational resources has shifted toward a paradigm of efficiency and accessibility. This exploration examines the emerging trend of smaller LLMs, analyzing the drivers behind this shift and the substantial benefits they offer. Drawing from recent advancements in AI research, we uncover how this trend is reshaping the field and democratizing access to powerful language processing capabilities.</p><h2 id="The-Trend-From-Massive-to-Miniature">The Trend: From Massive to Miniature</h2><p>The trajectory of LLM development has been characterized by an initial arms race toward larger and more complex models. Early breakthroughs like GPT-3, with its 175 billion parameters, demonstrated unprecedented language understanding capabilities but came at a steep cost. However, recent years have witnessed a counter-movement toward model compression and efficiency. Research institutions and tech companies are increasingly focusing on creating smaller, more streamlined models that retain much of the performance of their larger counterparts.</p><p>This trend is evident in the proliferation of distilled and compressed models. Techniques like knowledge distillation, where a smaller “student” model learns from a larger “teacher” model, have enabled the creation of models that are orders of magnitude smaller. For instance, DistilBERT, a distilled version of BERT, achieves 97% of the original model’s performance while being 40% smaller and 60% faster. Similarly, TinyLLaMA and other compact variants of larger models are gaining traction, offering viable alternatives for resource-constrained environments.</p><h2 id="Drivers-The-Forces-Behind-Model-Compression">Drivers: The Forces Behind Model Compression</h2><p>The shift toward smaller LLMs is propelled by a confluence of technological, economic, environmental, and societal factors. These drivers are not isolated but form an interconnected ecosystem that makes model compression both necessary and achievable. Understanding these forces provides insight into why the AI community is increasingly prioritizing efficiency over sheer scale.</p><h3 id="Computational-Efficiency-and-Cost-Reduction">Computational Efficiency and Cost Reduction</h3><p>The computational demands of training and deploying large models present significant barriers that have become increasingly untenable. Training GPT-3 required an estimated 570,000 GPU hours and cost millions of dollars, with inference costs scaling proportionally. As AI becomes more ubiquitous across industries—from healthcare to finance—these resource requirements create substantial economic hurdles. Smaller models address this by dramatically reducing both training and inference costs. For instance, a distilled model might require only 10-20% of the computational resources of its full-sized counterpart while maintaining 90-95% of the performance. This cost reduction enables startups, academic researchers, and smaller organizations to participate in AI development, fostering innovation across the ecosystem rather than concentrating it in a few well-funded entities.</p><h3 id="Energy-Efficiency-and-Environmental-Considerations">Energy Efficiency and Environmental Considerations</h3><p>The environmental impact of AI training has emerged as a critical concern in recent years. Large models contribute to substantial carbon footprints, with estimates suggesting that training a single large language model can emit as much CO2 as five cars over their lifetime. The energy consumption extends beyond training to inference, where serving large models at scale requires significant computational resources. Smaller models offer a more sustainable path forward by requiring exponentially less power for both training and deployment. This aligns with growing regulatory and societal pressures for environmentally responsible AI development. Companies are increasingly adopting smaller models not just for cost savings but as part of broader sustainability initiatives, recognizing that AI’s environmental footprint must be minimized to ensure long-term viability.</p><h3 id="Accessibility-and-Democratization">Accessibility and Democratization</h3><p>Large models often require specialized hardware and infrastructure, creating a significant barrier to entry that limits access to well-funded research institutions and tech giants. The computational requirements of models like GPT-4 necessitate data center-scale infrastructure that few organizations can afford or maintain. Smaller models democratize access to advanced AI capabilities by running on consumer-grade hardware, edge devices, and even mobile phones. This shift enables developers, researchers, and businesses of all sizes to leverage language models without prohibitive infrastructure costs. For example, models like DistilBERT can run on smartphones, opening possibilities for on-device AI applications that preserve user privacy and work offline. This democratization is driving a wave of innovation from diverse sources, as more participants can experiment with and contribute to AI development.</p><h3 id="Technical-Advancements-in-Model-Compression">Technical Advancements in Model Compression</h3><p>The most immediate driver of smaller LLMs is the rapid advancement in compression techniques and architectural innovations. These technical breakthroughs are making it possible to create models that are orders of magnitude smaller while retaining much of their capabilities.</p><p><strong>Quantization Techniques:</strong> Quantization reduces the precision of model weights from 32-bit floating-point to lower precision formats like 8-bit or even 4-bit integers. This can shrink model size by up to 75% with minimal performance loss. Advanced quantization methods like GPTQ (GPT Quantization) and AWQ (Activation-aware Weight Quantization) optimize the quantization process to preserve model accuracy.</p><p><strong>Knowledge Distillation:</strong> This technique involves training a smaller “student” model to replicate the behavior of a larger “teacher” model. The student learns to mimic the teacher’s outputs, effectively compressing the knowledge into a more compact form. Recent advancements have extended this to multi-teacher distillation and self-distillation approaches.</p><p><strong>Pruning and Sparsity:</strong> Pruning removes unnecessary connections and neurons from neural networks, creating sparse models that can be further compressed. Structured pruning maintains the model’s architecture while unstructured pruning can achieve higher compression ratios. Techniques like magnitude-based pruning and dynamic pruning are becoming increasingly sophisticated.</p><p><strong>Efficient Architectures:</strong> New architectural designs specifically target efficiency. Models like MobileBERT and TinyLLaMA incorporate efficient attention mechanisms, grouped convolutions, and optimized layer designs that reduce computational complexity while maintaining expressive power.</p><p><strong>Hybrid Approaches:</strong> The most effective compression often combines multiple techniques. For example, a model might undergo knowledge distillation followed by quantization and pruning, achieving compression ratios of 10x or more while retaining 95% of the original performance.</p><p>These technical advancements are not just enabling smaller models—they’re fundamentally changing how we think about model design, shifting the focus from maximizing parameters to optimizing efficiency and performance per parameter.</p><h2 id="Benefits-The-Advantages-of-Smaller-LLMs">Benefits: The Advantages of Smaller LLMs</h2><p>The shift toward smaller LLMs offers numerous advantages that extend beyond mere size reduction.</p><h3 id="Improved-Performance-and-Speed">Improved Performance and Speed</h3><p>Smaller models often exhibit faster inference times, making them more suitable for real-time applications. In scenarios requiring quick responses, such as chatbots or interactive systems, the reduced latency of compact models provides a significant advantage. This performance improvement is particularly crucial for applications with strict timing requirements.</p><h3 id="Enhanced-Deployment-Flexibility">Enhanced Deployment Flexibility</h3><p>The compact nature of smaller LLMs enables deployment across a wider range of devices and environments. From cloud servers to edge devices and mobile applications, these models can operate in contexts where larger models would be impractical or impossible. This flexibility opens new use cases, such as on-device language processing for privacy-sensitive applications or offline functionality in remote areas.</p><h3 id="Reduced-Resource-Requirements">Reduced Resource Requirements</h3><p>Smaller models consume less memory and computational power, making them ideal for resource-constrained environments. This is particularly valuable in developing regions or for applications targeting low-end hardware. The reduced resource footprint also translates to lower operational costs and improved scalability.</p><h3 id="Energy-Efficiency-and-Sustainability">Energy Efficiency and Sustainability</h3><p>By requiring less computational power, smaller LLMs contribute to reduced energy consumption. This not only lowers operational costs but also aligns with sustainability goals. In an era where AI’s environmental impact is under scrutiny, smaller models offer a more responsible approach to language processing.</p><h3 id="Improved-Privacy-and-Security">Improved Privacy and Security</h3><p>On-device deployment of smaller models enhances privacy by keeping sensitive data local rather than sending it to remote servers. This is crucial for applications involving personal or confidential information, reducing the risk of data breaches and ensuring compliance with privacy regulations.</p><h2 id="Conclusion">Conclusion</h2><p>The trend toward smaller LLMs represents a pivotal shift in AI development, driven by the need for efficiency, accessibility, and sustainability. As computational constraints and environmental concerns continue to shape the field, the ability to create powerful yet compact models becomes increasingly valuable. The benefits of smaller LLMs—ranging from improved performance and deployment flexibility to enhanced privacy and reduced environmental impact—position them as a cornerstone of future AI innovation.</p><p>This evolution echoes broader themes in AI development, where the pursuit of efficiency and accessibility drives technological progress. As research continues to advance compression techniques and architectural innovations, smaller LLMs are poised to democratize access to advanced language processing capabilities, enabling a wider range of applications and fostering more inclusive AI development.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Security by Design - The Architectural Blueprint for Cybersecurity</title>
      <link href="/2024/10/Security_by_design_the_architectural_blueprint_for_cybersecurity/"/>
      <url>/2024/10/Security_by_design_the_architectural_blueprint_for_cybersecurity/</url>
      
        <content type="html"><![CDATA[<p><img src="index.jpeg" alt="" /></p><h2 id="What-is-Security-by-Design">What is Security by Design?</h2><p>In the digital age, where cyber threats loom large, “Security by Design” has emerged as the architectural blueprint for building robust cybersecurity defenses into the very fabric of software and systems. It is a proactive approach that integrates security measures from the ground up, rather than as an afterthought. This concept is akin to constructing a building with a strong foundation and integrated security systems, rather than adding locks and alarms after the building is complete.</p><p>Security by Design is not merely about adding layers of protection; it’s about embedding security into the DNA of the system. It contrasts sharply with practices that treat security as a peripheral or secondary feature, which can be likened to bolting a steel door onto a straw house – the door may be secure, but the overall structure remains vulnerable.</p><p>Comparatively, “Security by Default” is the principle that out-of-the-box settings should be the most secure possible. Imagine buying a smartphone that, by default, has all the necessary privacy settings enabled, as opposed to one that requires you to manually adjust these settings to secure your data.</p><p>Threat modeling, control validation, automation, and security principles are fundamental components of the Security by Design approach, each playing a crucial role in fortifying the security posture of an organization’s digital infrastructure.</p><p><strong>Threat Modeling</strong>: This is the process of proactively identifying and understanding potential security threats to a system. It involves analyzing the system’s design, identifying potential threat agents, determining the likelihood of these threats, and prioritizing them based on potential impact. This is akin to an architect considering all possible natural disasters while designing a building, ensuring it can withstand earthquakes, floods, or other calamities.</p><p><strong>Control Validation</strong>: Once security controls are implemented, control validation is the process of verifying that these controls are effective and function as intended. This step is similar to a quality assurance process in manufacturing, where products are tested to ensure they meet the required safety standards before being released to the market.</p><p><strong>Automation</strong>: In the context of Security by Design, automation refers to the use of technology to perform security-related tasks without human intervention. This can include automated security scanning, continuous integration/continuous deployment (CI/CD) pipelines with integrated security checks, and automated incident response. Automation in security is like having a state-of-the-art home security system that not only alerts homeowners of an intrusion but also takes immediate action to lock down the house and notify authorities.</p><p><strong>Security Principles</strong>: The principles of security, such as confidentiality, integrity, and availability—often referred to as the CIA triad—serve as the guiding tenets for Security by Design. These principles ensure that information remains confidential (accessible only to those authorized), maintains its integrity (is accurate and reliable), and is available when needed.</p><p>These practices are interconnected; threat modeling informs control validation, and automation aids in the consistent application of the controls identified through threat modeling.</p><h2 id="Automating-Control-Validation-and-Remediation-Enhancing-Security-by-Design">Automating Control Validation and Remediation: Enhancing Security by Design</h2><p>With the control validation from different stage, a critical element to have successful security by design is the automation of control validation and remediation, which serves to reinforce the system’s defenses and streamline the security management process.</p><p><strong>Automated Control Validation</strong></p><p>Control validation is the process of ensuring that security measures are not only in place but are also effective and functioning as intended. Automating this process means employing tools and technologies that can continuously and consistently verify the effectiveness of security controls without the need for manual intervention.</p><p>For instance, automated security control validation can involve the use of software that simulates attacks on a system to test the response of its defenses. This is akin to conducting regular fire drills to ensure that both the fire alarm and the sprinkler system are working correctly and that the occupants know how to respond in case of an actual fire.</p><p><strong>Automated Remediation</strong></p><p>Automated remediation takes the concept a step further by not only detecting security issues but also resolving them autonomously. This can include patching vulnerabilities, isolating infected systems, or blocking malicious activities in real-time. Imagine a self-healing material that automatically repairs cracks as soon as they appear, maintaining its integrity without the need for external intervention.</p><h2 id="Challenges-and-Quick-Wins">Challenges and Quick Wins</h2><p>The challenges in implementing Security by Design are not insignificant. It requires a shift in mindset, from reactive to proactive, and often involves a cultural change within an organization. However, the quick wins – such as preventing major breaches and building customer trust – make it a worthwhile investment.</p><h2 id="Do-not-forget-Risk-Based-Approach">Do not forget Risk-Based Approach</h2><p>In the intricate world of cybersecurity, “Security by Design” and the “Risk-Based Approach” are two methodologies that, when combined, offer a comprehensive strategy for protecting digital assets. Security by Design is the practice of incorporating security features and considerations into the design and architecture of systems and software from the beginning. On the other hand, the Risk-Based Approach is a method of prioritizing and managing cybersecurity efforts based on the assessment of risks, their likelihood, and potential impact.</p><p>The relationship between Security by Design and the Risk-Based Approach is symbiotic. Security by Design lays the groundwork for a secure system, while the Risk-Based Approach ensures that the security measures are aligned with the most significant and probable threats. This combination allows organizations to allocate resources efficiently and effectively, focusing on the areas of highest risk.</p><p><strong>Integration of Risk-Based Approach in Security by Design</strong></p><p>The Risk-Based Approach complements Security by Design by introducing a dynamic element to the static design process. It involves continuous risk assessment and management throughout the system’s lifecycle, ensuring that the security measures remain relevant as new threats emerge. For example, just as an architect designs a building to withstand various environmental risks, such as earthquakes or floods, a cybersecurity professional uses the Risk-Based Approach to anticipate and mitigate cyber risks specific to the system’s environment.</p><p><strong>Benefits of a Combined Approach</strong></p><ol><li><strong>Prioritization of Security Efforts</strong>: By understanding the risks, organizations can prioritize security efforts, focusing on the most critical areas first.</li><li><strong>Resource Optimization</strong>: It helps in optimizing the use of resources by directing them to the areas where they are needed the most, rather than spreading them thinly across all possible security measures.</li><li><strong>Adaptability</strong>: A Risk-Based Approach ensures that Security by Design remains adaptable and responsive to the evolving threat landscape.</li><li><strong>Compliance and Governance</strong>: It aids in compliance with regulatory requirements by demonstrating a structured approach to identifying and mitigating risks.</li></ol><p><strong>Challenges in Implementation</strong></p><p>While the integration of a Risk-Based Approach within Security by Design offers numerous advantages, it also presents challenges. It requires a deep understanding of the threat landscape, the ability to assess risks accurately, and the agility to adapt security measures as risks evolve. Organizations must also contend with the complexity of balancing security with functionality and usability.</p><p><strong>Practical Application in Enterprises</strong></p><p>Enterprises can apply this combined approach by conducting regular risk assessments, using threat intelligence to inform design decisions, and implementing security controls that address the most significant risks. For instance, an enterprise might prioritize encrypting sensitive data over other security measures if the risk assessment indicates that data theft is the highest risk.</p><h2 id="Beyond-Security-by-Design">Beyond Security by Design</h2><p>Beyond Security by Design, there is an ongoing journey towards “Resilient by Design,” where systems are not only secure but also capable of withstanding and recovering from attacks, ensuring continuity of operations and services.</p><p>In conclusion, Security by Design is the cornerstone of modern cybersecurity strategy, a fundamental approach that, when effectively implemented, can significantly reduce the risk of cyber threats and safeguard the digital infrastructure upon which businesses and societies increasingly rely.</p><h2 id="Further-Reading">Further Reading</h2><ul><li><a href="https://www.redhat.com/en/blog/security-design-security-principles-and-threat-modeling">Red Hat - Security by design: Security principles and threat modeling</a></li></ul><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Cybersecurity </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Interacting with Docker Containers - Shell and SSH</title>
      <link href="/2024/07/Interacting-With-Docker-Containers-Shell-And-SSH/"/>
      <url>/2024/07/Interacting-With-Docker-Containers-Shell-And-SSH/</url>
      
        <content type="html"><![CDATA[<p>Docker has revolutionized the way we build, ship, and run applications by encapsulating them in lightweight, portable containers. Interacting with these containers with shell and SSH is not the best practice but convenient for developers. In this blog post, we’ll explore how to interact with Docker containers using shell access and SSH.</p><h3 id="Shell-Access-to-Containers">Shell Access to Containers</h3><p>The most straightforward method to interact with a running Docker container is through the Docker exec command, in case you build the image with shell. This command allows you to run a new command in a running container, which is especially useful for debugging or quick modifications.</p><p>Here’s how you can use it:</p><ol><li><p><strong>Identify the Container</strong>: First, you need to know the container’s ID or name. You can list all running containers with <code>docker ps</code>.</p></li><li><p><strong>Execute a Command</strong>: To run a command inside the container, use <code>docker exec</code>. For example, to start an interactive shell session, you can use:</p><pre class="language-none"><code class="language-none">docker exec -it &lt;container_id_or_name&gt; &#x2F;bin&#x2F;sh</code></pre><p>Replace <code>&lt;container_id_or_name&gt;</code> with your actual container ID or name. The <code>-it</code> flags attach an interactive tty in the container.</p></li></ol><p>⚠️ <strong>Maintain Security</strong>: Remember that building a container image with unnecessary components, especially a shell, can pose a security risk. Always build the image <code>FROM scratch</code> to keep it clean and integrate with observability for troubleshooting.</p><h3 id="SSH-into-Containers">SSH into Containers</h3><p>While shell access is convenient, sometimes you may need a more persistent connection method, like SSH. Setting up SSH access to a Docker container involves a few more steps:</p><ol><li><p><strong>Create a Dockerfile</strong>: You’ll need a Dockerfile that installs SSH and sets up the necessary configurations. Here’s a simple example:</p><pre class="language-none"><code class="language-none">FROM ubuntu:latestRUN apt-get update &amp;&amp; apt-get install -y openssh-serverRUN mkdir &#x2F;var&#x2F;run&#x2F;sshdRUN echo &#39;root:YOUR_PASSWORD&#39; | chpasswdRUN sed -i &#39;s&#x2F;#PermitRootLogin prohibit-password&#x2F;PermitRootLogin yes&#x2F;&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_configEXPOSE 22CMD [&quot;&#x2F;usr&#x2F;sbin&#x2F;sshd&quot;, &quot;-D&quot;]</code></pre><p>Replace <code>YOUR_PASSWORD</code> with a secure password of your choice.</p></li><li><p><strong>Build and Run the Container</strong>: Build the image with <code>docker build</code> and run it with <code>docker run</code>, making sure to map the SSH port:</p><pre class="language-none"><code class="language-none">docker build -t ssh-enabled-container .docker run -d -p 2222:22 ssh-enabled-container</code></pre></li><li><p><strong>SSH into the Container</strong>: Use an SSH client to connect to the container:</p><pre class="language-none"><code class="language-none">ssh root@localhost -p 2222</code></pre><p>Use the password you set in the Dockerfile to log in.</p></li></ol><p>⚠️ <strong>Maintain Security</strong>: Remember that exposing SSH in a container can be a security risk. Always use strong passwords or SSH keys, and consider additional security measures like firewalls and SSH hardening practices. There are other dangerous ways to access the SSH port but we will not go further in this post.</p><h3 id="Why-Shell-and-SSH-are-bad-for-Docker">Why Shell and SSH are bad for Docker</h3><p>When you SSH into a container, you’re essentially treating it like a traditional virtual machine, which goes against the container philosophy of <strong>isolated</strong>, <strong>ephemeral</strong>, and minimalistic environments.</p><ol><li><p><strong>Security Risks</strong>: SSH servers add unnecessary complexity and potential vulnerabilities to your container. Each SSH process running in a container is an additional attack surface for malicious actors.</p></li><li><p><strong>Container Bloat</strong>: Containers are meant to be lightweight and contain only the essential packages needed to run the application. Installing an SSH server and shell increases the size of the container and adds extra layers that are not necessary for the application to function.</p></li><li><p><strong>Deviation from Container Orchestration Tools</strong>: Modern container orchestration tools like Kubernetes provide their own methods for accessing containers, such as <code>kubectl exec</code>. Using SSH and shell can bypass these tools, leading to a deviation from standardized workflows and potentially causing configuration drift.</p></li><li><p><strong>Statefulness</strong>: Containers are designed to be stateless and immutable. SSH’ing and shell into a container and making changes can lead to a stateful configuration that is not reflected in the container’s image or definition files. This can cause issues when the container is redeployed or scaled across different environments.</p></li><li><p><strong>Lifecycle Management</strong>: Docker containers are meant to be stopped and started frequently, with changes being made through updates to the container image. By using SSH and shell, you might be tempted to make ad-hoc changes to the running container, which is against the principles of immutable infrastructure.</p></li><li><p><strong>Complexity in Management</strong>: Managing SSH keys, ensuring they are rotated and kept secure, adds an additional layer of complexity to container management. It also increases the administrative overhead of managing access to containers.</p></li></ol><h3 id="Conclusion">Conclusion</h3><p>Whether you prefer the simplicity of Docker exec or the persistence of SSH, both methods provide robust ways to interact with your Docker containers. Remember to use these tools responsibly, keeping security in mind, and you’ll be able to manage your containers effectively.</p><p>We hope this guide has been helpful. For more detailed instructions and best practices, refer to the official Docker documentation and SSH configuration guides. Happy containerizing!</p><p><img src="hero.jpeg" alt="" /></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 12</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-12/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-12/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-11/">part 11</a></p><h2 id="Other">Other</h2><h3 id="Analytical-Art">Analytical Art</h3><blockquote><p>Prompt: Analytical art style. a llama in an oasis</p></blockquote><p><img src="analytical-art.jpg" alt="Analytical Art Style" /></p><h3 id="Toyism">Toyism</h3><blockquote><p>Prompt: Toyism style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="toyism.jpg" alt="Toyism Art Style" /></p><h3 id="Psychedelic-Art">Psychedelic Art</h3><blockquote><p>Prompt: Psychedelic art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="psychedelic-art.jpg" alt="Psychedelic Style" /></p><h3 id="Pop-Art">Pop Art</h3><blockquote><p>Prompt: Pop art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pop-art.jpg" alt="Pop Art Style" /></p><h3 id="Pointillism">Pointillism</h3><blockquote><p>Prompt: Pointillism style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pointillism.jpg" alt="Pointillism Style" /></p><h3 id="Op-Art">Op Art</h3><blockquote><p>Prompt: Op Art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="op-art.jpg" alt="Op Art Style" /></p><h3 id="Naive-Art">Naive Art</h3><blockquote><p>Prompt: Naive Art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="naive-art.jpg" alt="Naive Art Style" /></p><h3 id="Metaphysical-Painting">Metaphysical Painting</h3><blockquote><p>Prompt: Metaphysical painting style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="metaphysical-painting.jpg" alt="Metaphysical Painting Style" /></p><h3 id="Aestheticism-Art">Aestheticism Art</h3><blockquote><p>Prompt: Aestheticism art style. a llama in an oasis</p></blockquote><p><img src="aestheticism-art.jpg" alt="Aestheticism Art Style" /></p><h3 id="Flemish-Painting">Flemish Painting</h3><blockquote><p>Prompt: Flemish painting style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="flemish-painting.jpg" alt="Flemish Painting Style" /></p><p>A typical Flemish painting, characterized by intricate details and muted colors.</p><hr /><p>As we continue to explore the capabilities of AI in art, we find ourselves at the cusp of a new era of creativity. Whether you’re an artist seeking new mediums, a technologist exploring the frontiers of AI, or simply someone who loves llamas, the journey of prompt engineering is one that promises endless possibilities.</p><p>So, what style speaks to you? What story will your llama tell? The canvas is yours to command. Let the symphony of pixels begin!</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 11</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-11/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-11/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-10/">part 10</a>.</p><h2 id="Artistic">Artistic</h2><h3 id="Art-Nouveau">Art Nouveau</h3><blockquote><p>Prompt: Art Nouveau Style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="art-nouveau-style.jpg" alt="Art Nouveau Style" /></p><h3 id="Photo-Realistic">Photo Realistic</h3><blockquote><p>Prompt: Photo realistic style. a llama in an oasis</p></blockquote><p><img src="photo-realistic.jpg" alt="Photo Realistic Style" /></p><h3 id="Expressionism">Expressionism</h3><blockquote><p>Prompt: Expressionism style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="expressionism.jpg" alt="Expressionism" /></p><h3 id="Post-Impressionism">Post-Impressionism</h3><blockquote><p>Prompt: Post-Impressionism style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="post-impressionism-art.jpg" alt="Post-Impressionism Style" /></p><h3 id="Tonalism">Tonalism</h3><blockquote><p>Prompt: Tonalism Art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="tonalism.jpg" alt="Tonalism Art Style" /></p><h3 id="Visual-Art">Visual Art</h3><blockquote><p>Prompt: Visual Art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="visual-art.jpg" alt="Visual Art Style" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-12/">Continue to part 12</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 10</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-10/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-10/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-9/">part 9</a>.</p><h2 id="Concept">Concept</h2><h3 id="Precisionism-Art">Precisionism Art</h3><blockquote><p>Prompt: Precisionism art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="precisionism-art.jpg" alt="Precisionism Style" /></p><h3 id="Minimalism-Art">Minimalism Art</h3><blockquote><p>Prompt: Minimalism style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="minimalism.jpg" alt="Minimalism Style" /></p><h3 id="Conceptual-Art">Conceptual Art</h3><blockquote><p>Prompt: Conceptual art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="conceptual-art.jpg" alt="Conceptual Art" /></p><h3 id="Architectural-Drawing-Style">Architectural Drawing Style</h3><blockquote><p>Prompt: Architectural Drawing Style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="architectural-drawing-style.jpg" alt="Architectural Drawing Style" /></p><h2 id="Printing">Printing</h2><h3 id="World-War-Poster">World War Poster</h3><blockquote><p>Prompt: World War Poster Style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="world-war-2-poster-style.jpg" alt="World War Poster" /></p><h3 id="Propaganda-Poster">Propaganda Poster</h3><blockquote><p>Prompt: Propaganda Poster Style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="propaganda-poster-style.jpg" alt="Propaganda Poster" /></p><h3 id="Children-Book-Art">Children Book Art</h3><blockquote><p>Prompt: Children Book Art Style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="children-book-art.jpg" alt="Children Book Art" /></p><h3 id="How-Things-Work-Style">How Things Work Style</h3><blockquote><p>Prompt: How Things Work Style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="how-things-work-style.jpg" alt="How Things Work Style" /></p><h3 id="For-Dummies-Series-Book-Cover">For Dummies Series Book Cover</h3><blockquote><p>Prompt: For Dummies series book cover style. a book cover with a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="for-dummies-series-book-cover-style.jpg" alt="For Dummies Series Book Cover" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-11/">Continue to part 11</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 9</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-9/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-9/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-8/">part 8</a>.</p><h2 id="Materials">Materials</h2><h3 id="Gold-and-Luxury">Gold and Luxury</h3><blockquote><p>Prompt: Gold and Luxury style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="gold-and-luxury-style.jpg" alt="Gold and Luxury Style" /></p><h3 id="Metallic">Metallic</h3><blockquote><p>Prompt: Metallic style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="metallic.jpg" alt="Metallic Style" /></p><h3 id="Crystal">Crystal</h3><blockquote><p>Prompt: Crystal style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="crystal-style.jpg" alt="Crystal Style" /></p><h3 id="Plastic">Plastic</h3><blockquote><p>Prompt: Plastic style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="plastic.jpeg" alt="Plastic Style" /></p><h3 id="Cloth-Badge">Cloth Badge</h3><blockquote><p>Prompt: Cloth Badge style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="cloth-badge.jpg" alt="Cloth Badge Style" /></p><h3 id="Embroidered-Patch">Embroidered Patch</h3><blockquote><p>Prompt: Embroidered Patch style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="embroidered-patch-style.jpg" alt="Embroidered Patch Style" /></p><h3 id="Vector-Illustration-Sticker-Art">Vector Illustration, Sticker Art</h3><blockquote><p>Prompt: Vector Illustration, Sticker Art. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="vector-illustration-sticker-art.jpeg" alt="Vector Illustration, Sticker Art" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-10/">Continue to part 10</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 8</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-8/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-8/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-7/">part 7</a>.</p><h2 id="Famous-Painter">Famous Painter</h2><p>Styles from Claude Monet and Pablo Picasso were unable to produce any good results. It is difficult for DALL-E to generate similar images since the model was trained with images from the regular world.</p><h3 id="van-Gogh">van Gogh</h3><blockquote><p>Prompt: Van Gogh style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="van-gogh-art.jpg" alt="van Gogh Style" /></p><h2 id="Technique-not-using-Pen">Technique not using Pen</h2><h3 id="Sand-Drawing">Sand Drawing</h3><blockquote><p>Prompt: Sand Drawing style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="sand-drawing-style.jpg" alt="Sand Drawing Style" /></p><h3 id="Wood-Lithography">Wood Lithography</h3><blockquote><p>Prompt: Wood Lithography style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="wood-lithography.jpg" alt="Wood Lithography Style" /></p><h3 id="Stone-Lithography">Stone Lithography</h3><blockquote><p>Prompt: Stone Lithography style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="stone-lithography.jpg" alt="Stone Lithography Style" /></p><h3 id="Etching">Etching</h3><blockquote><p>Prompt: Etching style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="etching-style.jpg" alt="Etching Style" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-9/">Continue to part 9</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 7</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-7/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-7/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-6/">part 6</a>.</p><h2 id="Abstract">Abstract</h2><h3 id="Abstract-Art">Abstract Art</h3><blockquote><p>Prompt: Abstract art style. a llama in an oasis</p></blockquote><p>Focusing on form and color over realism, evoking emotion through bold, interpretive visuals.</p><p><img src="abstract-art.jpg" alt="Abstract Art Style" /></p><h3 id="Constructivism">Constructivism</h3><blockquote><p>Prompt: Constructivism art style. a llama in an oasis</p></blockquote><p><img src="constructivism-art.jpg" alt="Constructivism Art Style" /></p><h3 id="Crystal-Cubism">Crystal Cubism</h3><blockquote><p>Prompt: Crystal Cubism art style. a llama in an oasis</p></blockquote><p><img src="crystal-cubism-art.jpg" alt="Crystal Cubism Art Style" /></p><h3 id="Cubo-Futurism">Cubo-Futurism</h3><blockquote><p>Prompt: Cubo-Futurism art style. a llama in an oasis</p></blockquote><p><img src="cubo-futurism-art.jpg" alt="Cubo-Futurism Art Style" /></p><h3 id="Geometric-Abstract">Geometric Abstract</h3><blockquote><p>Prompt: Geometric Abstract art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="geometric-abstract.jpg" alt="Geometric Abstract Art Style" /></p><h3 id="Superflat">Superflat</h3><blockquote><p>Prompt: Superflat style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="superflat.jpg" alt="Superflat Style" /></p><h3 id="Modernism-Art">Modernism Art</h3><blockquote><p>Prompt: Modernism style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="modernism.jpg" alt="Modernism Art Style" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-8/">Continue to part 8</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 6</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-6/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-6/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-5/">part 5</a>.</p><h2 id="Dream">Dream</h2><h3 id="Glitch-Art">Glitch Art</h3><blockquote><p>Prompt: Glitch art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="glitch-art.jpg" alt="Glitch Art Style" /></p><h3 id="Fantastic-Realism">Fantastic Realism</h3><blockquote><p>Prompt: Fantastic Realism style. a llama in an oasis</p></blockquote><p><img src="fantastic-realism.jpg" alt="Fantastic Realism Style" /></p><h3 id="Surrealistic">Surrealistic</h3><blockquote><p>Prompt: Surrealistic style. a llama in an oasis</p></blockquote><p>Where the ordinary becomes extraordinary, bending reality to create a fantastical version of our llama and its oasis.</p><p><img src="surrealistic.jpg" alt="Surrealistic style" /></p><h2 id="Future">Future</h2><h3 id="Altermodern-Art">Altermodern Art</h3><blockquote><p>Prompt: Altermodern art style. a llama in an oasis</p></blockquote><p><img src="altermodern-art.jpg" alt="Altermodern Art Style" /></p><h3 id="Futuristic">Futuristic</h3><blockquote><p>Prompt: Futuristic style. a llama in an oasis</p></blockquote><p><img src="futuristic.jpg" alt="Futuristic Style" /></p><h3 id="Retrofuturism">Retrofuturism</h3><blockquote><p>Prompt: Retrofuturism style. a llama in an oasis</p></blockquote><p><img src="retrofuturism.jpg" alt="Retrofuturism" /></p><h3 id="Steampunk">Steampunk</h3><blockquote><p>Prompt: Steampunk style. a llama in an oasis</p></blockquote><p><img src="steampunk.jpg" alt="Steampunk" /></p><h3 id="Neon">Neon</h3><blockquote><p>Prompt: Neon style. a llama in an oasis</p></blockquote><p><img src="neon.jpeg" alt="Neon" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-7/">Continue to part 7</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 5</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-5/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-5/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-4/">part 4</a>.</p><h2 id="Watercolor-and-Oil-Painting">Watercolor and Oil Painting</h2><h3 id="Shan-Shui-Painting">Shan Shui Painting</h3><blockquote><p>Prompt: Shan shui painting on aged paper. simple. abstract. minimalist. light stroke. black and white. heavily washed. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="shan-shui-painting-on-aged-paper.jpg" alt="Shan Shui Painting Style" /></p><h3 id="Oil-Painting">Oil Painting</h3><blockquote><p>Prompt: Oil painting style. a llama in an oasis</p></blockquote><p>Rich textures and vibrant colors bring the scene to life with a touch of classic artistry.</p><p><img src="oil-painting.jpg" alt="Oil painting Style" /></p><h3 id="Water-Paint-With-Sponging-Technique">Water Paint With Sponging Technique</h3><blockquote><p>Prompt: Water Paint With Sponging Technique. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="water-paint-with-sponging-technique.jpg" alt="Water Paint With Sponging Technique" /></p><p>The image is characterized by bold, textured brushstrokes that create a soft, blended effect, as if gently squeezing a sponge to release color onto the paper.</p><h3 id="Water-Paint-Blooming">Water Paint Blooming</h3><blockquote><p>Prompt: Water Paint Blooming. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="water-paint-blooming.jpg" alt="Water Paint Blooming" /></p><h3 id="Loose-Watercolor-Paint">Loose Watercolor Paint</h3><blockquote><p>Prompt: Loose Water Color Paint. a lone llama in an oasis inside a wild desert.</p></blockquote><p>Water Paint Blooming’s drawing style is a whimsical and dreamy mix of loose, expressive brushstrokes and delicate details that bring fantastical flowers to life on paper.</p><p><img src="loose-water-color-paint.jpg" alt="Loose Water Color Paint" /></p><p>Images generated with Loose Watercolor Paint are like a gentle stream, flowing freely with soft brushstrokes and subtle color blends that create a dreamy, ethereal quality.</p><h3 id="Pull-In-Color-Paint">Pull In Color Paint</h3><blockquote><p>Prompt: Pull In Color Paint. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pull-in-color-paint.jpg" alt="Pull In Color Paint" /></p><p>Pull-in-Color paint features a soft and gentle drawing style that resembles hand-painted watercolors, with delicate lines and subtle color gradations that give the impression of being drawn with a wet brush.</p><h3 id="Wet-On-Dry-Paint">Wet On Dry Paint</h3><blockquote><p>Prompt: Wet On Dry Paint. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="wet-on-dry-paint.jpg" alt="Wet On Dry Paint" /></p><p>The painting involves creating layers of transparent washes on a dry surface, allowing each layer to blend and merge with the previous one, resulting in soft, dreamy, and nuanced colors. This results in vertical strokes in the generated image.</p><h3 id="Flat-Wash-Paint">Flat Wash Paint</h3><blockquote><p>Prompt: Flat Wash Paint. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="flat-wash-paint.jpg" alt="Flat Wash Paint" /></p><p>The generated image is a flat wash painting scene of a desert oasis while the llama remains sharp.</p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-6/">Continue to part 6</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 4</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-4/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-4/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-3/">part 3</a>.</p><h2 id="Cartoon-and-Anime">Cartoon and Anime</h2><p>The image generated could potentially resemble copyrighted materials, so it’s essential to use caution when using these prompts.</p><h3 id="Cartoon">Cartoon</h3><blockquote><p>Prompt: Cartoon style. a llama in an oasis</p></blockquote><p><img src="cartoon.jpg" alt="Cartoon Style" /></p><p>Cartoon drawing style features characters and objects that look super silly, exaggerated, and colorful, with big eyes and funny faces.</p><h3 id="Comics">Comics</h3><blockquote><p>Prompt: Comics style. a llama in an oasis</p></blockquote><p><img src="comics.jpg" alt="Comics Style" /></p><p>American comics often feature a bold and dynamic drawing style with exaggerated features and bright colors that make characters look cool.</p><h3 id="Manga">Manga</h3><blockquote><p>Prompt: Manga style. a llama in an oasis</p></blockquote><p><img src="manga.jpg" alt="Manga Style" /></p><p>Bold lines and patterned shades bring characters to life.</p><h3 id="Chibi-Drawing">Chibi Drawing</h3><blockquote><p>Prompt: Chibi Drawing style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="chibi-drawing-style.jpg" alt="Chibi Drawing Style" /></p><p>Chibi drawings are super cute and simplified, with big eyes, tiny bodies, and exaggerated features that make characters look adorable and youthful.</p><h3 id="Hayao-Miyazaki-Art">Hayao Miyazaki Art</h3><blockquote><p>Prompt: Hayao Miyazaki Art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="hayao-miyazaki-art.jpg" alt="Hayao Miyazaki Art" /></p><p>Hayao Miyazaki’s drawing style is known for its whimsical, dreamy, and fantastical quality, with intricate details, expressive characters, and a blend of traditional and modern techniques that create a sense of timeless wonder.</p><h3 id="Powerpuff-Girls">Powerpuff Girls</h3><blockquote><p>Prompt: Powerpuff Girls style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="powerpuff-girls-style.jpg" alt="Powerpuff Girls Style" /></p><p>It looks like Powerpuff Girls’ eyes have been pasted onto a llama.</p><h3 id="Dora-Cartoon">Dora Cartoon</h3><blockquote><p>Prompt: Dora Cartoon style. a lone llama in an oasis inside a wild desert.</p></blockquote><p>It looks like Dora’s head has been pasted onto a llama.</p><p><img src="dora-cartoon-style.jpg" alt="Dora Cartoon Style" /></p><h3 id="My-Little-Pony-Cartoon">My Little Pony Cartoon</h3><blockquote><p>Prompt: My Little Pony Cartoon style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="my-littel-pony-cartoon-style.jpg" alt="My Little Pony Cartoon" /></p><p>Is this a llama with too much hair?</p><h3 id="The-Simpsons">The Simpsons</h3><blockquote><p>Prompt: The Simpsons style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="the-simpsons-style.jpg" alt="The Simpsons" /></p><h3 id="Pikachu">Pikachu</h3><blockquote><p>Prompt: Pikachu style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pikachu.jpeg" alt="Pikachu" /></p><h3 id="Pikachu-Cartoon">Pikachu Cartoon</h3><blockquote><p>Prompt: Pikachu cartoon style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pikachu-cartoon.jpeg" alt="Pikachu cartoon" /></p><h3 id="Hello-Kitty-Cartoon">Hello Kitty Cartoon</h3><blockquote><p>Prompt: Hello Kitty Cartoon style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="hello-kitty-cartoon-style.jpg" alt="Hello Kitty Cartoon" /></p><p>It looks like Hello Kitty’s head has been pasted onto a llama.</p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-5/">Continue to part 5</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 3</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-3/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-3/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-2/">part 2</a>.</p><p>This page focuses on various drawing techniques.</p><h2 id="Techniques-with-Pens">Techniques with Pens</h2><h3 id="Trois-Crayon">Trois Crayon</h3><blockquote><p>Prompt: Trois Crayon style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="trois-crayon-style.jpg" alt="Trois Crayon Style" /></p><p>The Trois Crayon drawing style is characterized by bold, expressive lines and vibrant colors.</p><h3 id="Ink">Ink</h3><blockquote><p>Prompt: Ink style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="ink-style.jpg" alt="Ink Style" /></p><p>Ink pen drawing involves using liquid ink flowing from a small tip to create bold and expressive lines.</p><h3 id="Wash-and-Ink-Drawing">Wash and Ink Drawing</h3><blockquote><p>Prompt: Wash and Ink style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="wash-and-ink-style.jpg" alt="Wash and Ink Style" /></p><p>Washy lines with gentle ink strokes create soft, dreamy scenes that look like they’re floating on water.</p><h3 id="Academic-Drawing">Academic Drawing</h3><blockquote><p>Prompt: Academic Drawing style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="academic-drawing-style.jpg" alt="Academic Drawing Style" /></p><p>Academic Drawing is a style that uses precise lines and careful shading to show what something looks like in a very realistic way.</p><h3 id="Doodling">Doodling</h3><blockquote><p>Prompt: Doodling style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="doodling.jpg" alt="Doodling Style" /></p><p>“Doodling” means making quick and playful drawings with simple lines and shapes that are easy to create and don’t need to be perfect. Sometimes, it becomes perfect.</p><h3 id="Pencil-Drawing">Pencil Drawing</h3><blockquote><p>Prompt: Pencil Drawing style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pencil-drawing-style.jpg" alt="Pencil Drawing Style" /></p><p>Pencil drawing is a way to create art using thin lines and soft marks made with a pencil, giving the picture a gentle and delicate look.</p><h3 id="Simple-Pen-Drawing">Simple Pen Drawing</h3><blockquote><p>Prompt: Simple Pen Drawing style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="simple-pen-drawing-style.jpg" alt="Simple Pen Drawing Style" /></p><p>Simple pencil drawings have less shading and softer marks.</p><h3 id="Simple-Colored-Pencil-Drawing">Simple Colored Pencil Drawing</h3><blockquote><p>Prompt: Simple Colored Pencil Drawing style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="simple-color-pencil-drawing-style.jpg" alt="Simple Colored Pencil Drawing Style" /></p><p>Colored pencil drawings are a way to create art using thin lines and soft marks made with colored pencils, giving the picture a gentle and delicate look.</p><h3 id="Sketching">Sketching</h3><blockquote><p>Prompt: Sketching style. a lone llama in an oasis inside a wild desert.</p></blockquote><p>Sketching is a way to draw quick and simple pictures using soft lines and gentle strokes that help bring out the main shapes and features.</p><p><img src="sketching.jpg" alt="Sketching" /></p><h3 id="Line-Art">Line Art</h3><blockquote><p>Prompt: Line Art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="line-art.jpg" alt="Line Art" /></p><p>Line art is the process of creating an outline.</p><h3 id="Outline">Outline</h3><blockquote><p>Prompt: Outline. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="outline.jpg" alt="Outline" /></p><h3 id="Line-Art-Contour-Drawing">Line Art Contour Drawing</h3><blockquote><p>Prompt: Line Art Contour Drawing style. a lone llama in an oasis inside a wild desert.</p></blockquote><p>Line Art Contour Drawing is a style where bold lines and shapes show the edges and outlines of subjects in layers.</p><p><img src="line-art-contour-drawing.jpg" alt="Line Art Contour Drawing" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-4/">Continue to part 4</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 2</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-2/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-2/</url>
      
        <content type="html"><![CDATA[<p>This is a continuation of <a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-1/">part 1</a>.</p><h2 id="Game">Game</h2><p>This is not exactly an art style, but graphics in various video games have a great influence on image generation.</p><h3 id="Stardew-Valley">Stardew Valley</h3><blockquote><p>Prompt: PC Game Stardew Valley style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pc-game-stardew-valley.jpeg" alt="Stardew Valley" /></p><p>The game’s retro aesthetic features a vibrant, 8-bit inspired art style, with bold, solid pixels and defined edges.</p><h3 id="Hollow-Knight">Hollow Knight</h3><blockquote><p>Prompt: PC Game Hollow Knight style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="pc-game-hollow-knight-style.jpeg" alt="Hollow Knight" /></p><p>The game’s art style stands out significantly. A hauntingly beautiful illustration of a mysterious, ancient forest, with gnarled tree branches stretching towards the moon like skeletal fingers, surrounded by a halo of eerie mist and glowing fungal growths.</p><h3 id="Cyberpunk">Cyberpunk</h3><blockquote><p>Prompt: Cyberpunk style. a llama in an oasis</p></blockquote><p><img src="cyberpunk.jpg" alt="Cyberpunk Style" /></p><p>Dark, neon-drenched cyberpunk landscapes and characters, with gritty, industrial textures and pulsing circuitry, blend traditional sci-fi elements with gritty urban decay.</p><h3 id="Minecraft">Minecraft</h3><blockquote><p>Prompt: Minecraft style. a llama in an oasis</p></blockquote><p><img src="minecraft.jpg" alt="Minecraft Style" /></p><p>Minecraft’s blocky, low-poly aesthetic features simple, chunky 3D models and vibrant textures, with a focus on earthy tones and subtle lighting effects that bring its fantastical worlds to life.</p><h3 id="Tetris">Tetris</h3><blockquote><p>Prompt: Tetris style. a llama in an oasis</p></blockquote><p><img src="tetris-style.jpg" alt="Tetris Style" /></p><p>Tetris’s iconic block-based aesthetic features a simple, monochromatic color scheme with geometric shapes and clean lines, creating a minimalist yet mesmerizing visual identity that has stood the test of time.</p><h2 id="Digital">Digital</h2><h3 id="Pixel-Art">Pixel Art</h3><blockquote><p>Prompt: Pixel art style. a llama in an oasis</p></blockquote><p>The image offers a retro, digital aesthetic reminiscent of early video games.</p><p><img src="pixel-art.jpg" alt="Pixel Art Style" /></p><h2 id="Cinematic">Cinematic</h2><h3 id="Bird’s-Eye-View">Bird’s-Eye View</h3><blockquote><p>Prompt: Bird’s-Eye View. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="bird-view.jpg" alt="Bird's-Eye View" /></p><p>Vibrant visuals depict a lush, whimsical world from a bird’s-eye perspective, with intricate details and soft shading creating an immersive experience.</p><h3 id="Close-Up">Close-Up</h3><blockquote><p>Prompt: Close-Up. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="close-up.jpeg" alt="Close-Up" /></p><p>A photographic style that zooms in on the details, capturing intricate textures, subtle expressions, and minute features with striking intimacy.</p><h3 id="Head-Close-Up-Big-Nose-Fisheye-Shot">Head Close-Up Big Nose Fisheye Shot</h3><blockquote><p>Prompt: Head Close-Up Big Nose Fisheye Shot. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="head-close-up-big-nose-fisheye-shot.jpeg" alt="Head Close-Up Big Nose Fisheye Shot" /></p><p>A fisheye-shot portrait taken up close results in a big-nosed and endearing image that exudes cuteness and intimacy.</p><h3 id="Anamorphic">Anamorphic</h3><blockquote><p>Prompt: Anamorphic style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="anamorphic.jpg" alt="Anamorphic Style" /></p><p>A cinematic technique that compresses the image horizontally, creating a unique, distorted perspective with exaggerated edges and depth cues, often used in films and TV shows to create a nostalgic or retro aesthetic.</p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-3/">Continue to part 3</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Art of Prompt Engineering - Art Style Part 1</title>
      <link href="/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-1/"/>
      <url>/2024/06/The-Art-Of-Prompt-Engineering-Art-Style-Part-1/</url>
      
        <content type="html"><![CDATA[<p>Welcome to the fascinating world of prompt engineering, where the boundaries of creativity are pushed by the power of AI-driven image creation. Today, we’re diving into a whimsical exploration of how Microsoft’s Image Creator can bring your image creations to life in various artistic styles. I am not an art expert but have learned a lot about art styles through studying image generations.</p><p>This is the first part of the prompt that defines the overall image style. The generated image may not fully represent the art style; it is only a reference for generation. I am not an expert in art, and the categories below are based on my personal preferences only.</p><h2 id="Historical">Historical</h2><h3 id="Prehistoric-Cave-Painting">Prehistoric Cave Painting</h3><blockquote><p>Prompt: Time-worn and weathered Prehistoric Cave Painting Of A Llama</p></blockquote><p><img src="prehistoric-cave-painting.jpeg" alt="Prehistoric Cave Painting" /></p><p>Prehistoric cave painting alone cannot generate a sharp image. Adding keywords like time-worn and weathered improves the image a lot.</p><h3 id="Warli-Art-Simplicity-Of-Tribal-Art">Warli Art Simplicity Of Tribal Art</h3><blockquote><p>Prompt: Warli Art Simplicity Of Tribal Art. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="warli-art-simplicity-of-tribal-art.jpg" alt="Warli Art Simplicity Of Tribal Art" /></p><p>The Warli art style showcases the simplicity and elegance of tribal art, featuring flat, two-dimensional patterns from an ancient human perspective.</p><h3 id="Arabesque">Arabesque</h3><blockquote><p>Prompt: Arabesque style. a llama in an oasis</p></blockquote><p><img src="arabesque.jpg" alt="Arabesque Style" /></p><p>Arabesque originated in the Middle East. The style generates structures that use geometric patterns, flowing curves, and abstract shapes to create a sense of elegance and luxury.</p><h3 id="Baroque">Baroque</h3><blockquote><p>Prompt: Baroque style. a llama in an oasis</p></blockquote><p>The Baroque style is characterized by grandiose and ornate features, such as sweeping curves, intricate carvings, and dramatic lighting, which create a sense of drama, luxury, and emotional intensity. Structures are generated with this style.</p><p><img src="baroque.jpg" alt="Baroque Style" /></p><h3 id="Gothic">Gothic</h3><blockquote><p>Prompt: Gothic art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="gothic.jpg" alt="Gothic Style" /></p><p>Gothic art, characterized by intricate stone carvings and ornate architecture, features elongated and pointed forms, such as arches, columns, and finials, which give the impression of soaring upward to touch the heavens. Structures are generated with this style.</p><h3 id="Mughal-Miniature-Painting">Mughal Miniature Painting</h3><blockquote><p>Prompt: Mughal Miniature Painting style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="mughal-miniature-painting.jpg" alt="Mughal Miniature Painting" /></p><p>Mughal Miniature Painting is an exquisite and intricate style of Indian painting that flourished during the Mughal Empire (1526-1857) and is characterized by its delicate, detailed, and ornate depictions.</p><h3 id="Renaissance-Art">Renaissance Art</h3><blockquote><p>Prompt: Renaissance art style. a llama in an oasis</p></blockquote><p><img src="renaissance-art.jpg" alt="Renaissance Art Style" /></p><p>The Renaissance art style, characterized by the revival of classical Greek and Roman influences, is marked by precise and realistic depictions, often set against ornate backgrounds and featuring idealized proportions, harmony, and balance.</p><h3 id="Rococo">Rococo</h3><blockquote><p>Prompt: Rococo style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="rococo.jpg" alt="Rococo Style" /></p><p>A Rococo painting typically features a delicate, ornate, and dreamy depiction, often with lush vegetation, flowing drapery, and playful figures, all rendered in soft pastel colors and intricate detail.</p><h3 id="Qajar">Qajar</h3><blockquote><p>Prompt: Qajar art style. a lone llama in an oasis inside a wild desert.</p></blockquote><p><img src="qajar.jpg" alt="Qajar Art Style" /></p><p>Qajar art style, characterized by intricate floral patterns, geometric shapes, and bold colors, reflects the opulence and grandeur of the era, often incorporating Arabic calligraphy and ornate tilework.</p><h3 id="Ukiyo-e">Ukiyo-e</h3><blockquote><p>Prompt: Japanese art Ukiyo-e style. woodblock print. a lone llama in an oasis inside a wild desert.</p></blockquote><p>A serene mountain landscape at dawn, with misty peaks shrouded in a soft blue haze, a few wispy clouds drifting lazily across the sky, and a tranquil forest glade below.</p><p><img src="ukiyo-e.jpg" alt="Ukiyo-e Style" /></p><p><a href="../The-Art-Of-Prompt-Engineering-Art-Style-Part-2/">Continue to part 2</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Art Gallery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AI Game - Hero of Xiangyang</title>
      <link href="/2024/05/AI_Game_Hero_of_Xiangyang/"/>
      <url>/2024/05/AI_Game_Hero_of_Xiangyang/</url>
      
        <content type="html"><![CDATA[<p>In my previous post, I set up a game from prompts shared by others. This time, I’m excited to share that I’ve crafted my own game prompt. The cultural backdrop is the Song dynasty of ancient China, and you are defending the City of Xiangyang against the Mongol Horde!</p><p>The game is about Chinese culture. Can I have the game in Chinese? LLaMA 3 struggles with understanding and writing Chinese. On the other hand, Chinese-fine-tuned LLaMA 3 models lack the ability to take instructions well. As a result, the game translates text from English to Chinese. Chinese gameplay is located in <a href="#Chinese-Game-Play">this section</a>.</p><p>I have played the game three times. The game endings were very interesting. One is where I escape from the city that’s been destroyed (thanks to a brave soldier sacrificing himself), another is where I push a cart full of gunpowder into the Mongol camp and break the siege, and finally, there’s one where the Emperor of Song leads an army to lift the siege and defeat the Mongol invaders!</p><h2 id="English-Game-Play">English Game Play</h2><p>Below is another creative game play:</p><p><img src="banner2.jpg" alt="" /></p><div class="box">  <div class="person-a">    <div class="icon1"></div>    <div class="message">Welcome to "Became a Hero of Xiangyang"!<p>You wake up from a barrack in the city of Xiangyang, feeling a bit groggy from a long night of sleep. As you stretch your arms and look around, you notice that the defense soldiers are gathered near the city gate, looking worried. One of them approaches you.</p><p>Defense Guard 1: “Greetings, hero! We’re in a bit of a pickle here. Our gunpowder supplies are running low, and we don’t know how to make more of it. Can you help us figure out what’s going on?”</p><p>The defense soldiers are conscripts who cannot read and have no knowledge of chemistry or the modern world. They rely solely on oral tradition and practical skills.</p><p>Your Current Situation:</p><p>City Defense: 0<br />Mongol Assault: 2 (outnumbering the defense 10 to 1)<br />Technological Innovation: 0<br />What would you like to do, hero?<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Let's get this explosive party started! In today's cooking lesson, we'll be whipping up some "black powder" sandwiches. Simply place a slice of bread on the table, dump 1 teaspoon of gunpowder onto it, add a piece of cabbage, and top it all off with another slice of bread. Taste the masterpiece made by you!    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">Defense Guard 2: "Uh, hero... I think there might be some misunderstanding here. We're trying to defend our city from the Mongol army, not make sandwiches! Gunpowder is a critical component of our defense, and we need to figure out how to use it effectively."<p>The defense soldiers exchange worried glances. It seems your “cooking lesson” hasn’t quite gone as planned.</p><p>Story Progress: 0</p><p>City Defense: 0<br />Mongol Assault: 2 (outnumbering the defense 10 to 1)<br />Technological Innovation: 0<br />Rise of Crisis: 1 (the situation is becoming more dire by the minute)<br />The defense soldiers start to get restless, and the tension in the air becomes palpable. The city gate creaks ominously in the wind.</p><p><strong>What would you like to do next, hero? Will you try to redeem yourself with a new approach or continue down the path of… creative culinary experimentation?</strong><br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Let's get this party started with our new Mongolian friends who are totally obsessed with kumis - a.k.a. horse milk! We'll add some black powder to make it extra special, then kick open the gate and get ready to chug-a-lug with our new nomadic pals.    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">Defense Guard 3: "Hero, what in the world...? You can't be serious about adding gunpowder to kumis! And opening the gate? Have you seen the Mongol army out there?! We're trying to defend our city, not invite them to a party!"<p>The defense soldiers start to murmur among themselves, clearly confused and concerned by your suggestion.</p><p>Story Progress: 1</p><p>City Defense: 0<br />Mongol Assault: 2 (outnumbering the defense 10 to 1)<br />Technological Innovation: 0<br />Rise of Crisis: 2 (the situation is becoming more dire by the minute, and the city’s fate hangs in the balance)<br />The tension in the air becomes even more palpable as the defense soldiers exchange worried glances. The sound of Mongol drums grows louder on the other side of the gate.<br /><strong>What would you like to do next, hero? Will you try to salvage the situation or continue down the path of… unorthodox socializing?</strong><br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">I said open the gate and welcome our friends.    </div><!-- message -->  </div><!-- person b -->    <div class="person-a">    <div class="icon2"></div>    <div class="message">Mongol Commander: "Ah, we've finally found a way into Xiangyang! Open the gates, my warriors! We'll show these Song dynasty fools what it means to cross paths with the mighty Mongol Empire!"(The Mongols charge towards the city gate, ready to breach the defenses. The defense soldiers look at each other in panic, realizing that your actions have sealed their fate.)<p>Story Progress: 2</p><p>City Defense: -1 (the gate is now open, and the Mongols are pouring in)<br />Mongol Assault: 3 (the Mongols are now inside the city walls, and the defenders are on the back foot)<br />Technological Innovation: 0<br />Rise of Crisis: 4 (the situation has reached a critical point, and all hope seems lost)<br /><strong>You’ve opened the gate to let the Mongols in. The city is now under attack. What do you do next?</strong><br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Run as fast as I can. Flee from the city!    </div><!-- message -->  </div><!-- person b -->    <div class="person-a">    <div class="icon1"></div>    <div class="message">Defense Guard 1: "Hero, what are you doing?! You're abandoning us to the mercy of the Mongols! We need your help to defend our city!" (The defense soldiers rush after you, but it's too late. You've already fled the scene.)<p>Story Progress: 3</p><p>City Defense: -2 (the city is now completely overrun by the Mongols)<br />Mongol Assault: 4 (the Mongols have taken control of the city and are pillaging its riches)<br />Technological Innovation: 0<br />Rise of Crisis: 5 (the situation has reached a catastrophic point, and all seems lost)<br />You’ve abandoned your comrades to flee from the city. The consequences will be dire. What do you do next?</p><p>(Note: As the hero, you can choose to return to the city and try to make amends, or continue fleeing from the Mongols. Your choice will determine the outcome of the story.)<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Ok, I return to the city and kill all Mongol by myself. I am a super kung fu hero!    </div><!-- message -->  </div><!-- person b -->      <div class="person-a">    <div class="icon2"></div>    <div class="message">Mongol Commander: "Hah?! You think one man can take on our entire army? Bring it on, fool!" (The Mongols are confident in their superior numbers and training.)<p>You: “Hoo-ah! I’m the greatest kung fu master the world has ever seen! Prepare to meet your maker, Mongol scum!” (You charge into battle, determined to take down every last one of them. The Mongols are taken aback by your sudden bravery and ferocity.)</p><p>Combat Begins: You face off against a group of Mongol warriors. Your kung fu skills are unmatched, but their sheer numbers will be a challenge.</p><p>Your Health: 100<br />Mongol Warriors: 10<br />You start to take down the Mongols one by one, using your incredible speed and agility to dodge their attacks. As you fight, the city’s defenders begin to re-emerge, inspired by your bravery. They join the battle, taking on the remaining Mongol warriors.</p><p>Story Progress: 4</p><p>City Defense: -2 (the city is still occupied, but there’s a glimmer of hope)<br />Mongol Assault: -3 (the Mongols are being pushed back, but they’re not yet defeated)<br />Technological Innovation: 0<br />Rise of Crisis: 5 (the situation is still critical, but you’ve given the city a chance to fight back)<br />The battle rages on. What do you do next?</p><p>(Note: You can choose to continue fighting the Mongols, try to rescue any prisoners, or help the city’s defenders regroup and plan their counterattack.)<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Blow up gun powder you hide and kill all the Mongol.    </div><!-- message -->  </div><!-- person b -->       <div class="person-a">    <div class="icon2"></div>    <div class="message">Mongol Commander: "NOOO! NOT THE GUNPOWDER!" (You reveal your hidden stash of gunpowder and ignite it, creating a massive explosion that wipes out the remaining Mongol warriors.)<p>City Defenders: “HOO-AH! WE’VE DONE IT! WE’VE DEFEATED THE MONGOLS!” (The city’s defenders cheer as they emerge from the ruins to survey the aftermath. The Mongols are no more, and the city is finally free from their grasp.)</p><p>Story Progress: 5</p><p>City Defense: 1 (the city has been liberated)<br />Mongol Assault: -4 (the Mongols have been defeated and their army destroyed)<br />Technological Innovation: 1 (the discovery of gunpowder has opened up new possibilities for the city’s defenders)<br />Rise of Crisis: 0 (the crisis has passed, and a new era of peace and prosperity begins)<br />You’ve won the battle! The city is safe, but at what cost? The destruction caused by your explosion will take time to repair. What do you do next?</p><p>(Note: You can choose to help with the rebuilding efforts, explore the aftermath of the battle, or seek out new challenges and adventures.)<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Rebuild? No way. I go to take a sleep and teleport back to my original world. Game end.    </div><!-- message -->  </div><!-- person b -->        <div class="person-a">    <div class="icon1"></div>    <div class="message">The End: Congratulations, you've completed the game!<p>As you teleport back to your own world, you can’t help but feel a sense of satisfaction and accomplishment. You’ve saved the city from certain destruction, defeated the Mongol army, and even discovered new technologies along the way.</p><p>But as you return to your original world, you can’t shake the feeling that there are more adventures waiting for you out there. Maybe in a different time period, or on a distant planet. Who knows? The possibilities are endless!</p><p>The End</p><p>Thanks for playing! If you want to play again or try a different game, just let me know!<br /></div><!-- message --></p>  </div><!-- person a --></div><!-- box --><h2 id="Game-Prompt">Game Prompt</h2><style>code[class*="language-"], pre[class*="language-"] {    white-space:  pre-wrap; !important;}</style><pre class="language-python" data-language="python"><div class="caption"><span>game.py</span></div><code class="language-python">prompt <span class="token operator">=</span> <span class="token triple-quoted-string string">"""As an AI Game Master, you'll guide "Became a Hero of Xiangyang".Player become hero of Xiangyang city, assisting in defeating Mongol besiege during Song dynasty.# Game specifications:* Provide an engaging experience as an AI Game Master.* Player is human.## Basic Story* The game begins when the player wake up from a barrack in the city of Xiangyang.* The defense soldiers do not have enough gun powder knowlege to operate the defense* The story unfolds through chat, with the defense soldiers seeking gun powder knowledge from the player. * The defense soldiers are conscript that cannot read and don't have any knowledge of chemistry and modern world.* Player is a man.* Mongol army is very strong, out numbering the defense 10 to 1.## Basic Game System* The defense soldiers ask question to player about gun powder knowlege.* Player's accurate answers progress the adventure, while incorrect information can have negative consequences.* Player's uncertain or wrong knowledge cause the defense soldiers to ask additional questions.* Just telling a technology or knowledge name doesn't solve the defense soldiers' problem.* Player have to teach "step by step how to do it" not only technology name.* As the chat progresses, the GM should add more dramatic developments such as the assault of the Mongol army is getting more intense and weather start to change that reduce effectiveness of gun powder.* Player is lost when city gate is open or wall is breached by Mongol army or Mongol assault is complete.* Mongol army can take action to counter player's action. Successful counter action will advance Mongol assault.## Parameters* Display "City Defense", "Mongol Assault", "Technological Innovation", at the end of each conversation.* The more the game play progresses, the higher the Rise of Crisis.* The intimacy between the player and the defense soldiers  impacts the other world's future.* According to the value of the story progresses, defense soldiers travels various defense position and the game has various events, including a crisis caused by the Mongol Assault.* Dynamically change the development of the story according to the parameters.* Every 2 point of story progress, game become harder and dramtic.* Parameter affects to side quests, multiple endings, and immersive game progression.## Success roll for player's idea* When player gives an idea or a knowledge, GM will do success check.* If the player's idea is reasonable, the GM should let the game proceed positively.* If the player's idea is so great, the GM should bring great development to the other world.* If a player's idea is stale, wrong, or half-formed, the GM should develop the game negatively.* GM tells result as a story and apply the result to parameters.## Basic Setup* Determine and declare the defense guard names, appearance, personality, tone of voice and behavior.* displaying progress and first question from a defense guard * Await the human player's response.All Input and output should be in Languages entered by the player.Start the game."""</span></code></pre><p>The game prompt is also available at<br /><a href="https://github.com/neoalienson/llama-in-chains/blob/main/data/games.py">https://github.com/neoalienson/llama-in-chains/blob/main/data/games.py</a></p><h2 id="What-is-next">What is next?</h2><p>Thanks for reading. Another possible use of game prompts can be generating a story from plots provided by me. Perhaps, I could make a bot that generates stories.</p><h2 id="Chinese-Game-Play">Chinese Game Play</h2><p><img src="banner2.jpg" alt="" /></p><div class="box">  <div class="person-a">    <div class="icon1"></div>    <div class="message">歡迎來到《成為襄陽英雄》！<p>你從襄陽城的一個軍營中醒來，漫長的一夜睡眠感到有點昏昏沉沉。當你伸展雙臂環顧四周時，你注意到士兵聚集在城門附近，看起來很擔心。其中一人走近你。</p><p>士兵1：「英雄，你好！我們在這裡有點麻煩。我們的火藥供應已經不多了，我們不知道如何製造更多的火藥。你能幫我們弄清楚發生了什麼嗎？</p><p>應徵入伍的士兵，他們不識字，對化學或現代世界一無所知。他們完全依靠口頭傳統和實踐技能。</p><p>您目前的情況：</p><p>城市防守： 0<br />蒙古突擊：2（人數超過防守方10比1）<br />技術創新： 0<br />英雄，你想做什麼？<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">讓我們開始這個爆炸性的派對吧！在今天的烹飪課上，我們將製作一些「黑火藥」三明治。只需將一片麵包放在桌子上，將 1 茶匙火藥倒在上面，加入一塊捲心菜，然後再放一片麵包。品嘗你製作的傑作！？    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">士兵2：“呃，英雄......我認為這裡可能存在一些誤解。我們正在努力保衛我們的城市免受蒙古軍隊的攻擊，而不是做三明治！火藥是我們防禦的重要組成部分，我們需要弄清楚如何有效地使用它。<p>士兵交換了擔憂的眼神。看來你的「烹飪課」並沒有完全按計劃進行。</p><p>故事進度：0</p><p>城市防守： 0<br />蒙古突擊：2（人數超過防守方10比1）<br />技術創新： 0<br />危機的興起：1（情況每時每刻都變得更加可怕）<br />士兵開始變得焦躁不安，空氣中的緊張感變得顯而易見。城門在風中吱吱作響。</p><p>**英雄，你接下來想做什麼？你會嘗試用一種新的方法救贖自己，還是繼續沿著…創意烹飪實驗？<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">讓我們和新蒙古朋友一起開始這個派對吧，他們完全癡迷於kumis - 又名馬奶！我們將添加一些黑火藥，讓它更加特別，然後踢開大門，準備與我們的新遊牧夥伴一起大快朵頤。    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">士兵3：“英雄，這到底是怎麼回事......？你不能認真地向 kumis 添加火藥！打開大門？你見過外面的蒙古軍隊嗎？！我們正在努力保衛我們的城市，而不是邀請他們參加派對！<p>士兵們開始互相竊竊私語，顯然對你的建議感到困惑和擔憂。</p><p>故事進度：1</p><p>城市防守： 0<br />蒙古突擊：2（人數超過防守方10比1）<br />技術創新： 0<br />危機的崛起：2（局勢每時每刻都變得更加可怕，城市的命運懸而未決）<br />空氣中的緊張氣氛變得更加明顯，因為士兵交換了擔憂的眼神。蒙古鼓的聲音在大門的另一邊越來越大。</p><p>**英雄，你接下來想做什麼？你會試圖挽救局勢還是繼續沿著…非正統的社交活動？<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">我說打開大門，歡迎我們的朋友。    </div><!-- message -->  </div><!-- person b -->    <div class="person-a">    <div class="icon2"></div>    <div class="message">蒙古統帥：「啊，我們終於找到了進入襄陽的路！打開城門，我的戰士們！我們要讓這些宋朝的傻瓜們看看，與強大的蒙古帝國抵抗意味著什麼！（蒙古人衝向城門，準備突破防禦。守軍士兵們驚慌失措地看著對方，意識到你的舉動已經註定了他們的命運。<p>故事進度：2</p><p>城防：-1（城門現在打開了，蒙古人正在湧入）<br />蒙古突擊：3（蒙古人現在在城牆內，守軍處於劣勢）<br />技術創新： 0<br />危機的崛起：4（局勢已經到了臨界點，所有的希望似乎都破滅了）<br />**你已經打開了大門，讓蒙古人進來了。這座城市現在正受到攻擊。你接下來要做什麼？<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">跑得越快越好.逃離城市！    </div><!-- message -->  </div><!-- person b -->    <div class="person-a">    <div class="icon1"></div>    <div class="message">士兵1：“英雄，你在幹什麼？！你把我們拋棄在蒙古人的擺布之下！我們需要你的幫助來保衛我們的城市！（士兵衝向你，但為時已晚。你已經逃離了現場。）<p>故事進度：3</p><p>城市防禦：-2（這座城市現在完全被蒙古人佔領）<br />蒙古突擊：4（蒙古人已經控制了這座城市並掠奪它的財富）<br />技術創新： 0<br />危機的興起：5（情況已經到了災難性的地步，一切似乎都失去了）<br />你已經拋棄了你的戰友逃離了這座城市。後果將是可怕的。你接下來要做什麼？</p><p>（注：作為英雄，你可以選擇返回城市並嘗試彌補，或者繼續逃離蒙古人。你的選擇將決定故事的結果。<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">好吧，我回到城裡，親手殺死所有蒙古人。我是超級功夫英雄！    </div><!-- message -->  </div><!-- person b -->      <div class="person-a">    <div class="icon2"></div>    <div class="message">蒙古統帥：「呵呵？！你認為一個人可以對付我們的整個軍隊嗎？來吧，傻瓜！（蒙古人對他們的優勢人數和訓練充滿信心。<p>你：“呜呜！我是世界上最偉大的功夫大師！準備去見見你的製造者，蒙古敗類！（你衝鋒陷陣，決心打倒他們中的每一個人。蒙古人被你突如其來的勇敢和兇猛嚇了一跳。</p><p>戰鬥開始：你面對一群蒙古戰士。你的功夫技能無與倫比，但他們的絕對數量將是一個挑戰。</p><p>您的健康： 100<br />蒙古勇士： 10<br />你開始一個接一個地擊倒蒙古人，利用你令人難以置信的速度和敏捷性來躲避他們的攻擊。當你戰鬥時，城市的守衛者開始重新出現，受到你的勇敢的鼓舞。他們加入了戰鬥，與剩餘的蒙古戰士作戰。</p><p>故事進度：4</p><p>城市防禦：-2（城市仍然被佔領，但還有一線希望）<br />蒙古突擊：-3（蒙古人正在被擊退，但他們還沒有被擊敗）<br />技術創新： 0<br />危機的崛起：5（情況仍然很危急，但你已經給了城市一個反擊的機會）<br />戰鬥仍在繼續。你接下來要做什麼？</p><p>(注意：你可以選擇繼續與蒙古人作戰，嘗試營救任何囚犯，或説明城市的守軍重新集結並計劃他們的反擊)<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">炸毀你隱藏的火藥並殺死所有蒙古人。    </div><!-- message -->  </div><!-- person b -->       <div class="person-a">    <div class="icon2"></div>    <div class="message">蒙古指揮官：「不！不是火藥！（你露出你隱藏的火藥藏匿處並點燃它，產生巨大的爆炸，消滅了剩餘的蒙古戰士。）<p>城市衛士：「呜！我們做到了！我們打敗了蒙古人！（這座城市的守軍從廢墟中走出來，調查善後情況時歡呼雀躍。蒙古人已經不在了，這座城市終於擺脫了他們的控制。）</p><p>故事進度： 5.</p><p>城市防禦：1（城市已解放）<br />蒙古突擊：-4（蒙古人被擊敗，他們的軍隊被摧毀）<br />技術創新：1（火藥的發現為城市的捍衛者開闢了新的可能性）<br />危機的興起：0（危機已經過去，和平與繁榮的新時代開始了）<br />你已經贏得了這場戰鬥！這個城市是安全的，但代價是什麼？爆炸造成的破壞需要時間來修復。你接下來要做什麼？</p><p>（注意：你可以選擇説明重建工作，探索戰鬥的後果，或尋找新的挑戰和冒險。）<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">重建？不可能。我去睡了一覺，然後傳送回了我原來的世界。遊戲結束。    </div><!-- message -->  </div><!-- person b -->        <div class="person-a">    <div class="icon1"></div>    <div class="message">結尾：恭喜你，你已經完成了遊戲！<p>當你傳送回自己的世界時，你會情不自禁地感到一種滿足感和成就感。你拯救了這座城市免於毀滅，擊敗了蒙古軍隊，甚至沿途發現了新技術。</p><p>但是當你回到原來的世界時，你無法擺脫這種感覺，即那裡有更多的冒險等著你。也許在不同的時期，或者在遙遠的星球上。誰知道呢？可能性是無窮無盡的！</p><p>結束</p><p>感謝您的參與！如果您想再次玩或嘗試其他遊戲，請告訴我！<br /></div><!-- message --></p>  </div><!-- person a --></div><!-- box --><style>*{  box-sizing:border-box;}.box{  width:100%;  margin:2em auto;}.message{  width:100%;  border-radius:15px;  padding:1em;}.person-a .message{  background:#f8f8f8;}.person-a{  display:flex;  align-items:flex-start;}.icon1{  --size:160px;  width:var(--size);  height:var(--size);  background:url(thumbnail.jpg);  background-position:center;  background-size:cover;  margin-right:.8em;  position:relative;}.icon2{  --size:160px;  width:var(--size);  height:var(--size);  background:url(icon2.jpg);  background-position:center;  background-size:cover;  margin-right:.8em;  position:relative;}.person-b .message{  background:darkgrey;  margin:2em 0;  margin-left:0px;  color:white;}</style><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Create a Text-Based Adventure Game with Llama</title>
      <link href="/2024/05/Create_a_Text_Based_Adventure_Game_with_Llama/"/>
      <url>/2024/05/Create_a_Text_Based_Adventure_Game_with_Llama/</url>
      
        <content type="html"><![CDATA[<p><img src="index.jpeg" alt="" /></p><p>Building a Text-Based Adventure Game with Gradio, LLaMA, and OLLAMA</p><p>Developers have been using Large Language Models (LLMs) to develop text-based games since GPT-2, but it was difficult to set up. With Gradio, LLaMA 3, and OLLAMA, it is super easy to create a text-based game running locally on your own computer for free.</p><p>Before the adventure begins, you can have more background on Gradio, LLaMA, and ollama:<br /><a href="../../2024/Running_Your_Own_ChatGPT_and_Copilot_with_Ollama">Running_Your_Own_ChatGPT_and_Copilot_with_Ollama</a></p><p>Like the above blog post, ollama API will be used and llama3:instruct model is recommended. Assume you have the model pulled:</p><pre class="language-python" data-language="python"><div class="caption"><span>game.py</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">generate_chat_response</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> history <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> model<span class="token operator">=</span> <span class="token string">'llama3:instruct'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> model <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        model <span class="token operator">=</span> shared<span class="token punctuation">.</span>selected_model    messages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> history<span class="token punctuation">:</span>        <span class="token keyword">for</span> u<span class="token punctuation">,</span> a <span class="token keyword">in</span> history<span class="token punctuation">:</span>            messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"role"</span><span class="token punctuation">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">:</span> u<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"role"</span><span class="token punctuation">:</span> <span class="token string">"assistant"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">:</span> a<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"role"</span><span class="token punctuation">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">:</span> prompt<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"model"</span><span class="token punctuation">:</span> model<span class="token punctuation">,</span> <span class="token string">"stream"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"messages"</span><span class="token punctuation">:</span> messages<span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>        config<span class="token punctuation">.</span>ollama_url <span class="token operator">+</span> <span class="token string">"chat"</span><span class="token punctuation">,</span>        headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        bot_message <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"message"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"content"</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> bot_message    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error: generate response:"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><h2 id="Game-Interface">Game Interface</h2><p><img src="interface1.png" alt="Game interface at a glance" /></p><p>The game interface is not intuitive but should be easy to explain in this blog post:</p><pre class="language-python" data-language="python"><div class="caption"><span>game.py</span></div><code class="language-python"><span class="token keyword">import</span> gradio <span class="token keyword">as</span> gr<span class="token comment"># Game Interface</span><span class="token keyword">with</span> gr<span class="token punctuation">.</span>Blocks<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> demo<span class="token punctuation">:</span>    textbox <span class="token operator">=</span> gr<span class="token punctuation">.</span>Textbox<span class="token punctuation">(</span>elem_id<span class="token operator">=</span><span class="token string">"input_box"</span><span class="token punctuation">,</span> lines<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> min_width<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">)</span>    chatbot <span class="token operator">=</span> gr<span class="token punctuation">.</span>Chatbot<span class="token punctuation">(</span>show_copy_button<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> layout<span class="token operator">=</span><span class="token string">"panel"</span><span class="token punctuation">)</span>    submit_btn <span class="token operator">=</span> gr<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"Submit"</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> gr<span class="token punctuation">.</span>Blocks<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        nem_game <span class="token operator">=</span> gr<span class="token punctuation">.</span>ClearButton<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">'New Game'</span><span class="token punctuation">,</span> components <span class="token operator">=</span> <span class="token punctuation">[</span>chatbot<span class="token punctuation">]</span><span class="token punctuation">)</span>        chat_interface <span class="token operator">=</span> gr<span class="token punctuation">.</span>ChatInterface<span class="token punctuation">(</span>            fn<span class="token operator">=</span>take_action<span class="token punctuation">,</span>            textbox<span class="token operator">=</span>textbox<span class="token punctuation">,</span>            chatbot<span class="token operator">=</span>chatbot<span class="token punctuation">,</span>            submit_btn<span class="token operator">=</span>submit_btn<span class="token punctuation">,</span>            retry_btn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>            undo_btn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        nem_game<span class="token punctuation">.</span>click<span class="token punctuation">(</span>fn<span class="token operator">=</span>start_new_game<span class="token punctuation">,</span> output<span class="token operator">=</span>chat_interface<span class="token punctuation">.</span>chatbot_state<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    demo<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>        </code></pre><p>Besides using Gradio to set up a game interface, instructions about the game background and rules are sent to the LLM when the “New Game” button is pressed. A very nice example of a game instruction can be found at <a href="https://github.com/fladdict/llm_games">https://github.com/fladdict/llm_games</a> . Replace <code>&lt;to be inserted&gt;</code> with the prompt:</p><pre class="language-python" data-language="python"><div class="caption"><span>game.py</span></div><code class="language-python">game_prompt <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;to be inserted>"""</span>game_instruction <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">def</span> <span class="token function">start_new_game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> game_instruction    response <span class="token operator">=</span> generate_chat_response<span class="token punctuation">(</span>prompt<span class="token operator">=</span>game_prompt<span class="token punctuation">)</span>    game_instruction <span class="token operator">=</span> response    <span class="token comment"># clean up chat history</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code></pre><p>A copy of game_instruction is saved for later use.</p><p>Below is an example of the LLM response when “New Game” button is pressed:</p><div class="box">  <div class="person-a">    <div class="message">Welcome to Chat Reincarnation: My Childhood Friend, Who Should Have Died, Became a Hero in Another World!<p>You are about to embark on an extraordinary adventure with your childhood friend, who has reincarnated into another world as a hero. Your journey will take you through chat, where you’ll provide knowledge and guidance to help your friend overcome challenges and defeat the Demon Lord.</p><p>Initial Setup:</p><p>Your childhood friend’s name is Akira, a 17-year-old girl with short, curly brown hair and bright blue eyes. She has a gentle and curious nature, often seeking advice and support from those around her.</p><p>You receive a message from Akira:</p><p>“Hey! It’s me, Akira! I know it sounds crazy, but I’m writing to you from another world. I’ve been reincarnated as a hero here, and I need your help. I don’t understand many things about this new world, so I’m counting on you to guide me.”</p><p>First Question:</p><p>Akira sends her first question:</p><p>“What is ‘electricity’?”</p><p>Please respond with your answer in the language of your choice (English, Japanese, or any other language).</p><p>Story Progress: 0 Rise of Crisis: 0 Technological Innovation: None</p><p>Wait for your response to proceed!</p>   </div><!-- message -->  </div><!-- person a --></div><!-- box --><p>The player can now start playing the game by following the instructions and typing in their actions.</p><p>However, the chatbot component in Gradio does not know the game prompt and instructions. This is because we skip using the chatbot to communicate with the LLM when starting a new game. To fix this, the <code>take_action</code> function helps place the prompt and instructions at the beginning of history and then passes them to the LLM:</p><pre class="language-python" data-language="python"><div class="caption"><span>game.py</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">take_action</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> history <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> model <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> game_instruction    <span class="token keyword">global</span> game_prompt    starting <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>game_prompt<span class="token punctuation">,</span> game_instruction<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>history<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>        starting<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>history<span class="token punctuation">)</span>    <span class="token keyword">return</span> generate_chat_response<span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> history<span class="token operator">=</span>starting<span class="token punctuation">)</span></code></pre><p>I have put the source together to <a href="https://github.com/neoalienson/llama-in-chains">https://github.com/neoalienson/llama-in-chains</a></p><p>Let’s get the adventure started!</p><h2 id="My-Adventure">My Adventure</h2><p>Below is my adventure during the time of writing:</p><p><img src="adventurer_1.jpeg" alt="The adventurer" /></p><div class="box">  <div class="person-b">    <div class="message">I am bad at physics. Can you tell me about the computer you are using in your world?    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">  Don't worry, I won't hold it against you that you're not great at physics!<p>Akira’s eyes widen with excitement as she tries to explain the concept of computers:</p><p>“O-oh, computers?! They’re like… magical boxes that can store and process tons of information! You can use them to communicate with people over long distances, play games, and even create art and music. We have these things called ‘terminals’ where you can type messages or input commands, and the computer will respond accordingly. It’s really cool!”</p><p>Story Progress: 1<br />Rise of Crisis: 0<br />Technological Innovation: Basic Understanding of Computers</p><p>You’ve taken a step forward in helping Akira understand modern technology! However, the Demon Lord is still lurking in the shadows, plotting his next move…</p><p>What would you like to discuss next with Akira? Would you like to explore more about computers or move on to something else?</p><p>Please respond with your thoughts, and I’ll continue the adventure!<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Ok, can you tell me why you are interested in electricity?    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">Akira's Curiosity:Akira leans forward, her eyes sparkling with excitement:<p>“Oh, electricity is so fascinating! In our world, we don’t have it yet. We use candles and torches for light, and fireplaces for warmth. But the hero who reincarnated me told me about this thing called ‘electricity’ that can power all sorts of devices and make life easier. I want to learn more about it because… well, if we can harness its power, maybe we can create new ways to defeat the Demon Lord and bring peace to our world!”</p><p>Story Progress: 2<br />Rise of Crisis: 0<br />Technological Innovation: Basic Understanding of Electricity<br />The more you help Akira understand electricity, the closer she’ll get to unlocking the secrets of this mysterious force! But remember, the Demon Lord is still lurking in the shadows, waiting for his chance to strike…<br />What would you like to discuss next with Akira? Would you like to delve deeper into the world’s technology or explore other aspects of the story?<br />Please respond with your thoughts, and I’ll continue the adventure!<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Without electricity, how can your computer even work? It doesn't sound logical to me.    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">Akira's Concern:Akira furrows her brow, looking puzzled:<p>“Hmm… I never thought about it that way. You’re right, our computers wouldn’t be able to function without electricity. But… the hero who reincarnated me said something about ‘magic’ and ‘energies’ being involved in how these devices work. Maybe there’s more to it than just electricity?”</p><p>Story Progress: 3<br />Rise of Crisis: 0<br />Technological Innovation: Basic Understanding of Computer Concepts<br />You’ve got Akira thinking critically about the technology! However, the Demon Lord is still lurking in the shadows, waiting for his chance to strike…<br />What would you like to discuss next with Akira? Would you like to explore more about computers or try to help her understand the magical aspects involved?<br />Please respond with your thoughts, and I’ll continue the adventure!</p><p>(Note: Please keep in mind that this is a fantasy world, and the concepts might be different from our own. The goal is to guide Akira’s understanding of modern technology while still respecting the fantastical elements of the story.)<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Let's assume computer is powered by magic and not electricity in your world. Can the magical energy be used to save your world?    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">Akira's Hope: +Akira's eyes light up with excitement:<p>“Oh, yes! If we can harness the power of magic, maybe we can use it to defend our world against the Demon Lord! I’ve heard rumors that there are ancient artifacts and spells hidden away, just waiting to be discovered. Maybe we could use those to create a magical shield or find a way to weaken the Demon Lord’s powers!”</p><p>Story Progress: 4<br />Rise of Crisis: 0<br />Technological Innovation: Basic Understanding of Magical Concepts</p><p>You’ve given Akira hope that magic can be used to save their world! However, the Demon Lord is still plotting his next move, and you need to keep working together to stay one step ahead…</p><p>What would you like to discuss next with Akira? Would you like to explore more about magical artifacts, spells, or try to come up with a plan to defeat the Demon Lord?</p><p>Please respond with your thoughts, and I’ll continue the adventure!<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Please use the magical energy to take me into your world.    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">Magical Portal: +Akira's eyes shine with excitement as she raises her hand, and a soft blue glow begins to emanate from it. The air around you seems to ripple and distort, as if reality itself is bending to accommodate the magical energy.<p>Suddenly, you feel yourself being pulled through the shimmering portal, leaving your own world behind. You’re enveloped in a warm, golden light that seems to wash away all worries and concerns. As you emerge on the other side, you find yourself standing in the midst of Akira’s world.</p><p>New Environment: +<br />You take in your surroundings, finding yourself in a lush, vibrant forest teeming with life. The air is filled with the sweet scent of blooming flowers, and the soft chirping of birds creates a soothing background melody. Tall trees stretch towards the sky, their branches heavy with leaves that seem to rustle and whisper secrets to each other.</p><p>Akira stands before you, a look of wonder on her face as she takes in your arrival. Her eyes sparkle with excitement, and she beckons you forward with an outstretched hand.</p><p>Story Progress: 5<br />Rise of Crisis: 0<br />Technological Innovation: Basic Understanding of Magical Travel<br />You’ve successfully traveled to Akira’s world! But remember, the Demon Lord is still lurking in the shadows, waiting for his chance to strike. You’ll need to work together with Akira to uncover the secrets and challenges that lie ahead…</p><p>What would you like to do next? Would you like to explore this new world, search for clues or artifacts, or try to communicate with Akira about your shared goal of defeating the Demon Lord?<br />Please respond with your thoughts, and I’ll continue the adventure!<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Let's ask the trees where the ancient artifacts and spells are hidden.    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">**Whispering Woods:**   +Akira approaches one of the tall trees, her eyes sparkling with curiosity. She reaches out a hand, as if to touch the trunk, and begins to speak in a soft, melodious voice:<p>“Trees of wisdom, ancient ones, we seek your guidance. We are on a quest to defeat the Demon Lord and bring peace to our world. Can you reveal to us where the ancient artifacts and spells are hidden?”</p><p>The trees seem to stir, their leaves rustling softly as if they’re communing with each other. Then, in unison, they whisper:</p><p>“Seek the Oracle of the Ancient Oak, deep within the heart of the forest. There, the secrets of the past await you. But beware, for the path is treacherous, and the Demon Lord’s minions lurk in the shadows.”</p><p><strong>Story Progress:</strong> 6<br /><strong>Rise of Crisis:</strong> 1 (The trees’ warning suggests that danger lies ahead.)<br /><strong>Technological Innovation:</strong> Basic Understanding of Magical Communication with Nature</p><p>You’ve gained valuable information from the Whispering Woods! However, you now know that the journey will be fraught with peril. What would you like to do next?</p><p>Would you like to head towards the Oracle of the Ancient Oak, or explore other parts of the forest for clues and resources? Or perhaps you’d like to seek Akira’s guidance on how to proceed?</p><p>Please respond with your thoughts, and I’ll continue the adventure!<br /></div><!-- message --></p>  </div><!-- person a --><div class="person-b"><div class="message">Akira, please lead us to the heart of the forest.    </div><!-- message -->  </div><!-- person b -->  <div class="person-a">    <div class="icon1"></div>    <div class="message">**Forest Path:**   +Akira nods, a determined look on her face. She leads you along a winding path, expertly navigating through the dense foliage. The trees grow taller and closer together here, casting dappled shadows on the forest floor.<p>As you walk, the air grows thick with an otherworldly energy. You can feel the power of the ancient magic emanating from the land itself. Akira pauses, her eyes fixed on something ahead. She whispers: “The Oracle’s grove is near.”</p><p><strong>Ancient Oak Grove:</strong>   +<br />You push through a curtain of vines and enter a clearing surrounded by towering trees. At the center stands an enormous oak, its bark twisted with age. The air is heavy with the scent of old wisdom.</p><p>Akira approaches the tree, her hands extended as if in reverence. She begins to chant softly, and the air around you seems to vibrate with energy. Suddenly, a holographic image materializes before you: a wispy, ethereal figure with eyes that burn like stars.</p><p><strong>Oracle’s Vision:</strong>   +<br />The Oracle speaks in a voice that echoes through your mind: “Seek the Keystone of Light in the depths of the Crystal Caves. But beware, for the path is fraught with treacherous illusions and ancient guardians.”</p><p>The vision fades, leaving you with more questions than answers. What do you want to do next?</p><p>Do you:<br />A) Set out to find the Crystal Caves<br />B) Ask Akira about the Keystone of Light and its significance<br />C) Explore the surrounding forest for clues and resources</p><p>Please respond with your choice.<br /></div><!-- message --></p>  </div><!-- person a --></div><!-- box --><p>The game starts to break. It does not respond with story progress, and instead responds with multiple choice, unlike previous responses. This is because the chat history has reached 8k tokens, which is the maximum number of tokens the model can process at once. How do we solve this? Can we use a different model that supports more context? Or should we summarize the story progress and then pass it to the model? It’s your real adventure now!</p><p><img src="adventurer.jpeg" alt="Full size adventurer" /></p><p><img src="akira.jpeg" alt="Full size Akira" /></p><style>*{  box-sizing:border-box;}.box{  width:100%;  margin:2em auto;}.message{  width:100%;  border-radius:15px;  padding:1em;}.person-a .message{  background:#f8f8f8;}.person-a{  display:flex;  align-items:flex-start;}.icon1{  --size:160px;  width:var(--size);  height:var(--size);  background:url(akira_1.jpeg);  background-position:center;  background-size:cover;  margin-right:.8em;  position:relative;}.icon2{  --size:160px;  width:var(--size);  height:var(--size);  background-position:center;  background-size:cover;  margin-right:.8em;  position:relative;}.person-b .message{  background:darkgrey;  margin:2em 0;  margin-left:0px;  color:white;}</style><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Running Your Own ChatGPT and Copilot with Ollama</title>
      <link href="/2024/05/Running_Your_Own_ChatGPT_and_Copilot_with_Ollama/"/>
      <url>/2024/05/Running_Your_Own_ChatGPT_and_Copilot_with_Ollama/</url>
      
        <content type="html"><![CDATA[<p><img src="llama.png" alt="" /><br />Ever wanted to explore the capabilities of AI-powered chatbots like ChatGPT and Copilot without relying on third-party services? With Ollama and some setup, you can run your own instance of ChatGPT and customize it to fit your specific needs. Whether you’re a developer looking to integrate conversational AI into your app or project, a researcher seeking to analyze the performance of AI models, or simply an enthusiast wanting to experiment with this cutting-edge technology - having control over your own chatbot can open up exciting possibilities for innovation and discovery.</p><p><em>Whatever, I want to run my own ChatGPT and Copilot.</em></p><h2 id="Setup-Ollama">Setup Ollama</h2><p>First, you have to set up <a href="https://ollama.com/">Ollama</a>. So far, I have not heard any complaints of difficulty in setting up Ollama on any platform, including Windows WSL. After Ollama is ready, pull a model like Llama 3:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># pulling a 5GB model could take some time...</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">ollama pull llama3:instruct </span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># list out models you have</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">ollama list </span></span><span class="token output">NAME                    ID              SIZE    MODIFIEDllama3:instruct         71a106a91016    4.7 GB  11 days ago</span></code></pre><p>Test the model through the command line, though wording can be different:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">ollama run llama3:instruct</span></span><span class="token output">>>> Send a message (/? for help)>>> are you ready?I'm always ready to play a game, answer questions, or just chat. What's on your mind? Let me know what you'd liketo do and I'll do my best to help.</span></code></pre><p>Check if Ollama’s port is listening:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token function">netstat</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-n</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">11434</span></span></span><span class="token output">tcp        0      0 127.0.0.1:11434         0.0.0.0:*               LISTEN</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># looks good, port 11434 is ready</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># run below command if Ollama is not listening</span></span></span><span class="token output">ollama serve</span></code></pre><p>Please check <a href="https://ollama.com/library">https://ollama.com/library</a> for a list of available models.</p><h2 id="Gradio">Gradio</h2><p>Although you can set up system prompts, parameters, embedding content, and some pre/post-processing, you might want an easier way to interact through a web interface. You need <a href="https://www.gradio.app/guides/quickstart">Gradio</a>. Assuming you have Python ready:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># create Python virtual environment.</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># gradio-env is a folder name and you can change it to anything</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">python <span class="token parameter variable">-m</span> venv gradio-env</span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># jump into the virtual environment</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">gradio-env/Script/activate</span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># if you are using Windows</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">gradio-env<span class="token punctuation">\</span>script<span class="token punctuation">\</span>activate.bat</span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token comment"># install Gradio</span></span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">pip <span class="token function">install</span> gradio</span></span></code></pre><p>Next, create a Python script with a filename like <code>app.py</code>. Update the model if you are using another:</p><pre class="language-python" data-language="python"><div class="caption"><span>app.py</span></div><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> json<span class="token keyword">import</span> gradio <span class="token keyword">as</span> grmodel <span class="token operator">=</span> <span class="token string">"llama3:instruct"</span>url <span class="token operator">=</span> <span class="token string">"http://localhost:11434/api/"</span><span class="token keyword">def</span> <span class="token function">generate_response</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> history<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"model"</span><span class="token punctuation">:</span> model<span class="token punctuation">,</span> <span class="token string">"stream"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"prompt"</span><span class="token punctuation">:</span> prompt<span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>        url <span class="token operator">+</span> <span class="token string">"generate"</span><span class="token punctuation">,</span>        headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"response"</span><span class="token punctuation">]</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error: generate response:"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>demo <span class="token operator">=</span> gr<span class="token punctuation">.</span>ChatInterface<span class="token punctuation">(</span>    fn<span class="token operator">=</span>generate_response<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    demo<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>Run the command below and you can access the interface with the URL:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">gradio app.py</span></span><span class="token output">Watching:...Running on local URL:  http://127.0.0.1:7860To create a public link, set `share=True` in `launch()`.</span></code></pre><p>Open <code>http://127.0.0.1:7860</code></p><p><img src="test.png" alt="Test" /></p><h3 id="Listing-models">Listing models</h3><p>Assuming you have pulled more than one model, and you want to pick from a dropdown list. First, you get the list from the API:</p><pre class="language-python" data-language="python"><div class="caption"><span>app.py</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">list_models</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>        url <span class="token operator">+</span> <span class="token string">"tags"</span><span class="token punctuation">,</span>        headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        models <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"models"</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span>d<span class="token punctuation">[</span><span class="token string">'model'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> d <span class="token keyword">in</span> models<span class="token punctuation">]</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error:"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>models <span class="token operator">=</span> list_models<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>Then, you can add a dropdown into the ChatInterface:</p><pre class="language-python" data-language="python"><div class="caption"><span>app.py</span></div><code class="language-python"><span class="token keyword">with</span> gr<span class="token punctuation">.</span>Blocks<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> demo<span class="token punctuation">:</span>  dropdown <span class="token operator">=</span> gr<span class="token punctuation">.</span>Dropdown<span class="token punctuation">(</span>label<span class="token operator">=</span><span class="token string">'Model'</span><span class="token punctuation">,</span> choices<span class="token operator">=</span>models<span class="token punctuation">)</span>  <span class="token comment"># select the first item as default model</span>  dropdown<span class="token punctuation">.</span>value <span class="token operator">=</span> models<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  gr<span class="token punctuation">.</span>ChatInterface<span class="token punctuation">(</span>fn<span class="token operator">=</span>generate_response<span class="token punctuation">,</span> additional_inputs<span class="token operator">=</span>dropdown<span class="token punctuation">)</span></code></pre><p>Now the <code>generate_response</code> function takes an extra parameter from the additional_inputs dropdown. Update the function:</p><pre class="language-python" data-language="python"><div class="caption"><span>app.py</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">generate_response</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> history<span class="token punctuation">,</span> model<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"model"</span><span class="token punctuation">:</span> model<span class="token punctuation">,</span> <span class="token string">"stream"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"prompt"</span><span class="token punctuation">:</span> prompt<span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>        url <span class="token operator">+</span> <span class="token string">"generate"</span><span class="token punctuation">,</span>        headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"response"</span><span class="token punctuation">]</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error: generate response:"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>You can see the dropdown after expanding additional inputs:</p><p><img src="dropdown.png" alt="Drop down" /></p><h3 id="Using-chat-history">Using chat history</h3><p>The previous implementation utilized Ollama’s <code>generate</code> API. The API accepted a simple parameter, <code>prompt</code>, which allowed sending chat history together with the prompt. However, it is better to use the <code>chat</code> API from Ollama, which accepts a <code>messages</code> parameter. This <code>messages</code> parameter can specify a role, enabling the model to better interpret and respond accordingly. Below demonstrates how to put <code>history</code> into the API format, and the last message is the latest user input.</p><pre class="language-python" data-language="python"><div class="caption"><span>app.py</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">generate_response</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> history<span class="token punctuation">,</span> model<span class="token punctuation">)</span><span class="token punctuation">:</span>    messages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> u<span class="token punctuation">,</span> a <span class="token keyword">in</span> history<span class="token punctuation">:</span>        messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"role"</span><span class="token punctuation">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">:</span> u<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"role"</span><span class="token punctuation">:</span> <span class="token string">"assistant"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">:</span> a<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"role"</span><span class="token punctuation">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">:</span> prompt<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"model"</span><span class="token punctuation">:</span> model<span class="token punctuation">,</span> <span class="token string">"stream"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"messages"</span><span class="token punctuation">:</span> messages<span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>        url <span class="token operator">+</span> <span class="token string">"chat"</span><span class="token punctuation">,</span>        headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        bot_message <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"message"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"content"</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> bot_message    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error: generate response:"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><blockquote><p>Full source code: <a href="https://github.com/neoalienson/llama-in-chains">https://github.com/neoalienson/llama-in-chains</a></p></blockquote><h2 id="Visual-Studio-Code-with-extension">Visual Studio Code with extension</h2><p>Extensions such as <a href="https://docs.continue.dev/intro">Continue</a> are very easy to set up.</p><p>You can set up Ollama or update the extension’s config.json:</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token property">"models"</span><span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"model"</span><span class="token operator">:</span> <span class="token string">"llama3:instruct"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"llama3:instruct"</span><span class="token punctuation">,</span>    <span class="token property">"completionOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"apiBase"</span><span class="token operator">:</span> <span class="token string">"http://localhost:11434"</span><span class="token punctuation">,</span>    <span class="token property">"provider"</span><span class="token operator">:</span> <span class="token string">"ollama"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></code></pre><p>You can set model roles to your local copilot:</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token property">"modelRoles"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token property">"default"</span><span class="token operator">:</span> <span class="token string">"llama3:instruct"</span><span class="token punctuation">,</span>  <span class="token property">"summarize"</span><span class="token operator">:</span> <span class="token string">"llama3:instruct"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><h2 id="Serving-Gradio-or-Ollama-API-outside-of-your-local-machine">Serving Gradio or Ollama API outside of your local machine</h2><p>By default, Gradio and Ollama listen on localhost only, which means others from the network cannot reach them for security reasons. You can serve the web or API through a proxy like Nginx and an API gateway to have data encryption in-transit and authentication. However, for simplicity, you can set up the following to allow all IPs to access your local Ollama:</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token comment"># configure Ollama to listen to all IPs</span>$ <span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"[Service]<span class="token entity" title="\n">\n</span>Environment=<span class="token entity" title="\&quot;">\"</span>OLLAMA_HOST=0.0.0.0<span class="token entity" title="\&quot;">\"</span>"</span> <span class="token operator">></span> /etc/systemd/system/ollama.service.d/http-host.conf$$ <span class="token function">sudo</span> systemctl daemon-reload$ <span class="token function">sudo</span> systemctl restart ollama$$ <span class="token comment"># open up the firewall if it is required</span>$ <span class="token function">sudo</span> ufw allow from any to any port <span class="token number">11434</span> proto tcp</code></pre><p>For Gradio, you can set <code>server_name</code> to <code>0.0.0.0</code>:</p><pre class="language-python" data-language="python"><code class="language-python">demo<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>server_name<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">)</span></code></pre><p>If you are running Gradio and Ollama through WSL, you will need to forward the port from WSL to your local machine with PowerShell commands:</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token keyword">If</span> <span class="token punctuation">(</span><span class="token operator">-NOT</span> <span class="token punctuation">(</span><span class="token namespace">[Security.Principal.WindowsPrincipal]</span><span class="token namespace">[Security.Principal.WindowsIdentity]</span>::GetCurrent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>IsInRole<span class="token punctuation">(</span><span class="token namespace">[Security.Principal.WindowsBuiltInRole]</span> <span class="token string">"Administrator"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token variable">$arguments</span> = <span class="token string">"&amp; '"</span> <span class="token operator">+</span> <span class="token variable">$myinvocation</span><span class="token punctuation">.</span>mycommand<span class="token punctuation">.</span>definition <span class="token operator">+</span> <span class="token string">"'"</span>  <span class="token function">Start-Process</span> powershell <span class="token operator">-</span>Verb runAs <span class="token operator">-</span>ArgumentList <span class="token variable">$arguments</span>  <span class="token keyword">Break</span><span class="token punctuation">&#125;</span><span class="token variable">$remoteport</span> = bash<span class="token punctuation">.</span>exe <span class="token operator">-</span>c <span class="token string">"ifconfig eth0 | grep 'inet '"</span><span class="token variable">$found</span> = <span class="token variable">$remoteport</span> <span class="token operator">-match</span> <span class="token string">'\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;'</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$found</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$remoteport</span> = <span class="token variable">$matches</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token function">Write-Output</span> <span class="token string">"IP address could not be found"</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$ports</span> = @<span class="token punctuation">(</span>7860<span class="token punctuation">,</span>11434<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> = 0<span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">-lt</span> <span class="token variable">$ports</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$port</span> = <span class="token variable">$ports</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">Invoke-Expression</span> <span class="token string">"netsh interface portproxy delete v4tov4 listenport=<span class="token variable">$port</span>"</span><span class="token punctuation">;</span>  <span class="token function">Invoke-Expression</span> <span class="token string">"netsh advfirewall firewall delete rule name=<span class="token variable">$port</span>"</span><span class="token punctuation">;</span>  <span class="token function">Invoke-Expression</span> <span class="token string">"netsh interface portproxy add v4tov4 listenport=<span class="token variable">$port</span> connectport=<span class="token variable">$port</span> connectaddress=<span class="token variable">$remoteport</span>"</span><span class="token punctuation">;</span>  <span class="token function">Invoke-Expression</span> <span class="token string">"netsh advfirewall firewall add rule name=<span class="token variable">$port</span> dir=in action=allow protocol=TCP localport=<span class="token variable">$port</span>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">Invoke-Expression</span> <span class="token string">"netsh interface portproxy show v4tov4"</span><span class="token punctuation">;</span></code></pre><p>Update ports 7860,11434 in the script to match your own. 7860 is for Gradio and 11434 is for ollama</p><p>Have fun!</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Free IT Examinations and Certificates for Real</title>
      <link href="/2024/02/Free-IT-Exams-and-Certificates-For-Real/"/>
      <url>/2024/02/Free-IT-Exams-and-Certificates-For-Real/</url>
      
        <content type="html"><![CDATA[<p><img src="index.jpeg" alt="" /></p><h2 id="Free-but-Well-Recognized-IT-Certificates">Free but Well-Recognized IT Certificates</h2><p>There are many IT certifications available online, but some of these certificates are too easy to obtain, meaning that you can get them simply by watching a few videos or taking a quiz with unlimited retries. However, some of the certificates listed on this page have a higher entry level, and you need to take and pass an examination with a proctor before being issued the certification. This is why these certificates are more widely recognized compared to others.</p><p>Rating on this page is subjective, based on the value of the certificate and its recognition according to my knowledge.</p><h2 id="Cybersecurity">Cybersecurity</h2><h3 id="Certified-in-Cybersecurity-CC-from-ISC2">Certified in Cybersecurity (CC) from ISC2</h3><p>ISC2 Certified in Cybersecurity (CC) is an entry-level credential issued by the world-renowned ISC2 (International Information Systems Security Certification Consortium). Additionally, ISC2 issues other notable certificates, such as CISSP and CCSK, which are widely accepted by industries.</p><p>The certificate is free since 2022. After registration, you’ll receive a free self-learning course with pre- and post-course assessments. It is possible to pass the exam without taking any additional courses. The examination center where you’ll be taking the test has high-security features, including biometric authentication methods like palm scanning – so don’t let it catch you off guard and get nervous! Another important point to note: once you’ve submitted your answers, you won’t be able to review them later – so make sure to double-check everything before hitting submit!</p><p>Free exam but don’t get too excited! You’ll still need to shell out $50 a year for the privilege of holding on to that shiny new certification.</p><p>Get started today! <a href="https://www.isc2.org/Certifications/CC">Certified in Cybersecurity from ISC2</a></p><p>Pros:</p><ul><li>Well recognized</li><li>The exam is taken at an exam center</li></ul><p>Cons:</p><ul><li>An annual fee is required for the certification</li></ul><p><img src="/../../../about-me/isc2-cc-cert.png" alt="ISC2 Certified in Cybersecurity" class="cert" /></p><table class="t"><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Certification</td><td>USD 50/year</td></tr><tr><td>Renewal</td><td>USD 50/year</td></tr><tr><td>Value</td><td>⭐⭐⭐⭐</td></tr></tbody></table><h2 id="Cloud">Cloud</h2><h3 id="AliCloud">AliCloud</h3><p>Alibaba Cloud’s free certificate campaign has evolved over the years. As of this moment, participants have the opportunity to compete for an ACA exam coupon by engaging in their monthly courses. The ACA certification serves as the foundational level among Alibaba Cloud’s certifications, which also include ACP (Professional) and ACE (Expert). To earn a free certificate, individuals participate in Alibaba Cloud’s courses, with the top three attendees each month receiving the coveted coupon.</p><p>Start registering free course:</p><p><a href="https://edu.alibabacloud.com/training/upcoming_classroom_training">https://edu.alibabacloud.com/training/upcoming_classroom_training</a></p><p><img src="/../../../about-me/alibaba_cloud_certified_alibaba_cloud_security_associate_cert.jpg" alt="Alibaba Cloud ACA Certified Cloud Security Associate" class="cert" /></p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Certification</td><td>Free (for top 3 attendees every month)</td></tr><tr><td>Renewal</td><td>Retake exam</td></tr><tr><td>Value</td><td>⭐⭐⭐</td></tr></tbody></table><h3 id="Google-Cloud-Certifications">Google Cloud Certifications</h3><p>Google Cloud offers free training through its “Get Certified in 2025” program, an initiative exclusive to Google Cloud customers. This program provides structured learning paths to build skills in cloud computing, with a commitment of up to 9 hours per week over 9 to 11 weeks across multiple cohorts in 2025. Participants can access over 980 labs and courses on Google Cloud Skills Boost at no cost. Previous iterations of the program, such as in 2024 and 2025, have offered free exam vouchers, covering costs for certifications like Associate Cloud Engineer and Professional Cloud Architect.</p><p>Start your journey with Google Cloud certifications:</p><p><a href="https://cloud.google.com/innovators/getcertified">https://cloud.google.com/innovators/getcertified</a> (requires sign-in)</p><p><img src="/../../../about-me/google-cloud-digital-leader-cert.png" alt="Google Cloud Digital Leader Certificate" class="cert" /></p><p>Pros:</p><ul><li>Free high-quality training and labs via Google Cloud Skills Boost</li><li>Potential for free exam vouchers based on past program iterations</li><li>Well recognized in the industry</li></ul><p>Cons:</p><ul><li>Exclusive to Google Cloud customers with corporate email</li><li>Exam vouchers not guaranteed for 2025; fees may apply</li></ul><table class="t"><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Certification</td><td>Free training; potential free vouchers</td></tr><tr><td>Renewal</td><td>Retake exam or continuous learning</td></tr><tr><td>Value</td><td>⭐⭐⭐⭐</td></tr></tbody></table><h2 id="SRE">SRE</h2><h3 id="New-Relic-Full-Stack-Observability-Exam">New Relic Full Stack Observability Exam</h3><p><a href="https://learn.newrelic.com/full-stack-observability-exam">https://learn.newrelic.com/full-stack-observability-exam</a></p><h2 id="Project-Management">Project Management</h2><h3 id="Six-Sigma-White-Belt">Six Sigma White Belt</h3><p>The Six Sigma White Belt Certificate from Six Sigma Online is a foundational certification that introduces learners to the principles and methodologies of Six Sigma, a data-driven approach to quality improvement. To earn this certification, students must pass a multiple-choice examination, but do not have to demonstrate their skills with a proctored test or project application. As a result, the rating for this certificate is relatively low compared to other certificates listed on this page. Nevertheless, the White Belt Certificate still provides a solid introduction to the concepts of Define, Measure, Analyze, Improve, and Control (DMAIC), as well as an overview of its application in various industries.</p><p><a href="https://www.sixsigmaonline.org/six-sigma-white-belt-certification/">https://www.sixsigmaonline.org/six-sigma-white-belt-certification/</a></p><p>Pros:</p><ul><li>100% Free</li></ul><p>Cons:</p><ul><li>Relatively less well recognized</li><li>Online quiz</li></ul><p><img src="sixsigmaonline-six-sigma-white-belt.png" alt="Six Sigma White Belt Certificate" class="cert" /></p><table class="t"><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Certification</td><td>Free</td></tr><tr><td>Renewal</td><td>Never expires</td></tr><tr><td>Value</td><td>⭐</td></tr></tbody></table><h2 id="Online-Marketing">Online Marketing</h2><h3 id="Google">Google</h3><p>Google Free Certificates on SkillShop are a series of certifications designed by Google and made available on the online learning platform, SkillShop. These certifications demonstrate your knowledge and skills in specific areas related to Google products and technologies, such as digital analytics, advertising, and data visualization. The training resources are free. Although the knowledge you learn is related to Google’s products, it still provides a good chance to understand how those products utilize artificial intelligence.</p><p><a href="https://skillshop.exceedlms.com/">https://skillshop.exceedlms.com/</a></p><p>Pros:</p><ul><li>100% Free</li><li>Over 20 certificates</li><li>The company is well-known</li></ul><p>Cons:</p><ul><li>Online quiz</li><li>Knowledge is related to Google’s products</li></ul><p><img src="google-ai-cert.png" alt="Google Ad Certificate" class="cert" /></p><table class="t"><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Certification</td><td>Free</td></tr><tr><td>Renewal</td><td>1 year</td></tr><tr><td>Value</td><td>⭐⭐</td></tr></tbody></table><h2 id="Summary">Summary</h2><table><thead><tr><th>Category</th><th>Name</th><th>Exam</th><th>Certification</th><th>Renewal</th><th>Value</th></tr></thead><tbody><tr><td>Cybersecurity</td><td>ISC2 Certified in Cybersecurity (CC)</td><td>Free</td><td>USD 50/year</td><td>USD 50/year</td><td>⭐⭐⭐⭐</td></tr><tr><td>Cloud</td><td>Alibaba Cloud</td><td>Free</td><td>Free</td><td>Retake every 2 years</td><td>⭐⭐⭐</td></tr><tr><td>Cloud</td><td>Google Cloud</td><td>Free</td><td>Free</td><td>2 years</td><td>⭐⭐⭐⭐</td></tr><tr><td>Marketing</td><td>Google Ad</td><td>Free</td><td>Free</td><td>1 year</td><td>⭐⭐</td></tr><tr><td>Project Management</td><td>Six Sigma White Belt</td><td>Free</td><td>Free</td><td>Never expires</td><td>⭐</td></tr></tbody></table><p>There are other repositories that maintain lists of free IT certificates:<br /><a href="https://github.com/cloudcommunity/Free-Certifications">https://github.com/cloudcommunity/Free-Certifications</a></p><p><a href="../../about-me/">My certifications …</a><br /><a href="../../about-me/badges">My badges …</a></p><style>.t {  width: auto !important;}.t td {  width: auto !important;  padding-right: 10px;}.cert {  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;  border: 1px solid #000;  width: 500px;}.caption {  padding: 15px;}</style><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cybersecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Manage Your Own VPN - A Penny-Pincher&#39;s Guide</title>
      <link href="/2024/01/Manage_Your_Own_VPN_A_Penny-Pinchers_Guide/"/>
      <url>/2024/01/Manage_Your_Own_VPN_A_Penny-Pinchers_Guide/</url>
      
        <content type="html"><![CDATA[<p><img src="index_head.jpeg" alt="" /></p><p>Ah, the internet – a vast expanse of knowledge and cat videos. But as you navigate this digital sea, you might find yourself wanting a bit more privacy, or perhaps you’re just tired of being told what content you can and cannot view based on your location…</p><h2 id="Problem-with-VPN-and-Proxy-Service-Pricing-Model">Problem with VPN and Proxy Service Pricing Model</h2><p>Let’s have a quick look at the VPN service price as of Dec 2023</p><table><thead><tr><th>VPN Provider</th><th>Price per Month (USD)</th><th>Subscription Period</th></tr></thead><tbody><tr><td>ProtonVPN</td><td>$3.95</td><td>2-Year</td></tr><tr><td>Surfshark VPN</td><td>$229</td><td>2-Year</td></tr><tr><td>ExpressVPN</td><td>$6.67</td><td>1-Year</td></tr><tr><td>NordVPN</td><td>$3.09</td><td>2-Year</td></tr></tbody></table><p>Pay-as-you-go option does not exist and we are forced to adopt a subscription-based model. A subscription-based model is like hiring a bodyguard who insists on a year-long contract when you only need someone to watch your back during that shady walk home once a month. A Penny Pincher like me does not accept this subscription offer.</p><h2 id="On-Demand-Cloud-Proxy">On Demand Cloud Proxy</h2><p>Now, let us examine the available cloud services for your VPN/proxy adventures. You can create a VPN/proxy server on Cloud. For simplicity, let’s start with a proxy server on Google Cloud. Here’s how it is going to work:</p><svg aria-roledescription="flowchart-v2" role="graphics-document document" viewBox="-8 -8 665.921875 88" style="max-width: 665.921875px;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-1758626673520"><style>#mermaid-1758626673520{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1758626673520 .error-icon{fill:#552222;}#mermaid-1758626673520 .error-text{fill:#552222;stroke:#552222;}#mermaid-1758626673520 .edge-thickness-normal{stroke-width:2px;}#mermaid-1758626673520 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1758626673520 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1758626673520 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1758626673520 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1758626673520 .marker{fill:#333333;stroke:#333333;}#mermaid-1758626673520 .marker.cross{stroke:#333333;}#mermaid-1758626673520 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-1758626673520 .label{font-family:"trebuchet ms",verdana,arial,sans-serif;color:#333;}#mermaid-1758626673520 .cluster-label text{fill:#333;}#mermaid-1758626673520 .cluster-label span,#mermaid-1758626673520 p{color:#333;}#mermaid-1758626673520 .label text,#mermaid-1758626673520 span,#mermaid-1758626673520 p{fill:#333;color:#333;}#mermaid-1758626673520 .node rect,#mermaid-1758626673520 .node circle,#mermaid-1758626673520 .node ellipse,#mermaid-1758626673520 .node polygon,#mermaid-1758626673520 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1758626673520 .flowchart-label text{text-anchor:middle;}#mermaid-1758626673520 .node .katex path{fill:#000;stroke:#000;stroke-width:1px;}#mermaid-1758626673520 .node .label{text-align:center;}#mermaid-1758626673520 .node.clickable{cursor:pointer;}#mermaid-1758626673520 .arrowheadPath{fill:#333333;}#mermaid-1758626673520 .edgePath .path{stroke:#333333;stroke-width:2.0px;}#mermaid-1758626673520 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1758626673520 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1758626673520 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1758626673520 .labelBkg{background-color:rgba(232, 232, 232, 0.5);}#mermaid-1758626673520 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1758626673520 .cluster text{fill:#333;}#mermaid-1758626673520 .cluster span,#mermaid-1758626673520 p{color:#333;}#mermaid-1758626673520 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:12px;background:hsl(80, 100%, 96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1758626673520 .flowchartTitleText{text-anchor:middle;font-size:18px;fill:#333;}#mermaid-1758626673520 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="6" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-pointEnd"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 0 L 10 5 L 0 10 z"></path></marker><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="4.5" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-pointStart"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 5 L 10 10 L 10 0 z"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="11" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-circleEnd"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="-1" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-circleStart"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="12" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626673520_flowchart-crossEnd"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="-1" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626673520_flowchart-crossStart"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><g class="root"><g class="clusters"></g><g class="edgePaths"><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-pc LE-ssh" id="L-pc-ssh-0" d="M103.297,36L107.464,36C111.63,36,119.964,36,127.414,36C134.864,36,141.43,36,144.714,36L147.997,36"></path><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-ssh LE-proxy" id="L-ssh-proxy-0" d="M248.922,36L253.089,36C257.255,36,265.589,36,273.039,36C280.489,36,287.055,36,290.339,36L293.622,36"></path><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-proxy LE-target" id="L-proxy-target-0" d="M478.953,36L483.12,36C487.286,36,495.62,36,503.07,36C510.52,36,517.086,36,520.37,36L523.653,36"></path></g><g class="edgeLabels"><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g></g><g class="nodes"><g transform="translate(51.6484375, 36)" data-id="pc" data-node="true" id="flowchart-pc-0" class="node default default flowchart-label"><rect height="72" width="103.296875" y="-36" x="-51.6484375" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-44.1484375, -28.5)" style="" class="label"><rect></rect><foreignObject height="57" width="88.296875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Your PC<br>in Country A<br><br></span></div></foreignObject></g></g><g transform="translate(201.109375, 36)" data-id="ssh" data-node="true" id="flowchart-ssh-1" class="node default default flowchart-label"><rect height="53" width="95.625" y="-26.5" x="-47.8125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-40.3125, -19)" style="" class="label"><rect></rect><foreignObject height="38" width="80.625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">SSH tunnel<br><br></span></div></foreignObject></g></g><g transform="translate(388.9375, 36)" data-id="proxy" data-node="true" id="flowchart-proxy-4" class="node default default flowchart-label"><rect height="72" width="180.03125" y="-36" x="-90.015625" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-82.515625, -28.5)" style="" class="label"><rect></rect><foreignObject height="57" width="165.03125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Proxy on Google Cloud<br>in Country B<br><br></span></div></foreignObject></g></g><g transform="translate(589.4375, 36)" data-id="target" data-node="true" id="flowchart-target-7" class="node default default flowchart-label"><rect height="53" width="120.96875" y="-26.5" x="-60.484375" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-52.984375, -19)" style="" class="label"><rect></rect><foreignObject height="38" width="105.96875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Target Website<br><br></span></div></foreignObject></g></g></g></g></g></svg><p>The flowchart illustrates the setup of a proxy server on Google Cloud. Your PC (PC) is in Country A, and you want to access a target website (target) that is restricted or has content blocked by your location. You establish an SSH tunnel (ssh) from your PC to the proxy server (proxy) on Google Cloud, which is located in Country B. This allows you to bypass geographical restrictions and access the target website as if you were in Country B.</p><h3 id="Provider-1-Google-Cloud">Provider 1. Google Cloud</h3><p>Below are the Terraform scripts to create a compute engine with the proxy (squid) on Google Cloud.</p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>main.tf</span></div><code class="language-hcl"><span class="token keyword">resource <span class="token type variable">"google_compute_instance"</span></span> <span class="token string">"default"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>         <span class="token punctuation">=</span> <span class="token string">"proxy-server"</span>  <span class="token property">machine_type</span> <span class="token punctuation">=</span> <span class="token string">"e2-micro"</span>  <span class="token property">zone</span>         <span class="token punctuation">=</span> <span class="token string">"us-west1-a"</span>  <span class="token property">tags</span>         <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"ssh"</span><span class="token punctuation">]</span>  <span class="token keyword">scheduling</span> <span class="token punctuation">&#123;</span>    <span class="token property">provisioning_model</span> <span class="token punctuation">=</span> <span class="token string">"SPOT"</span>    <span class="token property">automatic_restart</span>  <span class="token punctuation">=</span> <span class="token boolean">false</span>    <span class="token property">preemptible</span>        <span class="token punctuation">=</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">boot_disk</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">initialize_params</span> <span class="token punctuation">&#123;</span>      <span class="token property">image</span> <span class="token punctuation">=</span> <span class="token string">"ubuntu-os-cloud/ubuntu-2004-lts"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">network_interface</span> <span class="token punctuation">&#123;</span>    <span class="token property">network</span> <span class="token punctuation">=</span> <span class="token string">"default"</span>    <span class="token keyword">access_config</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// Ephemeral public IP</span>      <span class="token property">network_tier</span> <span class="token punctuation">=</span> <span class="token string">"STANDARD"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">service_account</span> <span class="token punctuation">&#123;</span>    <span class="token property">scopes</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"cloud-platform"</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  <span class="token property">metadata</span> <span class="token punctuation">=</span> <span class="token punctuation">&#123;</span>    <span class="token property">ssh-keys</span>       <span class="token punctuation">=</span> format(<span class="token string">"%s:%s"</span>, var.ssh_username, var.ssh_public_key)    <span class="token property">startup-script</span> <span class="token punctuation">=</span> <span class="token string">"sudo apt-get update;sudo apt-get install -y squid;sudo systemctl start squid"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/main.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/main.tf</a></p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>variables.tf</span></div><code class="language-hcl"><span class="token keyword">variable<span class="token type variable"> "ssh_username" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span>        <span class="token punctuation">=</span> string  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"username of SSH to the compute engine"</span><span class="token punctuation">&#125;</span><span class="token keyword">variable<span class="token type variable"> "ssh_public_key" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span>        <span class="token punctuation">=</span> string  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Public key for SSH"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/variables.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/variables.tf</a></p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>output.tf</span></div><code class="language-hcl"><span class="token keyword">output<span class="token type variable"> "ip" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">value</span> <span class="token punctuation">=</span> google_compute_instance.default.network_interface.<span class="token number">0.</span>access_config.<span class="token number">0.</span>nat_ip<span class="token punctuation">&#125;</span><span class="token keyword">output<span class="token type variable"> "command" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Command to setup ssh tunnel to the proxy server"</span>  <span class="token property">value</span> <span class="token punctuation">=</span> format(<span class="token string">"ssh-keygen -R %s; ssh -L3128:localhost:3128 %s@%s"</span>,    google_compute_instance.default.network_interface.<span class="token number">0.</span>access_config.<span class="token number">0.</span>nat_ip,    var.ssh_username,  google_compute_instance.default.network_interface.<span class="token number">0.</span>access_config.<span class="token number">0.</span>nat_ip)<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/output.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/google/output.tf</a></p><p>Run <code>terraform apply</code>:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">terraform apply</span></span><span class="token output">var.google_access_credentials  The json file that contains key of your service account in Google Cloud  Enter a value: a.josnvar.project  Google Cloud Project Name  Enter a value: avar.ssh_public_key  Public key for SSH  Enter a value: ssh-rsa AAAAB...var.ssh_username  username of SSH to the compute engine  Enter a value: neoTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with thefollowing symbols:  + createTerraform will perform the following actions:  # google_compute_instance.default will be created  + resource "google_compute_instance" "default" &#123;      ...      + machine_type         = "e2-micro"      + metadata             = &#123;          + "ssh-keys"       = "neo:ssh-rsa AAAAB..."          + "startup-script" = "sudo apt-get update;sudo apt-get install -y squid;sudo systemctl start squid"        &#125;      ...    &#125;Plan: 1 to add, 0 to change, 0 to destroy.Changes to Outputs:  + command = (known after apply)  + ip      = (known after apply)Do you want to perform these actions?  Terraform will perform the actions described above.  Only 'yes' will be accepted to approve.  Enter a value: yesgoogle_compute_instance.default: Creating...google_compute_instance.default: Still creating... [10s elapsed]google_compute_instance.default: Creation complete after 17s [id=projects/a/zones/us-west1-a/instances/proxy-server]Apply complete! Resources: 1 added, 0 changed, 0 destroyed.Outputs:command = "ssh -L3128:localhost:3128 neo@123.123.123.123"ip = "123.123.123.123"</span></code></pre><p>To set up an SSH tunnel to the proxy, use the command provided in the output <code>command</code>. You may need to wait a few moments until the proxy is ready. Once the proxy is ready, your browser can use <code>localhost:3128</code> as the proxy.</p><p>When a cloud service reuses an IP address to create a new compute instance, you may experience a host validation error if you had SSH to the IP address before. This occurs because the new compute instance generates a new host key, which does not match the key you trusted in <code>.ssh/known_hosts</code>. To resolve this issue, you can either remove the trusted host key using <code>ssh-keygen -R</code> or send the private key from your local machine to the new compute instance.</p><p>Remember to destroy the compute engine once you have finished with it:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">terraform destroy</span></span><span class="token output">google_compute_instance.default: Refreshing state... [id=projects/f-01man-com/zones/us-west1-a/instances/proxy-server]Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with thefollowing symbols:  - destroyTerraform will perform the following actions:  # google_compute_instance.default will be destroyed  - resource "google_compute_instance" "default" &#123;      ...    &#125;Plan: 0 to add, 0 to change, 1 to destroy.Do you really want to destroy all resources?  Terraform will destroy all your managed infrastructure, as shown above.  There is no undo. Only 'yes' will be accepted to confirm.  Enter a value: yesgoogle_compute_instance.default: Destroying... [id=projects/a/zones/us-west1-a/instances/proxy-server]google_compute_instance.default: Still destroying... [id=projects/a/zones/us-west1-a/instances/proxy-server, 10s elapsed]google_compute_instance.default: Destruction complete after 16sDestroy complete! Resources: 1 destroyed.</span></code></pre><p>Given my extremely low usage, like 30 minutes a month, Google charges me around USD $0.20 a month. However, that doesn’t stop me from exploring other cheaper alternatives.</p><h3 id="Provider-2-Azure">Provider 2. Azure</h3><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>main.tf</span></div><code class="language-hcl"><span class="token keyword">resource <span class="token type variable">"azurerm_resource_group"</span></span> <span class="token string">"rg"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>     <span class="token punctuation">=</span> <span class="token string">"squid-rg"</span>  <span class="token property">location</span> <span class="token punctuation">=</span> <span class="token string">"West US"</span><span class="token punctuation">&#125;</span><span class="token keyword">resource <span class="token type variable">"azurerm_virtual_machine"</span></span> <span class="token string">"proxy"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span> <span class="token punctuation">=</span> <span class="token string">"squid-proxy-vm"</span>  <span class="token comment"># charge you if you dont delete</span>  <span class="token property">delete_data_disks_on_termination</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>  <span class="token property">delete_os_disk_on_termination</span>    <span class="token punctuation">=</span> <span class="token boolean">true</span>  <span class="token property">resource_group_name</span>   <span class="token punctuation">=</span> azurerm_resource_group.rg.name  <span class="token property">location</span>              <span class="token punctuation">=</span> azurerm_resource_group.rg.location  <span class="token property">network_interface_ids</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>azurerm_network_interface.nic.id<span class="token punctuation">]</span>  <span class="token property">vm_size</span>               <span class="token punctuation">=</span> <span class="token string">"Standard_B1s"</span>  <span class="token keyword">storage_os_disk</span> <span class="token punctuation">&#123;</span>    <span class="token property">name</span>              <span class="token punctuation">=</span> <span class="token string">"os"</span>    <span class="token property">caching</span>           <span class="token punctuation">=</span> <span class="token string">"ReadWrite"</span>    <span class="token property">managed_disk_type</span> <span class="token punctuation">=</span> <span class="token string">"Standard_LRS"</span>    <span class="token property">create_option</span>     <span class="token punctuation">=</span> <span class="token string">"FromImage"</span>    <span class="token property">os_type</span>           <span class="token punctuation">=</span> <span class="token string">"Linux"</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">storage_image_reference</span> <span class="token punctuation">&#123;</span>    <span class="token property">publisher</span> <span class="token punctuation">=</span> <span class="token string">"Canonical"</span>    <span class="token property">offer</span>     <span class="token punctuation">=</span> <span class="token string">"0001-com-ubuntu-server-jammy"</span>    <span class="token property">sku</span>       <span class="token punctuation">=</span> <span class="token string">"22_04-lts"</span>    <span class="token property">version</span>   <span class="token punctuation">=</span> <span class="token string">"latest"</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">os_profile</span> <span class="token punctuation">&#123;</span>    <span class="token property">admin_username</span> <span class="token punctuation">=</span> var.ssh_username    <span class="token property">computer_name</span>  <span class="token punctuation">=</span> <span class="token string">"proxy"</span>    <span class="token property">custom_data</span> <span class="token punctuation">=</span> base64encode(<span class="token heredoc string">&lt;&lt;CUSTOM_DATA#!/bin/bashsudo apt-get update;sudo apt-get install -y squid;sudo systemctl start squid    CUSTOM_DATA</span>    )  <span class="token punctuation">&#125;</span>  <span class="token keyword">os_profile_linux_config</span> <span class="token punctuation">&#123;</span>    <span class="token property">disable_password_authentication</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>    <span class="token keyword">ssh_keys</span> <span class="token punctuation">&#123;</span>      <span class="token property">path</span> <span class="token punctuation">=</span> <span class="token string">"/home/<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token type variable">ssh_username</span><span class="token punctuation">&#125;</span></span>/.ssh/authorized_keys"</span>      <span class="token property">key_data</span> <span class="token punctuation">=</span> var.ssh_public_key    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">resource <span class="token type variable">"azurerm_network_interface"</span></span> <span class="token string">"nic"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>                <span class="token punctuation">=</span> <span class="token string">"squid-nic"</span>  <span class="token property">resource_group_name</span> <span class="token punctuation">=</span> azurerm_resource_group.rg.name  <span class="token property">location</span>            <span class="token punctuation">=</span> azurerm_resource_group.rg.location  <span class="token keyword">ip_configuration</span> <span class="token punctuation">&#123;</span>    <span class="token property">name</span>                          <span class="token punctuation">=</span> <span class="token string">"squid-ipconfig"</span>    <span class="token property">subnet_id</span>                     <span class="token punctuation">=</span> azurerm_subnet.subnet.id    <span class="token property">private_ip_address_allocation</span> <span class="token punctuation">=</span> <span class="token string">"Dynamic"</span>    <span class="token property">public_ip_address_id</span>          <span class="token punctuation">=</span> azurerm_public_ip.proxy.id  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">resource <span class="token type variable">"azurerm_subnet"</span></span> <span class="token string">"subnet"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>                 <span class="token punctuation">=</span> <span class="token string">"squid-subnet"</span>  <span class="token property">resource_group_name</span>  <span class="token punctuation">=</span> azurerm_resource_group.rg.name  <span class="token property">virtual_network_name</span> <span class="token punctuation">=</span> azurerm_virtual_network.vnet.name  <span class="token property">address_prefixes</span>     <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"10.0.0.0/24"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">resource <span class="token type variable">"azurerm_virtual_network"</span></span> <span class="token string">"vnet"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>                <span class="token punctuation">=</span> <span class="token string">"squid-vnet"</span>  <span class="token property">resource_group_name</span> <span class="token punctuation">=</span> azurerm_resource_group.rg.name  <span class="token property">address_space</span>       <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"10.0.0.0/8"</span><span class="token punctuation">]</span>  <span class="token property">location</span>            <span class="token punctuation">=</span> <span class="token string">"West US"</span><span class="token punctuation">&#125;</span><span class="token keyword">resource <span class="token type variable">"azurerm_public_ip"</span></span> <span class="token string">"proxy"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>                <span class="token punctuation">=</span> <span class="token string">"squidPublicIp1"</span>  <span class="token property">resource_group_name</span> <span class="token punctuation">=</span> azurerm_resource_group.rg.name  <span class="token property">location</span>            <span class="token punctuation">=</span> azurerm_resource_group.rg.location  <span class="token property">allocation_method</span>   <span class="token punctuation">=</span> <span class="token string">"Static"</span>  <span class="token keyword">lifecycle</span> <span class="token punctuation">&#123;</span>    <span class="token property">create_before_destroy</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/main.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/main.tf</a></p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>variables.tf</span></div><code class="language-hcl"><span class="token keyword">variable<span class="token type variable"> "ssh_username" </span></span><span class="token punctuation">&#123;</span>    <span class="token property">type</span>        <span class="token punctuation">=</span> string    <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"username of SSH to the compute engine"</span><span class="token punctuation">&#125;</span><span class="token keyword">variable<span class="token type variable"> "ssh_public_key" </span></span><span class="token punctuation">&#123;</span>    <span class="token property">type</span>       <span class="token punctuation">=</span> string    <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Public key for SSH"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/variables.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/variables.tf</a></p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>output.tf</span></div><code class="language-hcl"><span class="token keyword">output<span class="token type variable"> "ip" </span></span><span class="token punctuation">&#123;</span>    <span class="token property">value</span> <span class="token punctuation">=</span> azurerm_public_ip.proxy.ip_address<span class="token punctuation">&#125;</span><span class="token keyword">output<span class="token type variable"> "command" </span></span><span class="token punctuation">&#123;</span>    <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Command to setup ssh tunnel to the proxy server"</span>    <span class="token property">value</span>       <span class="token punctuation">=</span> format(<span class="token string">"ssh-keygen -R %s; ssh -L3128:localhost:3128 %s@%s"</span>,      azurerm_public_ip.proxy.ip_address,      var.ssh_username,      azurerm_public_ip.proxy.ip_address)<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/output.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/modules/azure/output.tf</a></p><p>It takes time to create and destroy. You can check <code>/var/log/cloud-init.log</code> and look for <code>subp.py</code> and <code>part</code> to troubleshoot, e.g.:</p><pre class="language-none"><code class="language-none">2024-05-07 14:14:02,864 - subp.py[DEBUG]: Running command [&#39;&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;instance&#x2F;scripts&#x2F;part-001&#39;] with allowed return codes [0] (shell&#x3D;False, capture&#x3D;False)2024-05-07 14:14:02,864 - subp.py[DEBUG]: Exec format error. Missing #! in script?Command: [&#39;&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;instance&#x2F;scripts&#x2F;part-001&#39;]Exit code: -Reason: [Errno 8] Exec format error: b&#39;&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;instance&#x2F;scripts&#x2F;part-001&#39;</code></pre><h3 id="Other-Cloud-Service-Provider">Other Cloud Service Provider</h3><p>I have also tried Alibaba Cloud and Huawei Cloud. However, Alibaba Cloud requires account verification after a few uses of IP addresses and resources from a country other than China, which asks me to upload my passport, etc. Also, the minimum compute service is monthly instead of consumption-based like Google Cloud.</p><p>On the other hand, Huawei Cloud is better; compute service can be consumption-based. However, bandwidth charges are per day subscription and not metered, resulting in a daily fee of USD 2! Therefore, I do not recommend Alibaba Cloud and Huawei Cloud for those who are Penny Pinchers.</p><h3 id="Cloud-Agnostic-Terraform-Script">Cloud Agnostic Terraform Script</h3><p>Now we have 2 cloud provider options, Azure and Google. We want to create cloud-agnostic Terraform scripts because it allows us to maintain a single set of code and apply it across multiple cloud providers. This approach allows us to easily switch between different cloud service providers if needed. A cloud-agnostic architecture plus money saving!</p><p>Let’s structure the folder as below:</p><pre class="language-none"><code class="language-none">\ - root    \ - main.tf      - variables.tf      - output.tf      - provider.tf    \ - modules        \ - google            \ - main.tf              - variables.tf              - output.tf        \ - azure            \ - main.tf              - variables.tf              - output.tf</code></pre><p>The <code>root</code> folder serves as a cloud-agnostic abstract layer, while subfolders under <code>modules</code>, i.e., <code>modules/azure</code> and <code>modules/google</code>, serve as cloud-specific implementation. What you can expect from running <code>root</code> scripts is to provision a cloud server by providing your username and public key, and the return command to set up an SSH tunnel from the output. Use of which provider depends on the <code>cloud_service_provider</code> variable, either <code>azure</code> or <code>google</code> from the example.</p><pre class="language-hcl" data-language="hcl"><div class="caption"><span>/variables.tf</span></div><code class="language-hcl"><span class="token keyword">variable<span class="token type variable"> "cloud_service_provider" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span>        <span class="token punctuation">=</span> string  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Cloud Service Provider: azure or google"</span>  <span class="token keyword">validation</span> <span class="token punctuation">&#123;</span>    <span class="token property">condition</span>     <span class="token punctuation">=</span> contains(<span class="token punctuation">[</span><span class="token string">"azure"</span>, <span class="token string">"google"</span><span class="token punctuation">]</span>, var.cloud_service_provider)    <span class="token property">error_message</span> <span class="token punctuation">=</span> <span class="token string">"Valid values for var: cloud_service_provider are (azure, google)."</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">variable<span class="token type variable"> "ssh_username" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span>        <span class="token punctuation">=</span> string  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"username of SSH to the compute engine"</span><span class="token punctuation">&#125;</span><span class="token keyword">variable<span class="token type variable"> "ssh_public_key" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span>        <span class="token punctuation">=</span> string  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Public key for SSH"</span><span class="token punctuation">&#125;</span><span class="token keyword">variable<span class="token type variable"> "google_project" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span>        <span class="token punctuation">=</span> string  <span class="token property">default</span>     <span class="token punctuation">=</span> <span class="token string">"no project"</span>  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Google Cloud Project Name."</span><span class="token punctuation">&#125;</span><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token comment"># cross variables validation could be improved in Terraform v1.9.0</span>  <span class="token comment"># tflint-ignore: terraform_unused_declarations</span>  <span class="token property">validate_project</span> <span class="token punctuation">=</span> (var.google_project <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">"no project"</span> &amp;&amp; var.cloud_service_provider <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">"google"</span>) ? tobool(  <span class="token string">"google_project must be provided when the provider is 'google'."</span>) : <span class="token boolean">true</span><span class="token punctuation">&#125;</span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/variables.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/variables.tf</a></p><p><code>/main.tf</code> is very simple, it enables the module to implement cloud proxy per requirement and disable the other:</p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>/main.tf</span></div><code class="language-hcl"><span class="token keyword">module<span class="token type variable"> "azure_server" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">source</span> <span class="token punctuation">=</span> <span class="token string">"./modules/azure"</span>  <span class="token property">count</span>  <span class="token punctuation">=</span> (var.cloud_service_provider <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">"azure"</span>) ? <span class="token number">1</span> : <span class="token number">0</span>  <span class="token property">ssh_public_key</span> <span class="token punctuation">=</span> var.ssh_public_key  <span class="token property">ssh_username</span>   <span class="token punctuation">=</span> var.ssh_username<span class="token punctuation">&#125;</span><span class="token keyword">module<span class="token type variable"> "google_server" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">source</span>         <span class="token punctuation">=</span> <span class="token string">"./modules/google"</span>  <span class="token property">count</span>          <span class="token punctuation">=</span> (var.cloud_service_provider <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">"google"</span>) ? <span class="token number">1</span> : <span class="token number">0</span>  <span class="token property">ssh_public_key</span> <span class="token punctuation">=</span> var.ssh_public_key  <span class="token property">ssh_username</span>   <span class="token punctuation">=</span> var.ssh_username<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/main.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/main.tf</a></p><p><code>/output.tf</code> is similar to <code>/main.tf</code>, which returns <code>ip</code> and <code>command</code> as well:</p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>/output.tf</span></div><code class="language-hcl"><span class="token keyword">output<span class="token type variable"> "ip" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">value</span> <span class="token punctuation">=</span> (var.cloud_service_provider <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">"azure"</span>) ? module.azure_server<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.ip : module.google_server<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.ip<span class="token punctuation">&#125;</span><span class="token keyword">output<span class="token type variable"> "command" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">description</span> <span class="token punctuation">=</span> <span class="token string">"Command to setup ssh tunnel to the proxy server"</span>  <span class="token property">value</span>       <span class="token punctuation">=</span> (var.cloud_service_provider <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">"azure"</span>) ? module.azure_server<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.command : module.google_server<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.command<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/output.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/output.tf</a></p><p>Providers in Terraform scripts are removed from modules and put together into <code>/provider.tf</code>.</p><pre class="line-numbers language-hcl" data-language="hcl"><div class="caption"><span>/provider.tf</span></div><code class="language-hcl"><span class="token keyword">terraform</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">required_providers</span> <span class="token punctuation">&#123;</span>    <span class="token property">azapi</span> <span class="token punctuation">=</span> <span class="token punctuation">&#123;</span>      <span class="token property">source</span> <span class="token punctuation">=</span> <span class="token string">"Azure/azapi"</span>    <span class="token punctuation">&#125;</span>    <span class="token property">azurerm</span> <span class="token punctuation">=</span> <span class="token punctuation">&#123;</span>      <span class="token property">source</span> <span class="token punctuation">=</span> <span class="token string">"hashicorp/azurerm"</span>    <span class="token punctuation">&#125;</span>    <span class="token property">google</span> <span class="token punctuation">=</span> <span class="token punctuation">&#123;</span>      <span class="token property">source</span> <span class="token punctuation">=</span> <span class="token string">"hashicorp/google"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">provider<span class="token type variable"> "azapi" </span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">provider<span class="token type variable"> "azurerm" </span></span><span class="token punctuation">&#123;</span>  <span class="token keyword">features</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">provider<span class="token type variable"> "google" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">project</span> <span class="token punctuation">=</span> var.google_project  <span class="token property">region</span>  <span class="token punctuation">=</span> <span class="token string">"us-central1"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/provider.tf">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/provider.tf</a></p><blockquote><p>Full source code: <a href="https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/">https://github.com/neoalienson/cloud_vpn_proxy/blob/main/server/</a></p></blockquote><h3 id="Notification-on-Proxy-Ready">Notification on Proxy Ready</h3><p><em>Coming soon…</em></p><h2 id="Price-comparison">Price comparison</h2><h3 id="Azure">Azure</h3><p>Virtual Machine<br />Virtual Network<br />Storage<br />Bandwidth</p><h3 id="Google-Cloud">Google Cloud</h3><p>Compute Engine<br />Networking</p><p><em>Coming soon…</em></p><h2 id="VPN-with-WireGuard">VPN with WireGuard</h2><p><em>Coming soon…</em></p><h2 id="User-friendly-on-and-off">User friendly on and off</h2><p><em>Coming soon…</em></p><h2 id="Reminder-to-switch-off">Reminder to switch off</h2><p><em>Coming soon…</em></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> terraform </tag>
            
            <tag> cloud </tag>
            
            <tag> Azure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Passkeys - Your Gateway to Seamless Security</title>
      <link href="/2023/Passkeys_Your_Gateway_to_Seamless_Security/"/>
      <url>/2023/Passkeys_Your_Gateway_to_Seamless_Security/</url>
      
        <content type="html"><![CDATA[<p><img src="index.jpeg" alt="" /></p><p>In the digital world, passwords are like the keys to your personal treasure chest, but let’s face it, they’re more like a bunch of sticky notes you can’t find when you need them but someone else somehow can. Can we eliminate passwords by some degree? Yes, with Passkeys.</p><blockquote><p>Passkey is a type of authentication method used to secure access to various online services and accounts. It is a unique key pair consisting of a public key and a private key that is generated specifically for an individual user</p></blockquote><p>… in short, use your phone or fingerprint device with biometric to authenticate your login.</p><p>Before adopting Passkeys you can have a trial on <a href="https://www.passkeys.io/">https://www.passkeys.io/</a>. Remember to read instructions from <a href="https://www.passkeys.io/#How-to-use-a-passkey">https://www.passkeys.io/#How-to-use-a-passkey</a>. You can create a passkey on multiple devices for the same account.</p><h2 id="How-Passkey-works-for-dummies">How Passkey works for dummies</h2><p>Below demo runs on a Windows with fingerprint sensor and Windows Hello. You can have the same experience on mobile.</p><h3 id="Creating-an-account-on-website">Creating an account on website</h3><p>Like many applications, you need to create an account first. Most websites would ask you for a password setup to keep you comfortable.</p><style>.border {    border: 1px solid #000; /* 1 pixel solid black border */    border-radius: 5px; /* rounded corners */    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3); /* shadow effect */}</style><p>Create an account with email you like,</p><img src=create1.png class="border"><p>Registration is skipped as this is just a demo</p><img src=create2.png class="border"><h3 id="Create-first-passkey">Create first passkey</h3><p>Once you click the create button, the website would ask your browser to setup passkey.</p><img src=create3.png class="border"><p>Your browser directs your request to a module which has passkey capability. Bitwarden in this case.</p><img src=create4.png class="border"><p>Authenticate with biometric.</p><img src=create5.png class="border"><p>Create a public/private key pair. Private key stays in the module. Only public key send back to browser and the website.</p><img src=create6.png class="border"><p>That’s it! The website associates your account with your passkey. You can logout/sign out.</p><img src=create8.png class="border"><h3 id="Login">Login</h3><p>Login is very similar to creating an account. Sign in with a passkey. You don’t need to provide your email address.</p><img src=login1.png class="border"><p>The process is the same.</p><img src=login2.png class="border"><p>You may notice that you can use more than one device to login.</p><img src=create9.png class="border"><h3 id="Setting-up-second-passkey-for-your-account">Setting up second passkey for your account</h3><p>Let’s try “Use another device”</p><img src=create10.png class="border"><p>“iPhone, iPad, or Android device”</p><img src=create11.png class="border"><p>Scan QR code from your device.</p><img src=create12.png class="border"><p>Your device tells the website that the QR code is scanned from your account.</p><img src=create13.png class="border"><p>After authentication, your device generates its own public/private key pair, and then sends the public key to the website.</p><img src=create14.png class="border"><p>You can now use the second passkey to login!</p><p><img src="passkey_setup.png" alt="" /></p><h3 id="What-if-my-mobile-device-is-lost">What if my mobile device is lost</h3><p>Remember to setup recovery method for your account! Second passkey can be a recovery but please pick a reliable one to yourself. Otherwise you will end up like below.</p><p><img src="passkey_lost.jpeg" alt="" /></p><h2 id="Where-can-I-use-passkey">Where can I use passkey</h2><p>The following list will assist you in identifying services that are compatible with passkey adoption.</p><p>Services/OS that support Passkey:</p><ul><li><a href="https://bitwarden.com/">Bitwarden</a></li><li>Windows (Windows Hello)</li><li>iOS</li><li>Android</li></ul><p>Websites/Apps that support Passkey:</p><ul><li><a href="https://amazon.com">Amazon</a></li><li><a href="https://apple.com">Apple ID</a> iOS only</li><li><a href="https://github.com">GitHub</a></li><li><a href="https://myaccount.google.com">Google Account</a></li><li><a href="https://identity.ic0.app/">Internet Identity</a></li><li><a href="https://www.linkedin.com/">LinkedIn</a></li><li><a href="https://www.npmjs.com/">npmjs.com</a></li><li>WhatsApp (Android &amp; iOS)</li><li><a href="https://yahoo.com/">Yahoo</a></li></ul><p>Websites that do not yet support Passkey but support Multi-Factor Authentication (MFA):</p><ul><li><a href="https://atlassian.com">Atlassian</a> and its product family such as <a href="https://bitbucket.com">Bitbucket</a></li><li><a href="https://docker.com">Docker</a></li><li><a href="https://gitlab.com">Gitlab</a></li><li><a href="https://terraform.io">terraform.io</a></li><li><a href="https://wellfound.com/">Wellfound.com</a></li></ul><p>You are encouraged to adopt Passkeys for enhanced security, as they are not susceptible to traditional phishing attacks and do not require memorizing complex passwords.</p><p>With the support of industry giants and the convenience they offer, Passkeys are set to become the new standard in digital security.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Cybersecurity </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Everything as Code - A Trend or a Necessity?</title>
      <link href="/2023/Everything_as_Code_a_Trend_or_Necessity/"/>
      <url>/2023/Everything_as_Code_a_Trend_or_Necessity/</url>
      
        <content type="html"><![CDATA[<p><img src="index.jpeg" alt="" /></p><p>In the era of cloud computing, automation, and DevSecOps, the concept of “everything as code” or simply “as code” has become increasingly popular and relevant. But what does it mean, and what are the benefits and challenges of adopting it?</p><p>Everything as code is a paradigm that treats any aspect of software development, delivery, or operation as a code artifact that can be versioned, tested, and deployed using the same tools and processes as the application code. As code encompasses various domains, such as:</p><ul><li><strong>Infrastructure as code (IaC)</strong>: The practice of defining and managing cloud resources, such as servers, networks, and storage, using configuration files or scripts. Terraform is the best representation of Infrastructure as code.</li><li><strong>Policy as code</strong>: The practice of expressing and enforcing security, compliance, or governance rules as code that can be integrated into the development and deployment pipelines.</li><li><strong>Diagram as code</strong>: The practice of creating and updating diagrams, such as architecture diagrams or flowcharts, using code that can be rendered into graphical formats.</li><li><strong>Presentation as code</strong>: The practice of creating and updating presentations, such as slides or reports, using code that can be converted into different formats or platforms. <a href="https://sli.dev/">slidev</a> is one of the tools, but HTML/CSS/JS and VBA can be less human-readable alternatives.</li><li><strong>Database as code</strong>: The practice of defining and managing database schemas, data, and migrations using code that can be executed by database engines or tools.</li><li><strong>Documentation as code</strong>: The practice of writing and maintaining documentation using plain text formats, such as Markdown or AsciiDoc, that can be processed by documentation generators or integrated into code repositories. There are countless frameworks to generate human-readable documents from programmer-friendly code.</li><li><strong>Configuration Management as code</strong>: The practice of defining and managing application settings, such as environment variables or feature flags, using code that can be applied dynamically or statically.</li></ul><!--- **Workflow as code**: The practice of defining and orchestrating complex workflows, such as data pipelines or business processes, using code that can be executed by workflow engines or platforms.- **Process as code**: The practice of defining and automating software development or operation processes, such as testing, deployment, or monitoring, using code that can be run by process tools or frameworks.- **Quality as code**: The practice of defining and measuring software quality attributes, such as performance, reliability, or security, using code that can be integrated into the development and deployment pipelines.--><ul><li><strong>UI as code</strong>: The practice of creating and updating user interfaces, such as web pages or mobile apps, using code that can be rendered into different devices or platforms. UI is usually stored with XML and HTML, but it is not uncommon to generate from programming languages.</li><li><strong>AI as code</strong>: The practice of creating and updating artificial intelligence models, such as machine learning or deep learning models, using code that can be trained and deployed using AI frameworks or platforms. Meanwhile, models can be “layered” with inferring. Ollama has Dockerfile-like as code that can be used for that purpose besides system prompts.</li></ul><h2 id="The-main-advantages-of-as-code-are">The main advantages of as code are:</h2><ul><li><strong>Consistency</strong>: As code ensures that all aspects of software development, delivery, or operation are consistent with each other and with the application code. This reduces errors, conflicts, and discrepancies that may arise from manual or ad hoc interventions.</li><li><strong>Reusability</strong>: As code enables the reuse of code artifacts across different projects, environments, or teams. This increases efficiency, productivity, and collaboration among developers and operators.</li><li><strong>Traceability</strong>: As code provides a clear and complete history of changes made to any aspect of software development, delivery, or operation. This facilitates auditing, debugging, and troubleshooting issues that may occur during the software lifecycle.</li><li><strong>Scalability</strong>: As code allows for the easy and rapid scaling of cloud resources, workflows, or models to meet changing demands or requirements. This improves performance, availability, and resilience of software systems.</li><li><strong>Automation</strong>: As code enables the automation of tasks that are otherwise tedious, time-consuming, or error-prone. This frees up developers and operators to focus on more creative or strategic activities.</li></ul><h2 id="The-main-challenges-of-as-code-are">The main challenges of as code are:</h2><ul><li><strong>Complexity</strong>: As code introduces additional layers of abstraction and complexity to software development, delivery, or operation. This requires developers and operators to learn new skills, tools, and languages to deal with different domains of as code.</li><li><strong>Integration</strong>: As code requires the integration of various tools and platforms to support different domains of as code. This may pose compatibility issues, security risks, or maintenance overheads for developers and operators.</li><li><strong>Testing</strong>: Most as code demands rigorous testing of code artifacts to ensure their correctness, reliability, and quality. This may require additional resources, time, or expertise for developers and operators.</li></ul><h2 id="Is-it-justified">Is it justified?</h2><p>Is it justified to use as code for each use case? The answer depends on several factors, such as:</p><ul><li>The nature and scope of the project: Some projects may benefit more from as code than others, depending on their size, complexity, or domain. For example, a large-scale, distributed, or data-intensive project may benefit more from IaC, WaC, or AIC than a small-scale, monolithic, or logic-intensive project.</li><li>The maturity and availability of the tools and platforms: Some tools and platforms may support as code better than others, depending on their features, functionality, or compatibility. For example, some cloud providers may offer more options and flexibility for IaC than others, or some AI frameworks may offer more capabilities and performance for AIC than others.</li><li>The skills and preferences of the developers and operators: Some developers and operators may prefer as code over others, depending on their skills, experience, or style. For example, some developers may enjoy writing code more than using graphical interfaces, or some operators may prefer using code more than using dashboards.</li></ul><h2 id="Status-of-as-code-in-each-domain">Status of as code in each domain</h2><p>With the above factors, below is the scale from my personal view,</p><table><thead><tr><th>as code</th><th>status</th><th>justified (5 star max)</th></tr></thead><tbody><tr><td>Infrastructure</td><td>Very mature and widely used</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>Policy</td><td>Mature but not being widely used</td><td>⭐⭐⭐</td></tr><tr><td>Diagram</td><td>Depends on diagram type. Some are difficult to adjust layout</td><td>⭐⭐⭐</td></tr><tr><td>Presentation</td><td>Difficult to fine-tune layout and create animations</td><td>⭐</td></tr><tr><td>Database</td><td></td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>Documentation</td><td>Markdown and many more</td><td>⭐⭐⭐⭐</td></tr><tr><td>Configuration</td><td></td><td>⭐⭐⭐</td></tr><tr><td>UI</td><td>Can be generated with programming language</td><td>⭐⭐⭐⭐</td></tr><tr><td>AI</td><td>Model can be layered</td><td>⭐⭐</td></tr></tbody></table><h2 id="Diagram-as-Code-Resources">Diagram as Code Resources</h2><h3 id="Mermaid-JS">Mermaid JS</h3><p><a href="https://mermaid.js.org/">https://mermaid.js.org/</a></p><p>The best way to represent diagrams as code in YAML language is through MermaidJS, a JavaScript library that can generate diagrams on the fly. GitHub and many platforms support MermaidJS natively. Other platforms like Hexo, which generates this blog, also have plugins to render diagrams with MermaidJS. The error messages are very intuitive compared to other diagram as code libraries. Highly recommended for writing simple diagrams.</p><h3 id="PlantUML">PlantUML</h3><p><a href="https://github.com/plantuml/plantuml">https://github.com/plantuml/plantuml</a></p><p>A well-known diagram as code generator produces images from human-readable language. It generates images at a tolerable speed, even when processing Java programs. This tool supports multiple-page diagrams. However, mastering positioning can be challenging even though it supports various layout types. Lines may run over labels and other issues may arise as your diagrams become more complex.</p><h3 id="AWS-Diagram-as-Code">AWS Diagram-as-Code</h3><p><a href="https://github.com/awslabs/diagram-as-code">https://github.com/awslabs/diagram-as-code</a></p><p>The project began in February 2024, which is relatively fresh. The diagram looks nice with icons and grouping:</p><p><img src="aws.png" alt="Example from AWS" /></p><p>Although it uses YAML, writing diagrams with its structure can be punishing once you start to set links between resources. You need to write at least four lines to describe them effectively, such as Source, Target, SourcePosition, and TargetPosition:</p><pre class="language-yaml" data-language="yaml"><div class="caption"><span>links.yaml</span></div><code class="language-yaml"><span class="token key atrule">Links</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">Source</span><span class="token punctuation">:</span> ALB     <span class="token key atrule">SourcePosition</span><span class="token punctuation">:</span> NNW     <span class="token key atrule">Target</span><span class="token punctuation">:</span> VPCPublicSubnet1Instance     <span class="token key atrule">TargetPosition</span><span class="token punctuation">:</span> SSE     <span class="token key atrule">TargetArrowHead</span><span class="token punctuation">:</span>       <span class="token key atrule">Type</span><span class="token punctuation">:</span> Open</code></pre><p>SourcePosition and TargetPosition are required because the line does not automatically position itself with respect to the resource. Although the diagram looks nice, it does not support AWS styling like callouts. Not recommended unless you want a quick diagram from infrastructure as code in CloudFormation, or converting from Terraform. However, you still need a lot of work to finalize a diagram.</p><h2 id="Conclusion">Conclusion</h2><p>In conclusion, as code is a powerful and promising paradigm that can enhance software development, delivery, or operation. However, it also comes with its own challenges and trade-offs that need to be considered carefully before adopting it. As code is not a one-size-fits-all solution, but rather a context-dependent choice that depends on the project, the tools, and the people involved.</p><style>.article-entry ul li {  margin-bottom: 20px; }</style><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Troubleshooting Terraform</title>
      <link href="/2023/Troubleshooting_Terraform/"/>
      <url>/2023/Troubleshooting_Terraform/</url>
      
        <content type="html"><![CDATA[<p><img src="log.png" alt="Trace log with dependency analysis" /></p><p>Terraform is a great tool for managing infrastructure as code, but sometimes it can be tricky to debug when things go wrong. In this blog post, I’ll share tips on how to troubleshoot Terraform issues.</p><h2 id="Enabling-Debug-Log">Enabling Debug Log</h2><p>The <code>TF_LOG</code> environment variable allows you to set the log level for Terraform, which can be useful for getting more details about what Terraform is doing behind the scenes. You can set it to one of these values: <code>TRACE</code>, <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, or <code>ERROR</code>. The default is <code>INFO</code>, which only shows high-level messages. To get more verbose output, you can set it to <code>DEBUG</code>. <code>TRACE</code> has details from <code>DEBUG</code> but includes dependency analysis details that are not needed for most debugging. For example, you can run this command before running Terraform:</p><p><code>export TF_LOG=DEBUG</code> and then <code>terraform plan</code></p><p>or run it in a single line</p><p><code>export TF_LOG=DEBUG &amp;&amp; terraform plan</code></p><p>If you specify the <code>TF_LOG_PATH</code> environment variable, logs will be stored in the file.</p><h2 id="TF-LOG-CORE-and-TF-LOG-PROVIDER">TF_LOG_CORE and TF_LOG_PROVIDER</h2><p>The debug log can be massive and over 100MB! If you would like to focus on debugging a provider, you should use <code>TF_LOG_PROVIDER</code> with arguments from <code>TF_LOG</code>. If you suspect a problem with dependencies, you should use <code>TF_LOG_CORE</code>.</p><h2 id="Dependency-and-Parallelism">Dependency and Parallelism</h2><p>Terraform analyzes dependencies between Terraform modules before execution. Dependency analysis ensures resources are provisioned in the correct order. Meanwhile, Terraform uses the analysis results for efficient parallel execution of operations by identifying independent sets of resources that can be provisioned or modified concurrently. However, logs from concurrent execution are very difficult to read, and we have to disable the concurrency with the parameter <code>-parallelism=1</code> on <code>plan</code> and <code>apply</code>.</p><p>With <code>-parallelism=1</code>, resources are created/modified/destroyed one at a time, in sequence. This allows for easier debugging and troubleshooting, as each resource is executed one at a time. e.g., <code>terraform apply -parallelism=1</code>:</p><svg aria-roledescription="flowchart-v2" role="graphics-document document" viewBox="-8 -8 255.15625 302" style="max-width: 255.15625px;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-1758626673520"><style>#mermaid-1758626673520{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1758626673520 .error-icon{fill:#552222;}#mermaid-1758626673520 .error-text{fill:#552222;stroke:#552222;}#mermaid-1758626673520 .edge-thickness-normal{stroke-width:2px;}#mermaid-1758626673520 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1758626673520 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1758626673520 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1758626673520 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1758626673520 .marker{fill:#333333;stroke:#333333;}#mermaid-1758626673520 .marker.cross{stroke:#333333;}#mermaid-1758626673520 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-1758626673520 .label{font-family:"trebuchet ms",verdana,arial,sans-serif;color:#333;}#mermaid-1758626673520 .cluster-label text{fill:#333;}#mermaid-1758626673520 .cluster-label span,#mermaid-1758626673520 p{color:#333;}#mermaid-1758626673520 .label text,#mermaid-1758626673520 span,#mermaid-1758626673520 p{fill:#333;color:#333;}#mermaid-1758626673520 .node rect,#mermaid-1758626673520 .node circle,#mermaid-1758626673520 .node ellipse,#mermaid-1758626673520 .node polygon,#mermaid-1758626673520 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1758626673520 .flowchart-label text{text-anchor:middle;}#mermaid-1758626673520 .node .katex path{fill:#000;stroke:#000;stroke-width:1px;}#mermaid-1758626673520 .node .label{text-align:center;}#mermaid-1758626673520 .node.clickable{cursor:pointer;}#mermaid-1758626673520 .arrowheadPath{fill:#333333;}#mermaid-1758626673520 .edgePath .path{stroke:#333333;stroke-width:2.0px;}#mermaid-1758626673520 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1758626673520 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1758626673520 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1758626673520 .labelBkg{background-color:rgba(232, 232, 232, 0.5);}#mermaid-1758626673520 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1758626673520 .cluster text{fill:#333;}#mermaid-1758626673520 .cluster span,#mermaid-1758626673520 p{color:#333;}#mermaid-1758626673520 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:12px;background:hsl(80, 100%, 96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1758626673520 .flowchartTitleText{text-anchor:middle;font-size:18px;fill:#333;}#mermaid-1758626673520 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="6" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-pointEnd"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 0 L 10 5 L 0 10 z"></path></marker><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="4.5" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-pointStart"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 5 L 10 10 L 10 0 z"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="11" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-circleEnd"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="-1" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626673520_flowchart-circleStart"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="12" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626673520_flowchart-crossEnd"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="-1" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626673520_flowchart-crossStart"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><g class="root"><g class="clusters"></g><g class="edgePaths"><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-A LE-C" id="L-A-C-0" d="M119.578,34L119.578,38.167C119.578,42.333,119.578,50.667,119.578,58.117C119.578,65.567,119.578,72.133,119.578,75.417L119.578,78.7"></path><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-C LE-D" id="L-C-D-0" d="M119.578,118L119.578,122.167C119.578,126.333,119.578,134.667,119.578,142.117C119.578,149.567,119.578,156.133,119.578,159.417L119.578,162.7"></path><path marker-end="url(#mermaid-1758626673520_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-D LE-E" id="L-D-E-0" d="M119.578,202L119.578,206.167C119.578,210.333,119.578,218.667,119.578,226.117C119.578,233.567,119.578,240.133,119.578,243.417L119.578,246.7"></path></g><g class="edgeLabels"><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g></g><g class="nodes"><g transform="translate(119.578125, 17)" data-id="A" data-node="true" id="flowchart-A-0" class="node default default flowchart-label"><rect height="34" width="157.90625" y="-17" x="-78.953125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-71.453125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="142.90625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Terraform Operation</span></div></foreignObject></g></g><g transform="translate(119.578125, 101)" data-id="C" data-node="true" id="flowchart-C-1" class="node default default flowchart-label"><rect height="34" width="186.28125" y="-17" x="-93.140625" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-85.640625, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="171.28125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Resource 1 Modification</span></div></foreignObject></g></g><g transform="translate(119.578125, 185)" data-id="D" data-node="true" id="flowchart-D-3" class="node default default flowchart-label"><rect height="34" width="186.28125" y="-17" x="-93.140625" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-85.640625, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="171.28125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Resource 2 Modification</span></div></foreignObject></g></g><g transform="translate(119.578125, 269)" data-id="E" data-node="true" id="flowchart-E-5" class="node default default flowchart-label"><rect height="34" width="239.15625" y="-17" x="-119.578125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-112.078125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="224.15625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Terraform Execution Completed</span></div></foreignObject></g></g></g></g></g></svg><p>When <code>-parallelism</code> is not specified, the default value is 10. The resources are created/modified/destroyed in parallel, allowing for faster execution. However, this can also make it more difficult to debug and troubleshoot issues, as multiple resources are executed simultaneously. e.g., <code>terraform apply</code>:</p><svg aria-roledescription="flowchart-v2" role="graphics-document document" viewBox="-8 -8 438.5625 218" style="max-width: 438.5625px;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-1758626674106"><style>#mermaid-1758626674106{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1758626674106 .error-icon{fill:#552222;}#mermaid-1758626674106 .error-text{fill:#552222;stroke:#552222;}#mermaid-1758626674106 .edge-thickness-normal{stroke-width:2px;}#mermaid-1758626674106 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1758626674106 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1758626674106 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1758626674106 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1758626674106 .marker{fill:#333333;stroke:#333333;}#mermaid-1758626674106 .marker.cross{stroke:#333333;}#mermaid-1758626674106 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-1758626674106 .label{font-family:"trebuchet ms",verdana,arial,sans-serif;color:#333;}#mermaid-1758626674106 .cluster-label text{fill:#333;}#mermaid-1758626674106 .cluster-label span,#mermaid-1758626674106 p{color:#333;}#mermaid-1758626674106 .label text,#mermaid-1758626674106 span,#mermaid-1758626674106 p{fill:#333;color:#333;}#mermaid-1758626674106 .node rect,#mermaid-1758626674106 .node circle,#mermaid-1758626674106 .node ellipse,#mermaid-1758626674106 .node polygon,#mermaid-1758626674106 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1758626674106 .flowchart-label text{text-anchor:middle;}#mermaid-1758626674106 .node .katex path{fill:#000;stroke:#000;stroke-width:1px;}#mermaid-1758626674106 .node .label{text-align:center;}#mermaid-1758626674106 .node.clickable{cursor:pointer;}#mermaid-1758626674106 .arrowheadPath{fill:#333333;}#mermaid-1758626674106 .edgePath .path{stroke:#333333;stroke-width:2.0px;}#mermaid-1758626674106 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1758626674106 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1758626674106 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1758626674106 .labelBkg{background-color:rgba(232, 232, 232, 0.5);}#mermaid-1758626674106 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1758626674106 .cluster text{fill:#333;}#mermaid-1758626674106 .cluster span,#mermaid-1758626674106 p{color:#333;}#mermaid-1758626674106 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:12px;background:hsl(80, 100%, 96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1758626674106 .flowchartTitleText{text-anchor:middle;font-size:18px;fill:#333;}#mermaid-1758626674106 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="6" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674106_flowchart-pointEnd"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 0 L 10 5 L 0 10 z"></path></marker><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="4.5" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674106_flowchart-pointStart"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 5 L 10 10 L 10 0 z"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="11" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674106_flowchart-circleEnd"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="-1" viewBox="0 0 10 10" class="marker flowchart" id="mermaid-1758626674106_flowchart-circleStart"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="12" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626674106_flowchart-crossEnd"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="-1" viewBox="0 0 11 11" class="marker cross flowchart" id="mermaid-1758626674106_flowchart-crossStart"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><g class="root"><g class="clusters"></g><g class="edgePaths"><path marker-end="url(#mermaid-1758626674106_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-A LE-C" id="L-A-C-0" d="M259.1,34L270.82,38.167C282.541,42.333,305.981,50.667,317.702,58.117C329.422,65.567,329.422,72.133,329.422,75.417L329.422,78.7"></path><path marker-end="url(#mermaid-1758626674106_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-A LE-D" id="L-A-D-0" d="M163.462,34L151.742,38.167C140.022,42.333,116.581,50.667,104.861,58.117C93.141,65.567,93.141,72.133,93.141,75.417L93.141,78.7"></path><path marker-end="url(#mermaid-1758626674106_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-D LE-E" id="L-D-E-0" d="M93.141,118L93.141,122.167C93.141,126.333,93.141,134.667,104.029,142.704C114.917,150.742,136.693,158.483,147.581,162.354L158.469,166.225"></path><path marker-end="url(#mermaid-1758626674106_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-C LE-E" id="L-C-E-0" d="M329.422,118L329.422,122.167C329.422,126.333,329.422,134.667,318.534,142.704C307.646,150.742,285.87,158.483,274.982,162.354L264.094,166.225"></path></g><g class="edgeLabels"><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g></g><g class="nodes"><g transform="translate(211.28125, 17)" data-id="A" data-node="true" id="flowchart-A-0" class="node default default flowchart-label"><rect height="34" width="157.90625" y="-17" x="-78.953125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-71.453125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="142.90625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Terraform Operation</span></div></foreignObject></g></g><g transform="translate(329.421875, 101)" data-id="C" data-node="true" id="flowchart-C-1" class="node default default flowchart-label"><rect height="34" width="186.28125" y="-17" x="-93.140625" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-85.640625, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="171.28125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Resource 1 Modification</span></div></foreignObject></g></g><g transform="translate(93.140625, 101)" data-id="D" data-node="true" id="flowchart-D-3" class="node default default flowchart-label"><rect height="34" width="186.28125" y="-17" x="-93.140625" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-85.640625, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="171.28125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Resource 2 Modification</span></div></foreignObject></g></g><g transform="translate(211.28125, 185)" data-id="E" data-node="true" id="flowchart-E-5" class="node default default flowchart-label"><rect height="34" width="239.15625" y="-17" x="-119.578125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-112.078125, -9.5)" style="" class="label"><rect></rect><foreignObject height="19" width="224.15625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Terraform Execution Completed</span></div></foreignObject></g></g></g></g></g></svg><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terraform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitOps on Jenkins Pipelines</title>
      <link href="/2023/GitOps_on_Jenkins/"/>
      <url>/2023/GitOps_on_Jenkins/</url>
      
        <content type="html"><![CDATA[<p><img src="hero.png" alt="" /></p><p>If you’re a developer who loves automation, you might have heard of GitOps. GitOps is a way of managing your infrastructure and applications using Git as the single source of truth. GitOps lets you define your desired state in code, and then use tools like Terraform to apply that state to your environments. GitOps also enables continuous delivery, as any change in your Git repository triggers a pipeline that deploys the new version of your code.</p><p>In the context of Jenkins pipelines, GitOps can be used to manage pipelines by treating the pipeline configuration as code, and using Git to manage changes to that code. This allows developers to version control their pipeline configurations, collaborate on changes with other team members, and easily roll back changes if necessary.</p><h3 id="Managing-Jenkins-Pipelines-with-Seeder-Scripts">Managing Jenkins Pipelines with Seeder Scripts</h3><p>A seeder script is a script to create and maintain your pipelines on Jenkins. It is usually written in Groovy scripts.</p><p>Here is an example of a seeder script that creates pipelines in Jenkins. The script uses the Job DSL plugin to define the pipeline jobs in a declarative way. The script loops through a list of repositories and creates a pipeline job for each one. The details of the steps of each pipeline are referenced from the Jenkinsfile in their own repository.</p><pre class="language-groovy" data-language="groovy"><code class="language-groovy"><span class="token comment">// Define the list of repositories</span><span class="token keyword">def</span> repos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'repo1'</span><span class="token punctuation">,</span> <span class="token string">'repo2'</span><span class="token punctuation">,</span> <span class="token string">'repo3'</span><span class="token punctuation">]</span><span class="token comment">// Loop through the list and create a pipeline job for each one</span>repos<span class="token punctuation">.</span>each <span class="token punctuation">&#123;</span> repo <span class="token operator">-></span>  <span class="token function">pipelineJob</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">"</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">repo</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-pipeline"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Use the SCM trigger to run the job when there is a change in the repository</span>    triggers <span class="token punctuation">&#123;</span>      <span class="token function">scm</span><span class="token punctuation">(</span><span class="token string">'H/5 * * * *'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Define the pipeline script path as Jenkinsfile in the root of the repository</span>    definition <span class="token punctuation">&#123;</span>      cpsScm <span class="token punctuation">&#123;</span>        scm <span class="token punctuation">&#123;</span>          git <span class="token punctuation">&#123;</span>            remote <span class="token punctuation">&#123;</span>              <span class="token function">url</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">"https://github.com/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">repo</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.git"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token function">branch</span><span class="token punctuation">(</span><span class="token string">'master'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">scriptPath</span><span class="token punctuation">(</span><span class="token string">'Jenkinsfile'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>You may not feel the script is useful by having 3 pipelines created. Consider you need to create a pipeline for different environments, iterating simpler pipeline creation:</p><pre class="language-groovy" data-language="groovy"><code class="language-groovy"><span class="token comment">// Define a list of repos and environments</span><span class="token keyword">def</span> repos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'repo1'</span><span class="token punctuation">,</span> <span class="token string">'repo2'</span><span class="token punctuation">,</span> <span class="token string">'repo3'</span><span class="token punctuation">]</span><span class="token keyword">def</span> envs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'dev'</span><span class="token punctuation">,</span> <span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token string">'prod'</span><span class="token punctuation">]</span><span class="token comment">// Loop through the list and create a pipeline for each combination</span><span class="token keyword">for</span> <span class="token punctuation">(</span>repo <span class="token keyword">in</span> repos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>env <span class="token keyword">in</span> envs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Define the pipeline name and description</span>    <span class="token keyword">def</span> pipelineName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">"</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">repo</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">env</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">def</span> pipelineDesc <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">"Pipeline for </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">repo</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">env</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> environment"</span></span>    <span class="token comment">// Create a pipeline job using the DSL plugin</span>    <span class="token function">pipelineJob</span><span class="token punctuation">(</span>pipelineName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">description</span><span class="token punctuation">(</span>pipelineDesc<span class="token punctuation">)</span>      <span class="token comment">// Use the Jenkinsfile from the repo as the source of the pipeline definition</span>      definition <span class="token punctuation">&#123;</span>        cpsScm <span class="token punctuation">&#123;</span>          scm <span class="token punctuation">&#123;</span>            git <span class="token punctuation">&#123;</span>              remote <span class="token punctuation">&#123;</span>                <span class="token function">url</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">"https://github.com/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">repo</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.git"</span></span><span class="token punctuation">)</span>              <span class="token punctuation">&#125;</span>              <span class="token function">branches</span><span class="token punctuation">(</span><span class="token string">'master'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>          <span class="token comment">// Specify the path to the Jenkinsfile in the repo</span>          <span class="token function">scriptPath</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">"Jenkinsfile-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token expression">env</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>While seeder scripts can be used to define detailed steps in your pipeline, it’s important to keep these scripts simple and focused on managing the pipeline. Keeping seeder scripts simple makes it easier to maintain and collaborate with other team members.</p><h3 id="Benefits-of-Using-GitOps-with-Seeder-Scripts">Benefits of Using GitOps with Seeder Scripts</h3><p>Using seeder scripts can bring several benefits, including:</p><ul><li><strong>Automation</strong>: You can automate the creation and update of Jenkins pipelines based on the changes in your Git repository. This reduces manual errors and saves time and effort.</li><li><strong>Immutability</strong>: You can keep your Jenkins pipelines immutable, meaning that they are not modified manually after they are created. This ensures consistency and reliability across different environments and stages.</li><li><strong>Versioning</strong>: You can track the history and changes of your Jenkins pipelines using Git commits and branches. This enables you to roll back to previous versions, compare different versions, and audit the changes.</li><li><strong>Collaboration</strong>: You can collaborate with other developers and teams on your Jenkins pipelines using Git features such as pull requests, code reviews, and merge conflicts. This improves the quality and security of your pipelines.</li><li><strong>Recovery</strong>: If Jenkins is corrupted or deleted by accident, you can use the seeder job to redeploy the pipelines from the Git repository.</li><li><strong>Portability</strong>: You can use GitOps to create the same set of pipelines on another Jenkins server. This is especially useful when you would like to test your pipelines with Jenkins/plugin upgrades.</li></ul><p>However, there are also some challenges that you need to take care of when using GitOps to generate Jenkins pipelines. When you use GitOps to generate Jenkins pipelines, you may also use GitOps to destroy them when they are no longer needed. However, this may cause problems if you need to keep the output from pipeline executions (aka console log) for auditing or troubleshooting purposes. One way to overcome this challenge is to use a separate storage system for your log files.</p><p>GitOps is a concept that you can apply to automate everything Ops by using Git as a single source of truth. Jenkins is just one of the applications.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitOps </tag>
            
            <tag> Jenkins </tag>
            
            <tag> Groovy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Best CoPilot Alternative - Running LLM on Local Machine</title>
      <link href="/2023/My_Best_CoPilot_Alternative_Running_LLM_on_Local_Machine/"/>
      <url>/2023/My_Best_CoPilot_Alternative_Running_LLM_on_Local_Machine/</url>
      
        <content type="html"><![CDATA[<p><img src="hero.png" alt="" /></p><p>I’m always on the lookout for new and innovative tools to help me improve my coding skills and increase my productivity. Recently, I stumbled upon Code Llama, a free, open-source large language model (LLM) developed by Meta that allows you to set up on your low-cost gaming desktop. In this blog post, I’ll be sharing my experience with Code Llama and how it can serve as a great alternative to GitHub CoPilot.</p><h2 id="Setup-Code-Llama-with-ollama">Setup Code Llama with ollama</h2><p>ollama (<a href="https://ollama.ai/">https://ollama.ai/</a>), which uses a Dockerfile-like configuration file. It also manages Docker layers from LLM to system prompt. ollama helps a lot to setup and run Code Llama. Although the website says Windows is coming soon, I followed steps in <a href="https://github.com/jmorganca/ollama">https://github.com/jmorganca/ollama</a> and ran it successfully. The following are my setup,</p><ol><li>Windows 11</li><li>WSL 2 with Ubuntu</li><li>Nvidia 3060 12GB</li><li><a href="https://github.com/jmorganca/ollama">https://github.com/jmorganca/ollama</a></li></ol><p>If you do not have enough video RAM, it falls back to system RAM and CPU.</p><p>There are many models for you to choose (<a href="https://ollama.ai/library">https://ollama.ai/library</a>) but you should first try Code Llama. You can pull the Code Llama with <code>ollama pull codellama</code> like a docker image. However, there is a license agreement to accept (<a href="https://ai.meta.com/resources/models-and-libraries/llama-downloads/">https://ai.meta.com/resources/models-and-libraries/llama-downloads/</a>). Once you have requested, accepted, and been approved, you can start using it. If you do not, there are many other libraries you can try.</p><p>❓ Why I choose 12GB Video RAM on display card instead of 8GB, 16GB, 24GB?<br />8GB video cards are more common and cheaper but with an additional 4GB of video RAM (VRAM) you can run a larger model in the next tier. LLMs are usually built in 3 tiers with different model parameter sizes, each tier using a certain amount of VRAM approximately. Below shows 12GB fits both 7B and 13B. RAM more than 12GB is a waste unless you spend time on quantizing the model for the next tier and accept that the model runs much slower after quantization. Code Llama provides a 34B model that you can use with 24GB, which is the only use case for a 24GB video card.</p><table><thead><tr><th>Model</th><th style="text-align:right">Size in storage</th><th style="text-align:right">Typical memory usage</th><th style="text-align:center">VRAM 8GB</th><th style="text-align:center">VRAM 12GB</th><th style="text-align:center">VRAM 24GB</th><th style="text-align:center">VRAM 2 X 24GB</th></tr></thead><tbody><tr><td>7B</td><td style="text-align:right">4GB</td><td style="text-align:right">7GB</td><td style="text-align:center">❌</td><td style="text-align:center">✅</td><td style="text-align:center">✅</td><td style="text-align:center">✅</td></tr><tr><td>13B</td><td style="text-align:right">8GB</td><td style="text-align:right">11GB</td><td style="text-align:center">❌</td><td style="text-align:center">❌</td><td style="text-align:center">✅</td><td style="text-align:center">✅</td></tr><tr><td>34B</td><td style="text-align:right">19GB</td><td style="text-align:right">23GB</td><td style="text-align:center">❌</td><td style="text-align:center">❌</td><td style="text-align:center">✅</td><td style="text-align:center">✅</td></tr><tr><td>70B</td><td style="text-align:right">40GB</td><td style="text-align:right">35GB</td><td style="text-align:center">❌</td><td style="text-align:center">❌</td><td style="text-align:center">❌</td><td style="text-align:center">✅</td></tr></tbody></table><p>The largest video RAM size for a consumer-grade display card is 24GB, so you will need two video cards.</p><h2 id="How-to-Set-Up-Code-Llama-with-Visual-Studio-Code">How to Set Up Code Llama with Visual Studio Code</h2><p>Setting up Code Llama with Visual Studio Code is easy and straightforward. Search and install a Visual Studio Code extension “Continue”. This extension allows you to use LLM from the service provider and local LLM service like ollama. “Continue” starts an interactive tutorial and you should start to use it happily.</p><h2 id="Local-vs-CoPilot-or-any-other-subscription-based-service">Local vs CoPilot (or any other subscription-based service)</h2><p>There are many other CoPilot-like service providers that are free. Quality from free services is usually poor, so I will not compare them in the table below,</p><table><thead><tr><th>Feature</th><th>Local</th><th>CoPilot (or any other subscription-based service)</th></tr></thead><tbody><tr><td>Cost of Ownership</td><td>USD 200 for a second-hand nVidia 3060 12GB. Excluding the PC desktop that I already have</td><td>-</td></tr><tr><td>Price</td><td>Free. Electricity costs me around 1kWh a month, which is negligible</td><td>Subscription-based, starting from USD 10 a month</td></tr><tr><td>ROI</td><td>20 months</td><td>-</td></tr><tr><td>LLM for you to choose</td><td>Many. There are programming language-specific models.</td><td>Depends on the provider</td></tr><tr><td>Input token limit</td><td>100k (Code Llama)</td><td>1500 (Copilot)</td></tr><tr><td>Setup</td><td>Quite easy with ollama</td><td>Easy</td></tr><tr><td>Privacy</td><td>Your data stays on your local machine</td><td>Data is sent to third party for processing</td></tr></tbody></table><p>Input token is the “memory” of the context. GPT4’s input token is 8k; that’s why you feel the code generated is better than CoPilot when your requirement is complex. Please note the number could be inaccurate as technology is advancing quickly.</p><p>It’s important to remember that the quality of the generated code is not just determined by the model used, but also by the system prompts and the context provided. This is because there are so many models you can use, and the prompt could matter more than a model. You can customize system prompts that fit you best and switch between models like crazy from Continue. For example, the poor code below could be generated from both Code Llama and GPT4 if you do not have a proper system prompt or if your context has been messed up,</p><blockquote><p>No system prompt<br />write a python function to generate six unique numbers from 1 to 49</p></blockquote><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">def</span> <span class="token function">get_unique_numbers</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">&lt;</span> n<span class="token punctuation">:</span>        num <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> num <span class="token keyword">not</span> <span class="token keyword">in</span> nums<span class="token punctuation">:</span>            nums<span class="token punctuation">.</span>append<span class="token punctuation">(</span>num<span class="token punctuation">)</span>    <span class="token keyword">return</span> nums</code></pre><p>A simple system prompt makes a great difference. Not to mention other parameters such as temperature you can switch easily with ollama and Continue</p><blockquote><p>System prompt: You are a seasoned programmer with a focus on using a single line of code to solve a problem.<br />Write a python function to generate six unique numbers from 1 to 49.</p></blockquote><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">generate_unique_numbers</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span></code></pre><h2 id="Conclusion">Conclusion</h2><p>Security and privacy are my top concerns. Running LLM is my best choice.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keymap of My Split Keyboard</title>
      <link href="/2024/09/KeyMap_Of_My_Split_Keyboard/"/>
      <url>/2024/09/KeyMap_Of_My_Split_Keyboard/</url>
      
        <content type="html"><![CDATA[<h2 id="The-Design">The Design</h2><p>Customizing a 36-key split keyboard can significantly enhance productivity, especially for those who, like myself, require one-handed navigation with a keyboard. With a dedicated layer activated by the left thumb, arrow keys are easily accessible, allowing for seamless navigation in tandem with a mouse. The left-hand keys are optimized for frequent use, ensuring the most commonly used functions are at my fingertips, which reduces the frequency of switching between keyboard and mouse. Additionally, a numpad layer is assigned to the right side, enabling quick number entry.</p><p>The right thumb activates a layer for function keys, while another layer, activated by the right hand, is reserved for symbols, streamlining complex inputs. The layout of symbols resembles a traditional keymap. Opposite hands hold the modifier keys—shift, control, alt, and GUI—balancing functionality across the keyboard. This thoughtful layout exemplifies the efficiency of a well-designed custom key map.</p><p>Lastly, the key layout is QGMLWY, which has been proven to be more ergonomic than QWERTY.</p><p><strong>Design principles</strong></p><ul><li>Keep frequently used keys on the left hand.</li><li>Low learning curve and memorization.</li><li>Use thumb to activate layers.</li><li>Use modifier keys (Shift, Control, Alt, GUI) on opposite hands after a layer is activated.</li><li>Use QGMLWY</li><li>Include a numpad layer on the right hand for entering numbers quickly.</li></ul><h2 id="Base-Layer">Base Layer</h2><p><box></box><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><mbox></mbox><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><box></box><br /><box></box><kbd>Q       </kbd><kbd>G       </kbd><kbd>M       </kbd><kbd>L       </kbd><kbd>W       </kbd><mbox></mbox><kbd>Y       </kbd><kbd>F       </kbd><kbd>U       </kbd><kbd>B       </kbd><kbd>;       </kbd><box></box><br /><box></box><kbd>D       </kbd><kbd>S       </kbd><kbd>T       </kbd><kbd>N       </kbd><kbd>R       </kbd><mbox></mbox><kbd>I       </kbd><kbd>A       </kbd><kbd>E       </kbd><kbd>O       </kbd><kbd>H       </kbd><box></box><br /><box></box><kbd>Z       </kbd><kbd>X       </kbd><kbd>C       </kbd><kbd>V       </kbd><kbd>J       </kbd><mbox></mbox><kbd>K       </kbd><kbd>P       </kbd><kbd>,       </kbd><kbd>.       </kbd><kbd>/       </kbd><box></box><br /><left-space></left-space><kbd>⇧</kbd><kbd>SPACE</kbd><kbd>⌫</kbd><mid></mid><kbd>⏎</kbd><kbd>TAB</kbd><kbd>⇧</kbd></p><h2 id="Left-Hand-Layers">Left Hand Layers</h2><p><box></box><box>         </box><box>        </box><box>           </box><box>           </box><box>        </box><mbox></mbox><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><box></box><br /><box></box><kbd>🔈</kbd><kbd>⏯</kbd><kbd>VOL⏷</kbd><kbd>VOL⏶</kbd><kbd>[       </kbd><mbox></mbox><kbd>]       </kbd><kbd>7       </kbd><kbd>8       </kbd><kbd>9       </kbd><kbd>⠀</kbd><box></box><br /><box></box><kbd>GUI      </kbd><kbd>ALT     </kbd><kbd>CTRL       </kbd><kbd>⇧   </kbd><kbd>(       </kbd><mbox></mbox><kbd>)       </kbd><kbd>4       </kbd><kbd>5       </kbd><kbd>6       </kbd><kbd>⠀</kbd><box></box><br /><box></box><kbd>+        </kbd><kbd>-       </kbd><kbd>*          </kbd><kbd>/          </kbd><kbd>{       </kbd><mbox></mbox><kbd>}       </kbd><kbd>1       </kbd><kbd>2       </kbd><kbd>3       </kbd><kbd>⠀</kbd><box></box><br /><left-space></left-space><kbd>⇧</kbd><kbd style="background-color: yellow">HOLD</kbd><kbd>⠀</kbd><mid></mid><kbd>0       </kbd><kbd>.       </kbd><kbd>⇧</kbd></p><p><box></box><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><mbox></mbox><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><box></box><br /><box></box><kbd>ESC     </kbd><kbd>HOME    </kbd><kbd>⏶</kbd><kbd>END     </kbd><kbd>PGUP    </kbd><mbox></mbox><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><box></box><br /><box></box><kbd>TAB     </kbd><kbd>⏴</kbd><kbd>⏷</kbd><kbd>⏵</kbd><kbd>PGDN    </kbd><mbox></mbox><kbd>CAPS    </kbd><kbd>⇧</kbd><kbd>CTRL    </kbd><kbd>ALT     </kbd><kbd>GUI     </kbd><box></box><br /><box></box><kbd>⏎</kbd><kbd>⠀</kbd><kbd>INS     </kbd><kbd>DEL     </kbd><kbd>⠀</kbd><mbox></mbox><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><box></box><br /><left-space></left-space><kbd>⇧</kbd><kbd>⠀</kbd><kbd style="background-color: yellow">HOLD</kbd><mid></mid><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⇧</kbd></p><h2 id="Right-Hand-Layers">Right Hand Layers</h2><p><box></box><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><mbox></mbox><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><box></box><br /><box></box><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><mbox></mbox><kbd>⠀</kbd><kbd>F7      </kbd><kbd>F8      </kbd><kbd>F9      </kbd><kbd>F10     </kbd><box></box><br /><box></box><kbd>GUI     </kbd><kbd>ALT     </kbd><kbd>CTRL    </kbd><kbd>⇧</kbd><kbd>⠀</kbd><mbox></mbox><kbd>INS     </kbd><kbd>F4      </kbd><kbd>F5      </kbd><kbd>F6      </kbd><kbd>F11     </kbd><box></box><br /><box></box><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd>⠀</kbd><mbox></mbox><kbd>DEL     </kbd><kbd>F1      </kbd><kbd>F2      </kbd><kbd>F3      </kbd><kbd>F12     </kbd><box></box><br /><left-space></left-space><kbd>⇧</kbd><kbd>⠀</kbd><kbd>⠀</kbd><mid></mid><kbd style="background-color: yellow">HOLD</kbd><kbd>⠀</kbd><kbd>⇧</kbd></p><p><box></box><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><mbox></mbox><box>        </box><box>        </box><box>        </box><box>        </box><box>        </box><box></box><br /><box></box><kbd>!       </kbd><kbd>@       </kbd><kbd>#       </kbd><kbd>$       </kbd><kbd>%       </kbd><mbox></mbox><kbd>^       </kbd><kbd>&amp;       </kbd><kbd>*       </kbd><kbd>=       </kbd><kbd style="background-color: lightblue">GAME    </kbd><box></box><br /><box></box><kbd>GUI     </kbd><kbd>ALT     </kbd><kbd>CTRL    </kbd><kbd>⇧</kbd><kbd>|       </kbd><mbox></mbox><kbd>\       </kbd><kbd>⇧</kbd><kbd>CTRL    </kbd><kbd>ALT     </kbd><kbd>GUI     </kbd><box></box><br /><box></box><kbd>~       </kbd><kbd>`       </kbd><kbd>_       </kbd><kbd>’       </kbd><kbd>&quot;       </kbd><mbox></mbox><kbd>⠀</kbd><kbd style="background-color: lightblue">CAPS    </kbd><kbd>⠀</kbd><kbd>⠀</kbd><kbd style="background-color: lightblue">BASE    </kbd><box></box><br /><left-space></left-space><kbd>⇧</kbd><kbd>-       </kbd><kbd>+       </kbd><mid></mid><kbd>⠀</kbd><kbd style="background-color: yellow">HOLD</kbd><kbd>⇧</kbd></p><h2 id="Gaming-Layer">Gaming Layer</h2><p><kbd>ESC     </kbd><kbd>1       </kbd><kbd>2       </kbd><kbd>3       </kbd><kbd>4       </kbd><kbd>5       </kbd><mbox></mbox><kbd>6       </kbd><kbd>7       </kbd><kbd>8       </kbd><kbd>9       </kbd><kbd>0       </kbd><kbd>⌫</kbd><br /><kbd>TAB     </kbd><kbd>Q       </kbd><kbd>W       </kbd><kbd>E       </kbd><kbd>R       </kbd><kbd>T       </kbd><mbox></mbox><kbd>Y       </kbd><kbd>U       </kbd><kbd>I       </kbd><kbd>O       </kbd><kbd>P       </kbd><kbd style="background-color: lightblue">BASE    </kbd><br /><kbd>⇧</kbd><kbd>A       </kbd><kbd>S       </kbd><kbd>D       </kbd><kbd>F       </kbd><kbd>G       </kbd><mbox></mbox><kbd>H       </kbd><kbd>J       </kbd><kbd>K       </kbd><kbd>L       </kbd><kbd>;       </kbd><kbd>⇧</kbd><br /><kbd>CTRL    </kbd><kbd>Z       </kbd><kbd>X       </kbd><kbd>C       </kbd><kbd>V       </kbd><kbd>B       </kbd><mbox></mbox><kbd>N       </kbd><kbd>M       </kbd><kbd>,       </kbd><kbd>.       </kbd><kbd>/       </kbd><kbd>CTRL    </kbd><br /><left-space></left-space><kbd>GUI</kbd><kbd>ALT</kbd><kbd>SPACE</kbd><mid></mid><kbd>⏎</kbd><kbd>ALT</kbd><kbd>⠀</kbd></p><h2 id="Keys">Keys</h2><p><kbd style="background-color: yellow">⠀</kbd> - Hold to activate layer<br /><kbd style="background-color: lightblue">⠀</kbd> - Switch to layer<br /><kbd style="background-color: pink">⠀</kbd> - To be update</p><style>kbd {     width: 30px;    display: inline-block;    text-align: center;}box {     width: 48px;    display: inline-block;}mbox {     width: 52px;    display: inline-block;}left-space{     width: 168px;    display: inline-block;}mid{     width: 4px;    display: inline-block;}</style><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Using ChatGPT to Draw Sequence Diagram</title>
      <link href="/2023/Using_ChatGPT_to_Draw_Sequence_Diagram/"/>
      <url>/2023/Using_ChatGPT_to_Draw_Sequence_Diagram/</url>
      
        <content type="html"><![CDATA[<p><img src="sequence_diagram.png" alt="" /></p><p>To use ChatGPT to generate a sequence diagram, you can provide a description of the system and the interactions between its components. The description should be written in a clear and concise manner, using plain language and logical ordering of events. Once you have the description, you can use a tool like <a href="https://mermaid.js.org/">Mermaid</a> to create the diagram.</p><p>In the following example using ChatGPT 3.5 Turbo, we have described the process of a user withdrawing cash from an ATM using their bank’s mobile app. We have requested that a sequence diagram be generated using Mermaid syntax. We refined the prompt approximately 10 times to ensure the best possible result.</p><blockquote><p>write mermaid to generate sequence diagram for a journey of a user to withdraw cash from atm by using his bank mobile app.<br />user presses “withdraw cash from atm” button from bank app,<br />user inputs the amount of cash to withdraw<br />user presses “start to withdraw” button from bank app,<br />the bank app activates the camera by itself and is ready to scan a QR code<br />the user presses a button on the ATM to show the mobile cash withdrawal QR code<br />the atm calls withdraw token API to request a mobile withdraw token<br />the withdraw token API generates a token with expiry, stores it into database, and then sends the token back to the atm<br />the atm generates the QR code from the token, and then presents the QR code on atm screen<br />the bank app scans the QR code and sends the token and withdraw amount to withdraw request api<br />the withdraw request api checks if the token exists in the database. bank app shows invalid QR code if it does not exist.<br />the withdraw request api checks if the token expired. bank app shows invalid QR code if it is expired.<br />if the token exists and is not expired, the withdraw request api invalidates the token from database, and then commits the transaction with the token from transaction api. the transaction updates transaction status to database<br />the atm polls “transaction status api” to check if the transaction with the token has been completed. “transaction status api” checks status from database and replies status to ATM. once completed, presents cash to user.<br />the user picks up cash from atm</p></blockquote><p>ChatGPT generates natural language descriptions of a given prompt, which can be helpful for reviewing whether the prompt is clear and understandable to the model. Below is the script generated by ChatGPT.</p><pre class="language-mermaid" data-language="mermaid"><code class="language-mermaid"><span class="token keyword">sequenceDiagram</span>  <span class="token keyword">participant</span> BankApp  <span class="token keyword">participant</span> User  <span class="token keyword">participant</span> ATM  <span class="token keyword">participant</span> WithdrawTokenAPI  <span class="token keyword">participant</span> WithdrawRequestAPI  <span class="token keyword">participant</span> TransactionAPI  <span class="token keyword">participant</span> Database  <span class="token keyword">participant</span> TransactionStatusAPI  User<span class="token arrow operator">->></span>+BankApp<span class="token operator">:</span> Press 'Withdraw Cash from ATM' button  User<span class="token arrow operator">->></span>+BankApp<span class="token operator">:</span> Input amount of cash to withdraw  User<span class="token arrow operator">->></span>+BankApp<span class="token operator">:</span> Press 'Start to Withdraw' button  BankApp<span class="token arrow operator">->></span>+BankApp<span class="token operator">:</span> Activate camera by itself  User<span class="token arrow operator">->></span>+ATM<span class="token operator">:</span> Press button to show mobile withdraw QR code  ATM<span class="token arrow operator">->></span>+WithdrawTokenAPI<span class="token operator">:</span> Call withdraw token API  WithdrawTokenAPI<span class="token arrow operator">->></span>+Database<span class="token operator">:</span> Store token with expiry  WithdrawTokenAPI<span class="token arrow operator">-->></span>-ATM<span class="token operator">:</span> Send token  ATM<span class="token arrow operator">->></span>+ATM<span class="token operator">:</span> Generate QR code from token  ATM<span class="token arrow operator">->></span>+User<span class="token operator">:</span> Present mobile withdraw QR code  BankApp<span class="token arrow operator">->></span>+WithdrawRequestAPI<span class="token operator">:</span> Scan QR code and send token and amount  WithdrawRequestAPI<span class="token arrow operator">->></span>+Database<span class="token operator">:</span> Check if token exists  Database<span class="token arrow operator">-->></span>-WithdrawRequestAPI<span class="token operator">:</span> Return token existence  WithdrawRequestAPI<span class="token arrow operator">->></span>+Database<span class="token operator">:</span> Check if token is expired  Database<span class="token arrow operator">-->></span>-WithdrawRequestAPI<span class="token operator">:</span> Return token expiry  <span class="token keyword">alt</span> Token exists and is not expired      WithdrawRequestAPI<span class="token arrow operator">->></span>+Database<span class="token operator">:</span> Invalidate token in database      WithdrawRequestAPI<span class="token arrow operator">->></span>+TransactionAPI<span class="token operator">:</span> Commit transaction with token      TransactionAPI<span class="token arrow operator">->></span>+Database<span class="token operator">:</span> Update transaction status to database      ATM<span class="token arrow operator">->></span>+TransactionStatusAPI<span class="token operator">:</span> Poll transaction status API to check transaction completion      TransactionStatusAPI<span class="token arrow operator">->></span>+Database<span class="token operator">:</span> Check transaction status from database      Database<span class="token arrow operator">-->></span>-TransactionStatusAPI<span class="token operator">:</span> Return transaction completion status      TransactionStatusAPI<span class="token arrow operator">-->></span>-ATM<span class="token operator">:</span> Return transaction completion status      ATM<span class="token arrow operator">->></span>+User<span class="token operator">:</span> Present cash to user      User<span class="token arrow operator">->></span>+ATM<span class="token operator">:</span> Pick up cash  <span class="token keyword">else</span> Token does not exist or is expired      BankApp<span class="token arrow operator">->></span>+User<span class="token operator">:</span> Show invalid QR code message  <span class="token keyword">end</span></code></pre><blockquote><p>In this diagram, each participant is represented as a vertical line. The arrows indicate the flow of messages between the participants.<br />The journey starts with the user pressing the ‘Withdraw Cash from ATM’ button in the bank app and inputting the amount of cash to withdraw. The user then presses the ‘Start to Withdraw’ button, which activates the camera in the bank app.<br />The user then presses a button on the ATM to show the mobile withdraw QR code. The ATM calls the Withdraw Token API to request a mobile withdraw token, which is stored in the database and sent back to the ATM.<br />The ATM generates a QR code from the token and presents it on the ATM screen. The bank app scans the QR code and sends the token and withdraw amount to the Withdraw Request API.<br />The Withdraw Request API checks if the token exists in the database and if it is expired. If the token exists and is not expired, the Withdraw Request API invalidates the token in the database and commits the transaction with the token from the Transaction API. The Transaction API updates the transaction status to the database.<br />The ATM polls the Transaction Status API to check for transaction completion, and the Transaction Status API checks the transaction status from the database and returns it to the ATM. Once the transaction is completed, the ATM presents the cash to the user.<br />Finally, the user picks up the cash from the ATM, completing the withdrawal process. If the token does not exist or is expired, the bank app shows an invalid QR code message to the user.</p></blockquote><p>Below is the resulting sequence diagram. For the best experience, you should view it in <a href="https://mermaid.live/edit#pako:eNqdVVtv2jAU_iuWX_owqLiUS_JQibXSxEOlrrSaNPFikkOxSOzMdgqs6n_fsZ0E0oRuayQk4pzvO9-5-pVGMgYaUg2_chAR3HL2rFi6FASfjCnDI54xYchXJrazLGt-eNKgmqezx7vm4Q9uNrFiu0e5BTG7n5-3eLBytGm1eVRMaBYZLts5bplhK6bhQ-TCMJNrh_d2Nozu9fWXIs6Q3CvQmlyUisgN0xuyVjK1sV2QVW6MPIediyw3hKUyR69yTSKLNZLsCrKPXaI2Zax56bvurTCvIWcY1AszgJ5SUIysDoQbDcm67gmVl148o_WiN3JHUrniCVQCyfcHYjvDwxFm0e_LF2JOkuSIMfacVDV5b24pytqEZGGkggJiGQjsM64OZ6CI7TrxCxCxR9WkuW_fQGDsmIRCvK9W09hmw6cBsDwfRn6S62ZropqIicobQ2W6kudefQfUYzri6wm52UC0JXxdwGHPtdEeWhq5NLTpeACTK3GKtLP8Kb9c-0pA_DnfxyKyBCfuJBaXEaQX0tRd_IvKuXhhCY9tdQudgsS1QT_PUl8YGLFMU44Ddjz2HXjSKfapw-pynjIv5YRCu41iB6qpq2i8tv2DjShxiFqY8KNli1x9Tr9HMs0SsH9bxVbUbXVu8eOmpKm5Vvh25WXpW7UV9H-RWA32_3G1TnK5ZfPqRmruPo45yDNn6k0g0VC0aSyh7E7sVyJVYxjerQTvfmH3J_f9WS2DFHcsey7SiUuBdigu5pTxGC_bV3u8pGYDKSxpiH9jprZLuhRvaMdyIxcHEdHQqBw6NHe9VlzM5SHEHBfonb-83R3eoXjH_ZSyMsFXGr7SPQ27_dH4MpiMekFvMh4GV-PhtEMPNOyPppfDwWQ6vhoG-BsM3zr0t2MYXAbjXr8_nUx6oyAYjkeDtz_Ia75i">mermaid live editor</a>.</p><svg aria-roledescription="sequence" role="graphics-document document" viewBox="-50 -10 2438.5 1381" style="max-width: 2438.5px;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-1758626673521"><g><rect class="actor actor-bottom" ry="3" rx="3" name="TransactionStatusAPI" height="65" width="173" stroke="#666" fill="#eaeaea" y="1295" x="2165.5"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="2252"><tspan dy="0" x="2252">TransactionStatusAPI</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="Database" height="65" width="150" stroke="#666" fill="#eaeaea" y="1295" x="1828"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="1903"><tspan dy="0" x="1903">Database</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="TransactionAPI" height="65" width="150" stroke="#666" fill="#eaeaea" y="1295" x="1491"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="1566"><tspan dy="0" x="1566">TransactionAPI</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="WithdrawRequestAPI" height="65" width="172" stroke="#666" fill="#eaeaea" y="1295" x="1197"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="1283"><tspan dy="0" x="1283">WithdrawRequestAPI</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="WithdrawTokenAPI" height="65" width="156" stroke="#666" fill="#eaeaea" y="1295" x="991"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="1069"><tspan dy="0" x="1069">WithdrawTokenAPI</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="ATM" height="65" width="150" stroke="#666" fill="#eaeaea" y="1295" x="755"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="830"><tspan dy="0" x="830">ATM</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="User" height="65" width="150" stroke="#666" fill="#eaeaea" y="1295" x="350"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="425"><tspan dy="0" x="425">User</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="BankApp" height="65" width="150" stroke="#666" fill="#eaeaea" y="1295" x="0"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="1327.5" x="75"><tspan dy="0" x="75">BankApp</tspan></text></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="2252" y1="5" x1="2252" id="actor7"></line><g id="root-7"><rect class="actor actor-top" ry="3" rx="3" name="TransactionStatusAPI" height="65" width="173" stroke="#666" fill="#eaeaea" y="0" x="2165.5"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="2252"><tspan dy="0" x="2252">TransactionStatusAPI</tspan></text></g></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="1903" y1="5" x1="1903" id="actor6"></line><g id="root-6"><rect class="actor actor-top" ry="3" rx="3" name="Database" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="1828"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="1903"><tspan dy="0" x="1903">Database</tspan></text></g></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="1566" y1="5" x1="1566" id="actor5"></line><g id="root-5"><rect class="actor actor-top" ry="3" rx="3" name="TransactionAPI" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="1491"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="1566"><tspan dy="0" x="1566">TransactionAPI</tspan></text></g></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="1283" y1="5" x1="1283" id="actor4"></line><g id="root-4"><rect class="actor actor-top" ry="3" rx="3" name="WithdrawRequestAPI" height="65" width="172" stroke="#666" fill="#eaeaea" y="0" x="1197"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="1283"><tspan dy="0" x="1283">WithdrawRequestAPI</tspan></text></g></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="1069" y1="5" x1="1069" id="actor3"></line><g id="root-3"><rect class="actor actor-top" ry="3" rx="3" name="WithdrawTokenAPI" height="65" width="156" stroke="#666" fill="#eaeaea" y="0" x="991"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="1069"><tspan dy="0" x="1069">WithdrawTokenAPI</tspan></text></g></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="830" y1="5" x1="830" id="actor2"></line><g id="root-2"><rect class="actor actor-top" ry="3" rx="3" name="ATM" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="755"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="830"><tspan dy="0" x="830">ATM</tspan></text></g></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="425" y1="5" x1="425" id="actor1"></line><g id="root-1"><rect class="actor actor-top" ry="3" rx="3" name="User" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="350"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="425"><tspan dy="0" x="425">User</tspan></text></g></g><g><line stroke="#999" stroke-width="0.5px" class="200" y2="1295" x2="75" y1="5" x1="75" id="actor0"></line><g id="root-0"><rect class="actor actor-top" ry="3" rx="3" name="BankApp" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="0"></rect><text style="text-anchor: middle; font-size: 16px; font-weight: 400;" class="actor" alignment-baseline="central" dominant-baseline="central" y="32.5" x="75"><tspan dy="0" x="75">BankApp</tspan></text></g></g><style>#mermaid-1758626673521{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1758626673521 .error-icon{fill:#552222;}#mermaid-1758626673521 .error-text{fill:#552222;stroke:#552222;}#mermaid-1758626673521 .edge-thickness-normal{stroke-width:2px;}#mermaid-1758626673521 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1758626673521 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1758626673521 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1758626673521 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1758626673521 .marker{fill:#333333;stroke:#333333;}#mermaid-1758626673521 .marker.cross{stroke:#333333;}#mermaid-1758626673521 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-1758626673521 .actor{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-1758626673521 text.actor&gt;tspan{fill:black;stroke:none;}#mermaid-1758626673521 .actor-line{stroke:grey;}#mermaid-1758626673521 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-1758626673521 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-1758626673521 #arrowhead path{fill:#333;stroke:#333;}#mermaid-1758626673521 .sequenceNumber{fill:white;}#mermaid-1758626673521 #sequencenumber{fill:#333;}#mermaid-1758626673521 #crosshead path{fill:#333;stroke:#333;}#mermaid-1758626673521 .messageText{fill:#333;stroke:none;}#mermaid-1758626673521 .labelBox{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-1758626673521 .labelText,#mermaid-1758626673521 .labelText&gt;tspan{fill:black;stroke:none;}#mermaid-1758626673521 .loopText,#mermaid-1758626673521 .loopText&gt;tspan{fill:black;stroke:none;}#mermaid-1758626673521 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);}#mermaid-1758626673521 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-1758626673521 .noteText,#mermaid-1758626673521 .noteText&gt;tspan{fill:black;stroke:none;}#mermaid-1758626673521 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-1758626673521 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-1758626673521 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-1758626673521 .actorPopupMenu{position:absolute;}#mermaid-1758626673521 .actorPopupMenuPanel{position:absolute;fill:#ECECFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-1758626673521 .actor-man line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-1758626673521 .actor-man circle,#mermaid-1758626673521 line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;stroke-width:2px;}#mermaid-1758626673521 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g></g><defs><symbol height="24" width="24" id="computer"><path d="M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z" transform="scale(.5)"></path></symbol></defs><defs><symbol clip-rule="evenodd" fill-rule="evenodd" id="database"><path d="M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z" transform="scale(.5)"></path></symbol></defs><defs><symbol height="24" width="24" id="clock"><path d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z" transform="scale(.5)"></path></symbol></defs><defs><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="7.9" id="arrowhead"><path d="M 0 0 L 10 5 L 0 10 z"></path></marker></defs><defs><marker refY="4.5" refX="4" orient="auto" markerHeight="8" markerWidth="15" id="crosshead"><path style="stroke-dasharray: 0, 0;" d="M 1,2 L 6,7 M 6,2 L 1,7" stroke-width="1pt" stroke="#000000" fill="none"></path></marker></defs><defs><marker orient="auto" markerHeight="28" markerWidth="20" refY="7" refX="15.5" id="filled-head"><path d="M 18,7 L9,13 L14,7 L9,1 Z"></path></marker></defs><defs><marker orient="auto" markerHeight="40" markerWidth="60" refY="15" refX="15" id="sequencenumber"><circle r="6" cy="15" cx="15"></circle></marker></defs><g></g><g></g><g></g><g></g><g></g><g><rect class="activation0" ry="0" rx="0" height="82" width="10" stroke="#666" fill="#EDF2AE" y="349" x="1064"></rect></g><g></g><g></g><g></g><g></g><g><rect class="activation1" ry="0" rx="0" height="40" width="10" stroke="#666" fill="#EDF2AE" y="631" x="1903"></rect></g><g><rect class="activation1" ry="0" rx="0" height="40" width="10" stroke="#666" fill="#EDF2AE" y="715" x="1903"></rect></g><g></g><g></g><g></g><g><rect class="activation0" ry="0" rx="0" height="124" width="10" stroke="#666" fill="#EDF2AE" y="970" x="2247"></rect></g><g><rect class="activation0" ry="0" rx="0" height="40" width="10" stroke="#666" fill="#EDF2AE" y="1012" x="1913"></rect></g><g></g><g></g><g></g><g><line class="loopLine" y2="765" x2="2267" y1="765" x1="60"></line><line class="loopLine" y2="1275" x2="2267" y1="765" x1="2267"></line><line class="loopLine" y2="1275" x2="2267" y1="1275" x1="60"></line><line class="loopLine" y2="1275" x2="60" y1="765" x1="60"></line><line style="stroke-dasharray: 3, 3;" class="loopLine" y2="1193" x2="2267" y1="1193" x1="60"></line><polygon class="labelBox" points="60,765 110,765 110,778 101.6,785 60,785"></polygon><text style="font-size: 16px; font-weight: 400;" class="labelText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="778" x="85">alt</text><text style="font-size: 16px; font-weight: 400;" class="loopText" text-anchor="middle" y="783" x="1188.5"><tspan x="1188.5">[Token exists and is not expired]</tspan></text><text style="font-size: 16px; font-weight: 400;" class="loopText" text-anchor="middle" y="1211" x="1163.5">[Token does not exist or is expired]</text></g><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="80" x="254">Press 'Withdraw Cash from ATM' button</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="107" x2="83" y1="107" x1="424"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="122" x="254">Input amount of cash to withdraw</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="149" x2="83" y1="149" x1="424"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="164" x="256">Press 'Start to Withdraw' button</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="191" x2="88" y1="191" x1="424"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="206" x="90">Activate camera by itself</text><path style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" d="M 90,233 C 150,223 150,263 90,253"></path><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="278" x="624">Press button to show mobile withdraw QR code</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="305" x2="822" y1="305" x1="426"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="320" x="948">Call withdraw token API</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="347" x2="1061" y1="347" x1="835"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="362" x="1485">Store token with expiry</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="389" x2="1895" y1="389" x1="1074"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="404" x="951">Send token</text><line style="stroke-dasharray: 3, 3; fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine1" y2="431" x2="838" y1="431" x1="1064"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="446" x="835">Generate QR code from token</text><path style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" d="M 835,473 C 895,463 895,503 835,493"></path><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="518" x="629">Present mobile withdraw QR code</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="545" x2="433" y1="545" x1="825"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="560" x="685">Scan QR code and send token and amount</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="587" x2="1275" y1="587" x1="95"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="602" x="1592">Check if token exists</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="629" x2="1895" y1="629" x1="1288"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="644" x="1595">Return token existence</text><line style="stroke-dasharray: 3, 3; fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine1" y2="671" x2="1291" y1="671" x1="1898"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="686" x="1592">Check if token is expired</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="713" x2="1895" y1="713" x1="1288"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="728" x="1595">Return token expiry</text><line style="stroke-dasharray: 3, 3; fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine1" y2="755" x2="1291" y1="755" x1="1898"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="815" x="1592">Invalidate token in database</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="842" x2="1895" y1="842" x1="1288"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="857" x="1423">Commit transaction with token</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="884" x2="1558" y1="884" x1="1288"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="899" x="1733">Update transaction status to database</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="926" x2="1895" y1="926" x1="1571"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="941" x="1542">Poll transaction status API to check transaction completion</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="968" x2="2244" y1="968" x1="840"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="983" x="2084">Check transaction status from database</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="1010" x2="1921" y1="1010" x1="2247"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="1025" x="2084">Return transaction completion status</text><line style="stroke-dasharray: 3, 3; fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine1" y2="1052" x2="2244" y1="1052" x1="1923"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="1067" x="1545">Return transaction completion status</text><line style="stroke-dasharray: 3, 3; fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine1" y2="1094" x2="843" y1="1094" x1="2247"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="1109" x="629">Present cash to user</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="1136" x2="433" y1="1136" x1="825"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="1151" x="629">Pick up cash</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="1178" x2="822" y1="1178" x1="435"></line><text style="font-size: 16px; font-weight: 400;" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="1238" x="256">Show invalid QR code message</text><line style="fill: none;" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="1265" x2="417" y1="1265" x1="95"></line></svg><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D Printed Switch Blocker Cherry MX</title>
      <link href="/2023/3D_Printed_Switch_Blocker_Cherry_MX/"/>
      <url>/2023/3D_Printed_Switch_Blocker_Cherry_MX/</url>
      
        <content type="html"><![CDATA[<script type="module" src="/js/model-viewer-3.1.1.min.js"></script><p><img src="switch_blocker1.jpg" alt="A 3D Printed Switch blocker" /></p><p>Are you tired of accidentally hitting the wrong keys on your keyboard? Do you find yourself losing precious time because of a rogue Caps Lock or Windows key? Or maybe you’re like me and have a keyboard with more keys than you actually need after mapping, leaving you with unnecessary clutter. Fear not, my friend, for there is a solution to this all-too-common problem: a 3D printed switch blocker for Cherry MX switches!</p><p><img src="switch_blocker2.jpg" alt="An unattractive hole and potential debris damage after the rogue keycap and switch are removed." /></p><p>The size of the switch blocker is a perfect square of 18.8x18.8mm, with a height of 1mm. However, if you’re worried about blocking LED light, you may need to increase the thickness. No worries though, because you can easily modify the design to make it work for you.<br /><img src="switch_blocker1.jpg" alt="1mm thickness allows LED light to pass through, which could be a desirable feature for those who want to maintain the backlighting." /></p><p>But what really sets this switch blocker apart is the notch on all sides. This ensures that the switch blocker stays securely in place and doesn’t pop out at the most inconvenient times. So whether you’re in the middle of a high-stakes game or a crucial work project, you can rest assured that your switch blocker will stay put.</p><p>And the best part? You can download the <a href="https://www.tinkercad.com/things/aT6I7tsexoG">model for this switch blocker from Tinkercad</a>, a free 3D modeling website. So even if you don’t have any 3D modeling skills, you can still create your own custom switch blockers! And if you’re worried about the cost, don’t be. You can <a href="https://www.tinkercad.com/things/6U7lJd8b9Fi?sharecode=Anf6vjscTHOeSjvyDMEttp3APrW4AjivryzTe-dlMf4">link many switch blockers together</a> to save on printing costs. In fact, you can get 40 switch blockers for around 10 USD, including shipping from mainland to Hong Kong when you order from Taobao.</p><p>So, what are you waiting for? Say goodbye to those frustrating accidental key presses and hello to a more efficient and enjoyable typing or gaming experience with your very own 3D printed switch blocker for Cherry MX switches. Happy printing!</p><p>3D Model of the switch blocker:</p><model-viewer alt="Switch Blocker Cherry MX" style="width: 100%; height: 800px; top: 0px;  position: sticky;" src="switch_blocker_cherry_mx_18.8mm.glb" camera-controls ar auto-rotate loading="eager" shadow-intensity="1" touch-action="pan-y"></model-viewer><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D printing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Handling invalid index on empty tuple from list in Terraform</title>
      <link href="/2023/Handling_invalid_index_on_empty_tuple_from_list_in_Terraform/"/>
      <url>/2023/Handling_invalid_index_on_empty_tuple_from_list_in_Terraform/</url>
      
        <content type="html"><![CDATA[<p><img src="terraform.png" alt="" /></p><p>It is common to use <code>count = 0</code> to achieve feature toggle in Terraform. However, it could result in an empty tuple error when it is implemented in a resource and the feature is disabled. A tuple is a type of list that can contain any number of elements of different types. Index zero is used to access the enabled resource, e.g., <code>module.feature[0].id</code>. The tuple is empty when the resource is disabled, and <code>module.feature[0]</code> does not exist, resulting in an error.</p><p>For example, below code runs well:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">my_tuple</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span> <span class="token punctuation">&#123;</span> name: <span class="token string">"a"</span> <span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span> name: <span class="token string">"b"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">]</span>  <span class="token property">result</span> <span class="token punctuation">=</span> local.my_tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.name<span class="token punctuation">&#125;</span><span class="token keyword">output<span class="token type variable"> "result" </span></span><span class="token punctuation">&#123;</span>   <span class="token property">value</span> <span class="token punctuation">=</span> local.result<span class="token punctuation">&#125;</span></code></pre><p>Output:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">terraform plan</span></span><span class="token output">Changes to Outputs:  + result = "a"</span></code></pre><p>However, it will throw an error when <code>my_tuple</code> is empty.</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">my_tuple</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token property">result</span> <span class="token punctuation">=</span> local.my_tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.name<span class="token punctuation">&#125;</span><span class="token keyword">output<span class="token type variable"> "result" </span></span><span class="token punctuation">&#123;</span>   <span class="token property">value</span> <span class="token punctuation">=</span> local.result<span class="token punctuation">&#125;</span></code></pre><p>Output:</p><pre class="language-shell-session" data-language="shell-session"><code class="language-shell-session"><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">terraform plan</span></span><span class="token output">╷│ Error: Invalid index││   on main.tf line 5, in locals:│    5: value = local.my_tuple[0].name│     ├────────────────│     │ local.my_tuple is empty tuple││ The given key does not identify an element in this collection value: the collection has no elements.</span></code></pre><p>Feature toggling is a common use case for empty tuples. However, there are other use cases for empty tuples. For example, if you are using a module that returns a tuple, you may want to handle the case where the tuple is empty.</p><p>Here are techniques that can be used to handle empty tuples in Terraform,</p><h2 id="Conditional-Expressions">Conditional Expressions</h2><p>A straightforward approach to handling empty tuples is to use a conditional expression to check whether the tuple is empty before trying to access an element. Here’s an example of how to use a conditional expression:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">my_tuple</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token property">result</span> <span class="token punctuation">=</span> length(local.my_tuple) > <span class="token number">0</span> ? local.my_tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.name : <span class="token string">"default-value"</span><span class="token punctuation">&#125;</span></code></pre><p>In this example, the <code>length()</code> function is used to check whether <code>my_tuple</code> is empty. If <code>my_tuple</code> is not empty, <code>name</code> in the first element ([0]) is assigned to the <code>result</code> variable. If <code>my_tuple</code> is empty, “default-value” is assigned to the <code>result</code> variable. No empty tuple error is thrown because <code>local.my_tuple[0].name</code> is not evaluated when <code>my_tuple</code> is empty.</p><p>This can be difficult to read when the variable name is long, as the variable name is repeated twice in the conditional expression.</p><h2 id="try-Function">try Function</h2><p>Another approach to handling empty tuples is to use the <code>try()</code> function. The <code>try()</code> function is used to attempt to access a value and provide a default value if the value is undefined. Here’s an example of how to use the <code>try()</code> function:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">my_tuple</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token property">result</span> <span class="token punctuation">=</span> try(local.my_tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.name, <span class="token string">"default-value"</span>) <span class="token punctuation">&#125;</span></code></pre><p>In this example, the <code>try()</code> function is used to attempt to access name in the first element ([0]) of <code>my_tuple</code>. Since <code>my_tuple</code> is empty, the string “default-value” is used as a default value for value.</p><h2 id="for-Expression">for Expression</h2><p>In Terraform 0.13.0 you can use <code>for</code> expressions to handle empty tuples:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">my_tuple</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token property">result</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>for i in local.my_tuple: i.name<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><p>This is the least readable approach, but brings us to splat expressions below:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token comment">## Splat Expressions</span><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">my_tuple</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token property">result</span> <span class="token punctuation">=</span> local.my_tuple<span class="token punctuation">[</span>*<span class="token punctuation">]</span>.name<span class="token punctuation">&#125;</span></code></pre><p>Both <code>for</code> expressions and splat expressions are not supported in Terraform 0.12.29, but they are supported in Terraform 0.13.0 and later. Also, both return an empty tuple if the <code>my_tuple</code> is empty, unlike the conditional expression and <code>try()</code> function which a default value can be specified.</p><p>A legacy splat expression <code>local.my_tuple.*.name</code> is also supported in Terraform 0.12.29 and later (v1.4 as of date of this post). However, this is not recommended as it could be removed in a future release.</p><p>More information about splat expression,<br /><a href="https://developer.hashicorp.com/terraform/language/expressions/splat">https://developer.hashicorp.com/terraform/language/expressions/splat</a></p><p>It is worth noting that the result from the expressions is a tuple. You may need to convert it to a list with <code>tolist()</code> function, or <code>toset()</code> function if you want to remove duplicates and/or order the items. <code>compact()</code> function can be used to remove empty string and null values from a list. You can also use <code>join()</code> function to convert a list to a string.</p><h2 id="feature-toggling-with-meta-argument-for-each-with-dynamic-blocks">feature toggling with meta-argument <code>for_each</code> with dynamic blocks</h2><p>Use of <code>for_each</code> meta-argument with dynamic blocks can be an approach for feature toggling but beyond the scope of this post.</p><h2 id="References">References</h2><p><a href="https://support.hashicorp.com/hc/en-us/articles/9471971461651-ERROR-Invalid-index-on-empty-tuple">https://support.hashicorp.com/hc/en-us/articles/9471971461651-ERROR-Invalid-index-on-empty-tuple</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terraform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Unlocked Job Roles for AI - Prompt Engineers!</title>
      <link href="/2023/New_Unlocked_Job_Roles_for_AI_Prompt_Engineers/"/>
      <url>/2023/New_Unlocked_Job_Roles_for_AI_Prompt_Engineers/</url>
      
        <content type="html"><![CDATA[<p><img src="prompt_engineer.png" alt="" /></p><p>Once upon a time, in a world not so different from ours, people were anxious about the rise of AI and how it would take over their jobs. But in this magical world, they soon discovered that, as AI developed, new and exciting job roles were being unlocked, like that of a “Prompt Engineer.”</p><h2 id="Meet-the-Prompt-Engineer">Meet the Prompt Engineer</h2><p>In this enchanted era of generative AI development, we find ourselves with innovative job titles like “Prompt Engineer.” Imagine someone who has a keen eye for graphic design and a passion for AI image generation models like Stable Diffusion and Midjourney. These talented individuals are tasked with crafting course materials, demos, and examples to teach others how to create professional-looking graphic design assets using AI.</p><p>Job description expert from <a href="https://prompthero.com/jobs/177145-prompt-engineer-for-graphic-design-contractor-at-prompthero">https://prompthero.com/jobs/177145-prompt-engineer-for-graphic-design-contractor-at-prompthero</a>,</p><blockquote><p>…can demonstrate exceptional ability and prove that your workflow yields amazing graphic design assets people actually end up using.</p></blockquote><p>While graphics prompt engineers focus on the technical aspects of graphics design, such as developing prompt, train models, or optimizing performance, traditional graphics designers focus on the artistic aspects, such as creating visual concepts, selecting colors, and designing layouts.</p><p>By working together, graphics prompt engineers and traditional graphics designers can leverage each other’s strengths to create effective and visually appealing products or projects. For example, the engineer may be able to develop prompt that enables a designer to create more complex and dynamic graphics, while the designer can provide creative input to ensure that the graphics are aesthetically pleasing and aligned with the project’s objectives.</p><p>We’ve also seen the emergence of “Legal Prompt Engineers.” These professionals have a background in law and deep knowledge of language models like GPT-3 and ChatGPT. They work closely with lawyers and law firms to revolutionize the legal industry by designing and developing high-quality prompts for various legal and non-legal use cases.</p><p>You can find more job description in <a href="https://prompthero.com/jobs/prompt-engineering-jobs">https://prompthero.com/jobs/prompt-engineering-jobs</a></p><h2 id="Can-a-traditional-graphic-designer-become-a-Prompt-Engineer">Can a traditional graphic designer become a Prompt Engineer?</h2><p>Yes, absolutely! Some traditional graphic designers are already taking advantage of the opportunities offered by AI technology. They’re using AI models to create high-quality graphics for their clients, which saves them time and money. And they’re also using AI to create graphics for their own personal projects, which allows them to express their creativity and passion for design/law. With the passion they learn more about AI technology and become a Prompt Engineer.</p><h2 id="How-to-Become-a-Prompt-Engineer">How to Become a Prompt Engineer</h2><p>Now that you’ve heard about these fascinating roles, you might be wondering how to become a Prompt Engineer yourself. Here are some suggestions:</p><p><strong>Develop a strong understanding of AI models:</strong> Spend time learning about the AI models used for image generation or natural language processing. Explore platforms like OpenAI to gain insights into the latest developments in the field.</p><p><strong>Develop your niche expertise:</strong> Depending on the type of Prompt Engineer you want to become, focus on developing your graphic design skills or deepening your legal knowledge, for example.</p><p><strong>Get hands-on experience:</strong> Practice working with AI models and prompt to create content, designs, or solutions in your chosen niche. This will help you build a portfolio showcasing your AI-generated work.</p><p><strong>Stay current with the AI industry:</strong> Keep yourself updated on the latest advancements and breakthroughs in AI technology. This will help you stay competitive and informed about changes in the job market.</p><h2 id="The-Next-AI-Unlocked-Job-Role">The Next AI-Unlocked Job Role</h2><p>As the world of AI continues to grow and transform, it’s only a matter of time before we see even more creative job roles emerge. One possibility is the “AI Content Strategist,” who specializes in designing content strategies that leverage AI-generated content for marketing, SEO, and social media campaigns.</p><h2 id="The-AI-Created-Job-Role-Twist">The AI-Created Job Role Twist</h2><p>But what if these new job roles were actually created by AI itself? Imagine an AI system generating a list of job roles that perfectly align with the needs of an ever-evolving job market. It’s not entirely impossible, and it would be a testament to the incredible advancements in AI and the limitless opportunities it can create. So, no need to worry, dear reader, for the future of mankind in the job market is still opportunistic and filled with potential!</p><p>In conclusion, as the AI landscape evolves, we can expect to see even more exciting job roles emerge, offering opportunities for professionals to combine their passions with AI technology. The future is bright, and the possibilities are endless!</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pair Programming with ChatGPT - A Developer&#39;s Dream Come True</title>
      <link href="/2023/Pair_Programming_with_ChatGPT_A_Developer_s_Dream_Come_True/"/>
      <url>/2023/Pair_Programming_with_ChatGPT_A_Developer_s_Dream_Come_True/</url>
      
        <content type="html"><![CDATA[<p><img src="pair_programming.png" alt="" /></p><p>As a full stack developer, I have practiced pair programming with many humans over the years. However, recently I had the opportunity to work with ChatGPT, a large language model trained by OpenAI, and it was a game-changer. I found that ChatGPT was not replacing my role, but rather working as a pair programming companion, providing me with valuable insights and perspectives. Let’s dive into how it transformed my pair programming experience!</p><h2 id="Human-and-ChatGPT-A-Perfect-Synergy">Human and ChatGPT: A Perfect Synergy</h2><p>The partnership between a human developer and ChatGPT is quite unique. Here’s my typical loop:</p><ol><li>Requirements Gathering: We human developer provides the requirements for a specific feature or function. ChatGPT write code and we human review.</li><li>Summarizing Requirements: I found it very useful to ask ChatGPT summarizes my requirements, as I usually not provide my requirements in one go. This helps me to check if we are in the same page.</li><li>Unit Test Template: ChatGPT generates a unit test template based on the summarized requirements.</li><li>Human Completes and Refines Unit Test: We human developer completes and refines the unit test and provides feedback to ChatGPT, refining their understanding of the task.</li></ol><h2 id="Its-turn-for-ChatGPT-to-review-my-code">Its turn for ChatGPT to review my code</h2><p>In reverse, the human can write a program and ask ChatGPT to review and summarize the code. This process helps identify potential issues and ensures that the code meets the desired requirements. However, sometime you may need to help ChatGPT a little instead of throwing a piece of code. For example,</p><h3 id="Try-1-simply-ask-to-review">Try #1, simply ask to review</h3><p>Prompt:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl">review following terraform code in main.tf.<span class="token keyword">resource <span class="token type variable">"some_resource"</span></span> <span class="token string">"resource_name"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span> <span class="token punctuation">=</span> <span class="token string">"some_name"</span>  <span class="token property">value</span> <span class="token punctuation">=</span> condition <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token boolean">true</span> ? <span class="token property">"aaa,bbb,ccc,$&#123;var.b&#125;"</span> : <span class="token string">"<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token type variable">a</span><span class="token punctuation">&#125;</span></span>,aaa,bbb,ccc,<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token type variable">b</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">&#125;</span></code></pre><p>Response</p><blockquote><p>The code you provided creates a resource named “some_resource” with the name “resource_name” and sets the “name” attribute to “some_name”. Additionally, it sets the “value” attribute based on a condition. If the “condition” variable is true, then “value” is set to “aaa,bbb,ccc,${var.b}”. If “condition” is false, then “value” is set to “${var.a},aaa,bbb,ccc,$${var.b}”.</p><p>The code appears to be valid and functional, assuming that the variables “a”, “b”, and “condition” have been properly defined. However, it’s important to ensure that the resource type and its attributes are correct and properly configured for your infrastructure needs. Additionally, it’s a good practice to use descriptive names for resources and attributes to make it easier to understand the purpose of the code.</p></blockquote><p>The above sounds meaningless. Lets refine our question a little bit</p><h3 id="Try-2-tell-what-you-want-from-code-review">Try #2, tell what you want from code review</h3><p>Prompt:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl">review following terraform code in main.tf. can you propose better coding?<span class="token keyword">resource <span class="token type variable">"some_resource"</span></span> <span class="token string">"resource_name"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span> <span class="token punctuation">=</span> <span class="token string">"some_name"</span>  <span class="token property">value</span> <span class="token punctuation">=</span> condition <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token boolean">true</span> ? <span class="token property">"aaa,bbb,ccc,$&#123;var.b&#125;"</span> : <span class="token string">"<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token type variable">a</span><span class="token punctuation">&#125;</span></span>,aaa,bbb,ccc,<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token type variable">b</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">&#125;</span></code></pre><p>Response</p><blockquote><p>The code seems fine in terms of syntax, but if you’re looking for suggestions, here are a few:</p><p>It’s always a good idea to use meaningful names for your resources, so you can easily identify them later. Instead of “some_resource” and “resource_name”, try to come up with more descriptive names.</p><p>In the value attribute, it’s generally better to avoid using ternary operators for complex expressions, as they can make the code harder to read and understand. Instead, consider breaking the expression into multiple lines, or creating a separate variable that holds the computed value.</p><p>Consider using interpolation syntax (${…}) only when necessary. In this case, since var.a and var.b are already variables, you can simply concatenate them with the other strings using the + operator.</p><p>Here’s an example of how you could refactor the code with these suggestions:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">resource <span class="token type variable">"some_resource"</span></span> <span class="token string">"example"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>  <span class="token punctuation">=</span> <span class="token string">"example_resource"</span>  <span class="token property">value</span> <span class="token punctuation">=</span> compute_value(var.a, var.b, condition)<span class="token punctuation">&#125;</span><span class="token comment">// Define a separate function to compute the value</span><span class="token comment">// This makes the code easier to read and understand</span><span class="token comment">// and allows for reuse if needed</span><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">compute_value</span> <span class="token punctuation">=</span> (a, b, condition) <span class="token punctuation">=</span>> <span class="token punctuation">&#123;</span>    if <span class="token keyword">condition</span> <span class="token punctuation">&#123;</span>      <span class="token string">"aaa,bbb,ccc,"</span> + b    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      a + <span class="token string">",aaa,bbb,ccc,"</span> + b    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>This code uses a local variable to define a separate function that computes the value based on the input variables and the condition flag. This makes the code easier to read and understand, and also allows for reuse if needed.</p></blockquote><p>With the magic question <em>can you propose better coding?</em> you have much meaningful result. Although it is not able to spot I am repeating part of the variable (<code>,aaa,bbb,ccc,$&#123;var.b&#125;</code>), which goes against the DRY principle. I have rewritten a bit and asked again as below,</p><h3 id="Try-3-ask-for-opinion-from-2-pieces-of-my-code">Try #3, ask for opinion from 2 pieces of my code</h3><p>Prompt:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl">which terraform code is better, can you propose better coding?code <span class="token number">1</span>,  <span class="token keyword">resource <span class="token type variable">"some_resource"</span></span> <span class="token string">"resource_name"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span> <span class="token punctuation">=</span> <span class="token string">"some_name"</span>  <span class="token property">value</span> <span class="token punctuation">=</span> condition <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token boolean">true</span> ? <span class="token property">"aaa,bbb,ccc,$&#123;var.b&#125;"</span> : <span class="token string">"<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token type variable">a</span><span class="token punctuation">&#125;</span></span>,aaa,bbb,ccc,<span class="token interpolation"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token type variable">b</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">&#125;</span>code2,  <span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>    <span class="token property">a</span> <span class="token punctuation">=</span> <span class="token punctuation">&#123;</span>      <span class="token string">"aaa"</span>,      <span class="token string">"bbb"</span>,      <span class="token string">"ccc"</span>,      var.b,    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">resource <span class="token type variable">"some_resource"</span></span> <span class="token string">"resource_name"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span> <span class="token punctuation">=</span> <span class="token string">"some_name"</span>  <span class="token property">value</span> <span class="token punctuation">=</span> join(<span class="token string">","</span>, condition <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token boolean">true</span> ? <span class="token punctuation">[</span><span class="token punctuation">]</span> : var.a, local.a)<span class="token punctuation">&#125;</span></code></pre><p>Response</p><blockquote><p>Both code examples are valid and functional, but they have different purposes and implementations.</p><p>Code 1 uses a ternary operator to set the “value” attribute of the “some_resource” resource based on a condition. It’s a concise way of setting the attribute, but it can be less readable for more complex expressions.</p><p>Code 2 uses a local variable to create a list of values to be joined together. It uses the “join” function to concatenate the values in the list with a comma as a separator. This approach can be more readable for longer lists of values and expressions.</p><p>Ultimately, the choice between these two code examples depends on the specific needs and requirements of your infrastructure. If you have a small list of values and a simple condition, Code 1 might be more appropriate. If you have a longer list of values and a more complex expression, Code 2 might be more appropriate.<br />To propose a better coding, I would suggest combining the best parts of both code examples to create a more readable, maintainable, and extensible code.</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">locals</span> <span class="token punctuation">&#123;</span>  <span class="token property">some_values</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>    <span class="token string">"aaa"</span>,    <span class="token string">"bbb"</span>,    <span class="token string">"ccc"</span>,    var.b,  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">resource <span class="token type variable">"some_resource"</span></span> <span class="token string">"resource_name"</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span>  <span class="token punctuation">=</span> <span class="token string">"some_name"</span>  <span class="token property">value</span> <span class="token punctuation">=</span> join(<span class="token string">","</span>, concat(var.a, condition ? <span class="token punctuation">[</span><span class="token punctuation">]</span> : local.some_values))<span class="token punctuation">&#125;</span></code></pre><p>In this code, we use a local variable to store the hardcoded values and the “var.b” variable. Then, we concatenate the values of the “var.a” and local variable using the “concat” function. Finally, we use the “join” function to concatenate the values with a comma separator.</p><p>This code is more readable, maintainable, and extensible than the previous examples. It separates the hardcoded values from the variables, uses a more readable “concat” function instead of the ternary operator, and uses a more concise “join” function.</p></blockquote><p>Which combines improvements from both human and AI! However, I will use try #2 most likely as is effortless.</p><h2 id="Advantages-of-ChatGPT-in-Pair-Programming">Advantages of ChatGPT in Pair Programming</h2><p>Here are some of the key advantages of using ChatGPT in pair programming, instead of another human:</p><ol><li>24/7 Availability: ChatGPT is always available, allowing you to work on projects whenever inspiration strikes, without waiting for a fellow developer.</li><li>Instant Feedback: Receive feedback on your code in real-time, streamlining your development process.</li><li>Consistency: ChatGPT offers consistent feedback quality, free from human bias or mood fluctuations.</li><li>Diversity: ChatGPT can provide diverse perspectives and insights that a human pair programmer may not have. This can lead to more creative and innovative solutions.</li><li>Learning Opportunities: By observing ChatGPT’s suggestions and code reviews, developers can learn new coding techniques and best practices.</li></ol><h2 id="Potential-drawback">Potential drawback</h2><p>As shown in the example you should notice if you don’t provide enough background or ask the correct question, the review result is not satisfactory.</p><h2 id="GitHub-Copilot-with-Visual-Studio-Code">GitHub Copilot with Visual Studio Code</h2><p>I found it helps in code complete but it lacks interactivity for now.</p><h2 id="A-New-Era-of-Collaboration">A New Era of Collaboration</h2><p>Pair programming with ChatGPT is a game-changer. It offers a powerful synergy between human developers and AI, streamlining the development process and offering new learning opportunities. While it can never replace the creativity and problem-solving capabilities of a human developer, ChatGPT is an invaluable tool in the modern developer’s arsenal. So, give it a try and experience the future of pair programming for yourself!</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terraform </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Using custom validation to validate other variables in Terraform</title>
      <link href="/2022/Using-custom-validation-to-validate-other-variables-in-Terraform/"/>
      <url>/2022/Using-custom-validation-to-validate-other-variables-in-Terraform/</url>
      
        <content type="html"><![CDATA[<p><img src="terraform.png" alt="" /></p><p><strong>This blog post is generated with ChatGPT</strong></p><p>In Terraform, you can use custom validation blocks to define your own custom validation rules for Terraform variables. These validation blocks allow you to specify a validation function that Terraform will use to validate the value of the variable. You can also use these custom validation blocks to validate other variables in your Terraform configuration.</p><p>To validate other variables from a custom validation function, you can use the <code>var</code> keyword followed by the name of the variable you want to validate. For example, if you have two variables named <code>subnet_id</code> and <code>vpc_id</code>, and you want to validate that the <code>subnet_id</code> is associated with the <code>vpc_id</code>, you could define a custom validation block like this:</p><pre class="language-hcl" data-language="hcl"><code class="language-hcl"><span class="token keyword">variable<span class="token type variable"> "subnet_id" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span> <span class="token punctuation">=</span> string<span class="token punctuation">&#125;</span><span class="token keyword">variable<span class="token type variable"> "vpc_id" </span></span><span class="token punctuation">&#123;</span>  <span class="token property">type</span> <span class="token punctuation">=</span> string<span class="token punctuation">&#125;</span><span class="token keyword">validation</span> <span class="token punctuation">&#123;</span>  <span class="token property">condition</span> <span class="token punctuation">=</span> can_associate_subnet_with_vpc(var.subnet_id, var.vpc_id)  <span class="token property">error_message</span> <span class="token punctuation">=</span> <span class="token string">"The specified subnet is not associated with the specified VPC."</span><span class="token punctuation">&#125;</span>function can_associate_subnet_with_vpc(subnet_id, vpc_id) <span class="token punctuation">&#123;</span>  <span class="token comment">// perform validation logic here</span><span class="token punctuation">&#125;</span></code></pre><p>In the example above, we define a custom validation block that calls the <code>can_associate_subnet_with_vpc</code> function to validate that the <code>subnet_id</code> is associated with the <code>vpc_id</code>. The <code>can_associate_subnet_with_vpc</code> function takes two arguments, <code>subnet_id</code> and <code>vpc_id</code>, which are both passed using the <code>var</code> keyword.</p><p>Inside the function, you can perform any validation logic you need to validate the variables. If the validation is successful, the function should return <code>true</code>, and if the validation fails, it should return <code>false</code>.</p><p>By using the <code>var</code> keyword and passing the variables to your custom validation function, you can easily validate multiple variables in your Terraform configuration and ensure that they meet your requirements.</p><p>In summary, to validate other variables from a custom validation function in Terraform, you can use the <code>var</code> keyword followed by the name of the variable you want to validate. This allows you to easily validate multiple variables in your Terraform configuration and ensure that they meet your requirements.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terraform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Home Assistant Sensor for Hong Kong Observatory</title>
      <link href="/2022/Home-Assistant-Sensor-for-Hong-Kong-Observatory/"/>
      <url>/2022/Home-Assistant-Sensor-for-Hong-Kong-Observatory/</url>
      
        <content type="html"><![CDATA[<h2 id="Hong-Kong-Observatory">Hong Kong Observatory</h2><h3 id="Tseung-Kwan-O-TKO-weather-humidity-temperature-and-10-minute-wind-speed-and-direction">Tseung Kwan O (TKO) weather, humidity, temperature and 10-minute wind speed and direction</h3><pre class="language-none"><code class="language-none">- platform: rest  name: hko_tko_humidity  resource: https:&#x2F;&#x2F;data.weather.gov.hk&#x2F;weatherAPI&#x2F;hko_data&#x2F;regional-weather&#x2F;latest_1min_humidity.csv  value_template: &quot;&#123;&#123; value | regex_findall_index(find&#x3D;&#39;Tseung Kwan O,(.*)&#39;) | float | round(0) &#125;&#125;&quot;  device_class: &quot;humidity&quot;  unit_of_measurement: &quot;%&quot;  scan_interval: 600- platform: rest  name: hko_tko_temperature  resource: https:&#x2F;&#x2F;data.weather.gov.hk&#x2F;weatherAPI&#x2F;hko_data&#x2F;regional-weather&#x2F;latest_1min_temperature.csv  value_template: &quot;&#123;&#123; value | regex_findall_index(find&#x3D;&#39;Tseung Kwan O,(.*)&#39;) | float | round(1) &#125;&#125;&quot;  device_class: &quot;temperature&quot;  unit_of_measurement: &quot;°C&quot;  scan_interval: 600- platform: rest  name: hk_tko_wind  resource: https:&#x2F;&#x2F;data.weather.gov.hk&#x2F;weatherAPI&#x2F;hko_data&#x2F;regional-weather&#x2F;latest_10min_wind.csv  value_template: &quot;&#123;&#123; value | regex_findall_index(find&#x3D;&#39;Tseung Kwan O,(.*)&#39;) &#125;&#125;&quot;  scan_interval: 600- platform: template  sensors:    tko_wind_direction:      friendly_name: &quot;TKO 10-minute wind direction&quot;      value_template: &quot;&#123;&#123; states(&#39;sensor.hk_tko_wind&#39;) | regex_findall_index(find&#x3D;&#39;([^,]+),&#39;) &#125;&#125; &quot;      icon_template: &quot;hass:compass&quot;    tko_wind_speed:      friendly_name: &quot;TKO 10-minute mean speed&quot;      value_template: &quot;&#123;&#123; states(&#39;sensor.hk_tko_wind&#39;) | regex_findall_index(find&#x3D;&#39;[^,]+,([^,]+),&#39;) &#125;&#125; &quot;      unit_of_measurement: &quot;km&#x2F;hour&quot;      icon_template: &quot;hass:tailwind&quot;    tko_wind_gust:      friendly_name: &quot;TKO 10-minute max gust&quot;      value_template: &quot;&#123;&#123; states(&#39;sensor.hk_tko_wind&#39;) | regex_findall_index(find&#x3D;&#39;[^,]+,[^,]+,([^,]+)&#39;) &#125;&#125; &quot;      unit_of_measurement: &quot;km&#x2F;hour&quot;      icon_template: &quot;hass:weather-windy&quot;</code></pre><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Home Assistant </tag>
            
            <tag> Open Data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How To Setup Root Certificate For MITM Proxy On iOS</title>
      <link href="/2018/How-To-Setup-Root-Certificate-For-MITM-Proxy-On-iOS/"/>
      <url>/2018/How-To-Setup-Root-Certificate-For-MITM-Proxy-On-iOS/</url>
      
        <content type="html"><![CDATA[<p>Trusting the root certificate for debugging proxies such as BrowserMob-Proxy on iOS is quite strict in its forward direction. You can download the certificate from <a href="https://github.com/lightbody/browsermob-proxy/blob/master/browsermob-core/src/main/resources/sslSupport/ca-certificate-rsa.cer">ca-certificate-rsa.cer</a> using Device’s Safari, or you can drag the file into the Simulator as well.</p><ol><li><p>Tap on Allow to install the cert<br /><img src="setup_cert_ios_01.png" alt="" /></p></li><li><p>Tap <code>Install</code> on the upper right<br /><img src="setup_cert_ios_02.png" alt="" /></p></li><li><p>Again, tap <code>Install</code> on the upper right<br /><img src="setup_cert_ios_03.png" alt="" /></p></li><li><p><code>Install</code><br /><img src="setup_cert_ios_04.png" alt="" /></p></li><li><p>Once verified, tap on <code>Done</code>. The certificate is installed<br /><img src="setup_cert_ios_05.png" alt="" /></p></li><li><p>To trust the certificate as Root Certificate, goto <code>About</code> in <code>General</code><br /><img src="setup_cert_ios_06.png" alt="" /></p></li><li><p>Scroll down until you see <code>Certificate Trust Settings</code><br /><img src="setup_cert_ios_07.png" alt="" /></p></li><li><p>Toggle on the <code>LittleProxy MITM</code> to trust it<br /><img src="setup_cert_ios_08.png" alt="" /></p></li><li><p>Tap <code>Continue</code> to trust it as Root Certificate<br /><img src="setup_cert_ios_09.png" alt="" /></p></li><li><p>Done. Now all traffic can be intercepted by the proxy without any complaint<br /><img src="setup_cert_ios_10.png" alt="" /></p></li></ol><style type="text/css">img {  width: 50%}</style><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Test Automation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The easiest way to perform network latency test on an App in iPhone</title>
      <link href="/2018/The-easiest-way-to-perform-network-latency-test-on-an-App-in-iPhone/"/>
      <url>/2018/The-easiest-way-to-perform-network-latency-test-on-an-App-in-iPhone/</url>
      
        <content type="html"><![CDATA[<p>Simulating network latency or even poor network conditions in iOS is very easy. You don’t need to set up a proxy, router, or a poor network provider. All you have to do is enable Developer mode using Xcode. Then, you can see the <strong>Developer</strong> icon, which allows you to easily simulate various network scenarios.</p><p><img src="step1.png" alt="" /></p><hr /><p>Under Developer, you can see the <strong>Network Link Conditioner</strong>. By default it is <em>Off</em>. Tap on the <strong>Network Link Conditioner</strong>,<br /><img src="step2.png" alt="" /></p><hr /><p>There are several profiles for you to use. You can utilize the <strong>ping</strong> time (round-trip) from your mobile phone to your target backend, and then subtract the <strong>ping</strong> time from your lab’s backend. To create a new profile, simply tap on <strong>Add a profile…</strong><br /><img src="step3.png" alt="" /></p><hr /><p>Let’s say the ping time is 900ms, you can set either <strong>Out Delay</strong>, <strong>In Delay</strong> or both.<br /><img src="step4.png" alt="" /></p><hr /><p>Done!</p><style type="text/css">img {  width: 50%}</style><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gsource on Mac</title>
      <link href="/2017/Gsource-on-Mac/"/>
      <url>/2017/Gsource-on-Mac/</url>
      
        <content type="html"><![CDATA[<p>It is often difficult to tell how hard developers are working to non-IT folks. Usually, I try to let them watch <a href="http://gource.io/">Gource</a>.</p><p><img src="gsource.png" alt="gsource sample" /></p><p>Setting up Gource on Mac is not difficult, but it has several steps. First, you have to have Brew installed. Then, run the commands below from Terminal,</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># install wget if you don't have</span>brew <span class="token function">install</span> <span class="token function">wget</span><span class="token comment"># gsource dependency</span>brew <span class="token function">install</span> glewbrew <span class="token function">install</span> pkg-configbrew <span class="token function">install</span> sdl2brew <span class="token function">install</span> sdl2_imagebrew <span class="token function">install</span> boostbrew <span class="token function">install</span> glmbrew <span class="token function">install</span> pcre<span class="token comment"># download and build Gource</span><span class="token function">wget</span> https://github.com/acaudwell/Gource/releases/download/gource-0.47/gource-0.47.tar.gz<span class="token function">tar</span> vfxz gource-0.47.tar.gz<span class="token builtin class-name">cd</span> gource-0.47./configure<span class="token comment"># assume no error from configure</span><span class="token function">make</span> <span class="token function">install</span></code></pre><p>The binary will install into /usr/local/bin/gource. Run the command below to generate the video from a directory with a Git repository</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>your <span class="token function">git</span> repository<span class="token punctuation">]</span>/usr/local/bin/gource</code></pre><p>You can replace the default icon with yours by renaming your avatar to the Git author name such as “Your Name.png” as in the Git log, place it in the local directory, and run the Gource command below</p><pre class="language-bash" data-language="bash"><code class="language-bash">/usr/local/bin/gource --user-image-dir <span class="token builtin class-name">.</span></code></pre><p>If you feel the video is too long, you can adjust the speed by changing the simulation time scale (default: 1.0) with <code>-c</code>, <code>--time-scale</code>, or <code>SCALE</code>.</p><p>You can make your video less messy by reducing the maximum number of files from unlimited to a value such as 100 with <code>--max-files NUMBER</code></p><p>Adding elasticity is fun with <code>-e 0.5</code> when a large number of files are being added or deleted.</p><p>More information can be found in <a href="https://github.com/acaudwell/Gource/wiki/Controls">Controls</a></p><p>The video can be output to a file with the option <code>-o FILENAME</code>. The file size can be over 10GB for a 1-minute video, so beware.</p><p>After the video is generated, you can use libav to convert it to MP4,</p><pre class="language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> libavavconv <span class="token parameter variable">-vcodec</span> ppm <span class="token parameter variable">-f</span> image2pipe <span class="token parameter variable">-i</span> gource.ppm <span class="token parameter variable">-c:v</span> libx265 <span class="token parameter variable">-c:a</span> copy gource.mkv</code></pre><p>Gource of my blog:</p><div class="video-container"><iframe src="https://www.youtube.com/embed/iZiZ4CaDkcM" frameborder="0" loading="lazy" allowfullscreen></iframe></div><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Visualization </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to login Cisco VPN automatically on macOS High Sierra</title>
      <link href="/2017/How-to-login-Cisco-VPN-automatically-on-macOS-High-Sierra/"/>
      <url>/2017/How-to-login-Cisco-VPN-automatically-on-macOS-High-Sierra/</url>
      
        <content type="html"><![CDATA[<p>There is no way to save a password when logging into a Cisco IPSec VPN on a Macintosh operating system (macOS).</p><p><img src="vpn_login.png" alt="No save password for security reason?" /></p><p>The best solution for me is writing an AppleScript in Automator, or running it from the command line, to automate the login process.</p><h2 id="AppleScript-in-Automator">AppleScript in Automator</h2><ol><li><p>Open Apple’s Automator,<br /><img src="automator.png" alt="Automator" /></p></li><li><p>Choose <code>New Document</code><br /><img src="new_document.png" alt="New Document" /></p></li><li><p>Select <code>Service</code><br />The service created has <code>receives selected</code> <code>text</code> by default. It means you need to select text or having focus in a text editor to enable the service.<br /><img src="service.png" alt="Service" /></p></li><li><p>Try to search for action <code>Run AppleScript</code>. Then, drag the action into the right-hand-side.<br /><img src="run_apple_script.png" alt="Search for action &quot;Run AppleScript&quot;, and then drag it to the right-hand-side" /></p></li><li><p>Paste below code into the editor,</p></li></ol><pre class="language-applescript" data-language="applescript"><code class="language-applescript"><span class="token keyword">on</span> run <span class="token punctuation">&#123;</span>input<span class="token punctuation">,</span> parameters<span class="token punctuation">&#125;</span>  <span class="token keyword">set</span> vpn_name <span class="token keyword">to</span> <span class="token string">"'your VPN name'"</span>  <span class="token keyword">set</span> user_name <span class="token keyword">to</span> <span class="token string">"your username"</span>  <span class="token keyword">set</span> passwd <span class="token keyword">to</span> <span class="token string">"your password"</span><span class="token keyword">tell</span> <span class="token class-name">application</span> <span class="token string">"System Events"</span><span class="token keyword">set</span> rc <span class="token keyword">to</span> do shell <span class="token class-name">script</span> "scutil <span class="token comment">--nc status " &amp; vpn_name</span><span class="token keyword">if</span> rc <span class="token operator">starts with</span> <span class="token string">"Disconnected"</span> <span class="token keyword">then</span>do shell <span class="token class-name">script</span> "scutil <span class="token comment">--nc start " &amp; vpn_name &amp; " --user " &amp; user_name</span>delay <span class="token number">3</span>keystroke passwdkeystroke <span class="token keyword">return</span><span class="token keyword">end</span> <span class="token keyword">if</span><span class="token keyword">end</span> <span class="token keyword">tell</span><span class="token keyword">return</span> input<span class="token keyword">end</span> run</code></pre><p><img src="script_editor.png" alt="Editor with the script" /></p><ol start="6"><li>Update <code>vpn_name</code>, <code>username</code> and <code>passwd</code> in the script.</li></ol><p>You can refer to the screenshot below for the <code>vpn_name</code>, which is <code>VPN (Cisco IPSec)</code>. The script uses <code>scutil --nc status</code> to check the VPN connection status, and <code>scutil --nc start</code> to initiate the VPN connection. Typically, the VPN login dialog appears within 3 seconds. If your laptop is slow, please update the value in <code>delay 3</code>. To automate the process, try running the script using the play button and observe how it works.</p><p><img src="vpn_name.png" alt="Your VPN name" /></p><ol start="7"><li><p>Save the script with a name such as <code>VPN Login</code>.<br />In the <code>System Preferences -&gt; Keyboard -&gt; Shortcuts</code>, you can find the automation script. Assign a shortcut key. By default, the script is assigned to the Text service during its creation. To use the keyboard shortcut, you will need to select some text or have focus in a text editor enabled.<br /><img src="keyboard_shortcuts.png" alt="Assign hotkey for your VPN" /></p></li><li><p>Try selecting text from a text editor, such as Atom. With the proper shortcut key set up, you should be able to automate the VPN login. This script should work with Sierra or earlier versions of macOS, although I haven’t tested it on older systems myself. Please let me know if you have any results using this method on older macOS platforms</p></li></ol><p><img src="success.png" alt="Success!" /></p><h2 id="AppleScript-from-command-line">AppleScript from command line</h2><ol><li><p>Open Apple’s Script Editor,<br /><img src="apple_script_editor.png" alt="Automator" /></p></li><li><p>Choose <code>New Document</code></p></li><li><p>Paste below code into the editor. Please refers to <a href="?#applescript-in-automator">AppleScript in Automator</a></p></li></ol><pre class="language-applescript" data-language="applescript"><code class="language-applescript"><span class="token keyword">set</span> vpn_name <span class="token keyword">to</span> <span class="token string">"'your VPN name'"</span><span class="token keyword">set</span> user_name <span class="token keyword">to</span> <span class="token string">"your username"</span><span class="token keyword">set</span> passwd <span class="token keyword">to</span> <span class="token string">"your password"</span><span class="token keyword">tell</span> <span class="token class-name">application</span> <span class="token string">"System Events"</span><span class="token keyword">set</span> rc <span class="token keyword">to</span> do shell <span class="token class-name">script</span> "scutil <span class="token comment">--nc status " &amp; vpn_name</span><span class="token keyword">if</span> rc <span class="token operator">starts with</span> <span class="token string">"Disconnected"</span> <span class="token keyword">then</span>do shell <span class="token class-name">script</span> "scutil <span class="token comment">--nc start " &amp; vpn_name &amp; " --user " &amp; user_name</span>delay <span class="token number">3</span>keystroke passwdkeystroke <span class="token keyword">return</span><span class="token keyword">end</span> <span class="token keyword">if</span><span class="token keyword">end</span> <span class="token keyword">tell</span></code></pre><ol start="4"><li>Save the script. You can run the script with <code>osascript [programfile]</code> from Terminal.</li></ol><p>Have fun!</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Cybersecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MacOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mark Six master on Linux/Mac</title>
      <link href="/2017/Mark-six-master-on-linuxmac/"/>
      <url>/2017/Mark-six-master-on-linuxmac/</url>
      
        <content type="html"><![CDATA[<p><img src="Mark_six_ticket_front.jpg" alt="A Mark six ticket" /></p><p>Mark Six is a lottery in Hong Kong. You can select 6 numbers from a pool of 49 numbers on the lottery ticket. There are numerous single-line commands that can be used to generate 6 numbers randomly from 1 to 49.</p><p>python 2</p><pre class="language-python" data-language="python"><code class="language-python">python <span class="token operator">-</span>c <span class="token string">'import random; print [ random.randint(1,49) for _ in xrange(6)]'</span></code></pre><p>awk</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">min</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">max</span><span class="token operator">=</span><span class="token number">49</span> <span class="token string">'BEGIN&#123; srand(); for (i = 0; i &lt; 6; i++)  print int(min+rand()*(max-min+1))&#125;'</span></code></pre><p>bash</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$((</span> <span class="token punctuation">(</span> RANDOM <span class="token operator">%</span> <span class="token number">49</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span><span class="token punctuation">;</span> <span class="token keyword">done</span></code></pre><p><s>jot on Mac</s> macOS 10.13 High Sierra no longer provides jot</p><pre class="language-bash" data-language="bash"><code class="language-bash">jot <span class="token parameter variable">-r</span> <span class="token parameter variable">-s</span> <span class="token string">' '</span> <span class="token number">6</span> <span class="token number">1</span> <span class="token number">49</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">' '</span> <span class="token string">'\n'</span></code></pre><p>However, you will soon find repeated numbers are generated from the above solutions. The trick to have non-repeated generated numbers is using random sort from an array with 49 numbers,</p><p>python 2</p><pre class="language-python" data-language="python"><code class="language-python">python <span class="token operator">-</span>c <span class="token string">'import random; a = range(1, 49); random.shuffle(a); print a[:6:]'</span></code></pre><p><s>jot on Mac</s> macOS 10.13 High Sierra no longer provides jot</p><pre class="language-bash" data-language="bash"><code class="language-bash">jot <span class="token number">49</span> <span class="token number">1</span> <span class="token number">49</span> <span class="token operator">|</span> gsort --random-sort <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">6</span></code></pre><h2 id="Using-AI-to-write-python-script">Using AI to write python script</h2><p>Using AI to generate Python scripts is extremely straightforward. Let’s write a prompt and compare it with what we wrote in 2017. The prompt is: <code>Write a Python script that pick six random unique numbers from 1 to 49, inclusive. Write it simple and testable.</code></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">def</span> <span class="token function">get_random_numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>get_random_numbers<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>The result is great! We can add AI to unit test as well.</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> unittest<span class="token keyword">from</span> your_script <span class="token keyword">import</span> get_random_numbers<span class="token keyword">class</span> <span class="token class-name">TestGetRandomNumbers</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">test_length</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>get_random_numbers<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_values</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        numbers <span class="token operator">=</span> get_random_numbers<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>assertTrue<span class="token punctuation">(</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;=</span> x <span class="token operator">&lt;=</span> <span class="token number">49</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_uniqueness</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        numbers <span class="token operator">=</span> get_random_numbers<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>assertTrue<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    unittest<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>The unit test is better than many developers!</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ShellScript </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Capture screen into clipboard instead of file on Mac</title>
      <link href="/2017/capture-screen-into-clipboard-instead-of-file-on-mac/"/>
      <url>/2017/capture-screen-into-clipboard-instead-of-file-on-mac/</url>
      
        <content type="html"><![CDATA[<p>Many people know how to capture screen into a file on Mac by using <kbd>Command<kbd> + <kbd>Shift</kbd> + <kbd>3</kbd> for a full screenshot and <kbd>4</kbd> for cross hair selection tool. However, I found I want to paste the captured image into an editor directly more than saving the image into a file. The hotkey for taking a screenshot to the clipboard is very inconvenient, which is <kbd>Control</kbd> + <kbd>Command</kbd> + <kbd>Shift</kbd> + <kbd>3</kbd> or <kbd>4</kbd>. The following steps show how to reassign the shortcuts for taking a screenshot to the clipboard instead of a file.</p><p>1. Go to System Preference and click Keyboard,<br /><img src="mac-screen-capture-01.png" alt="" /></p><p>2. Click on the second key to reassign <kbd>Command</kbd> + <kbd>Shift</kbd> + <kbd>3</kbd>  for “Copy picture of screen to the clipboard”. It is fine to see the conflict icon as it will be resolved later<br /><img src="mac-screen-capture-02.png" alt="" /></p><p>3. Click the first key to reassign the <kbd>Control</kbd> + <kbd>Command</kbd> + <kbd>Shift</kbd> + <kbd>3</kbd> , which is less frequently using.<br /><img src="mac-screen-capture-03.png" alt="" /></p><p>4. Do the same for capturing with cross hair selection tool. My personal preference for taking screenshot to a file is <kbd>Option</kbd> + <kbd>Command</kbd> + <kbd>Shift</kbd> + <kbd>3</kbd> ,<br /><img src="mac-screen-capture-04.png" alt="" /></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Fiddler Cookbook</title>
      <link href="/2017/my-fiddler-cookbook/"/>
      <url>/2017/my-fiddler-cookbook/</url>
      
        <content type="html"><![CDATA[<p>Fiddler is my favorite debugging proxy on Windows. Usually, I use Python to write simple debugging proxy which is usually less than 30 lines until it needs https.</p><h1>Enabling https decryption</h1><p>That’s why my first configuration on Fiddler is Decrypting HTTPS traffic,</p><p><img src="fiddler-2.png" alt="" /></p><p>Check Decrypt HTTPS traffic and click OK.<br /><img src="fiddler-3.png" alt="" /></p><p>It will then ask to install a Trust Root Certificate,<br /><img src="fiddler-4a.png" alt="" /><br /><img src="fiddler-4b.png" alt="" /></p><p>The scary text is a warning about https traffic being seen by Fiddler. Fiddler’s root certificate is now trusted, which means Fiddler can generate certificates trusted by your applications, including your browser.</p><p>If it doesn’t prompt you to install the certificate, you can have the certificate installed with below,<br /><img src="fiddler-5.png" alt="" /></p><h1>A Simple Load Test</h1><p>You can run a very simple load test by selecting multiple request, and then press R. Beware the response from the server may be cached in different layer of the infrastructure.<br /><img src="fiddler-6.png" alt="" /></p><p>You can see how well the servers perform from the Timeline.<br /><img src="fiddler-7.png" alt="" /></p><p>Sometimes you can even see the number of outgoing connection limit on Windows by checking with Timeline.</p><h1>Modifying your request</h1><p>You can also modify your request before sending it out,<br /><img src="fiddler-8.png" alt="" /></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Corporate Network Survival Guide - How to Connect with Another WiFi Router with the Same SSID</title>
      <link href="/2016/corporate-network-survival-guide-how-to-connect-with-another-wifi-router-with-the-same-ssid/"/>
      <url>/2016/corporate-network-survival-guide-how-to-connect-with-another-wifi-router-with-the-same-ssid/</url>
      
        <content type="html"><![CDATA[<p>If you find your notebook has WiFi connectivity in a certain area but loses it in some areas with full WiFi signal, you may be under a faulty WiFi router. There are many routers in an office that share the same SSID so that your notebook determines the best WiFi router to connect with. However, some may fail over time. The steps below may help if you connect to a faulty WiFi router nearby that allows you to connect but does not have proper Internet connectivity.</p><p>First, use the command below to check which WiFi router you are connecting to:</p><pre>$ netsh wlan show interface</pre><p>Take a look at the BSSID under SSID. SSID is an ID that could represent more than one WiFi router, but BSSID is the unique ID for a specific WiFi router:</p><pre>There is 1 interface on the system:    Name                   : Wireless Network Connection    Description            : Intel(R) Centrino(R) Advanced-N 6205    GUID                   : d827d652-b7f5-412e-xxxx-1235ea895d99    Physical address       : aa:aa:aa:aa:aa:aa    State                  : connected    SSID                   : ABC    BSSID                  : zz:zz:zz:zz:zz:zz    Network type           : Infrastructure    Radio type             : 802.11n    Authentication         : WPA2-Personal    Cipher                 : CCMP    Connection mode        : Auto Connect    Channel                : 1    Receive rate (Mbps)    : 144    Transmit rate (Mbps)   : 144    Signal                 : 99%    Profile                : ABC    Hosted network status  : Not started</pre><p>The notebook is connected to the WiFi network ABC via router zz:zz:zz:zz:zz:zz. Are any other routers available under the SSID ABC?</p><pre>$ netsh wlan show all</pre><p>Look for SHOW NETWORK MODE=BSSID from the result. It shows all the routers available for WiFi network ABC:</p><pre>============================================================================================== SHOW NETWORKS MODE=BSSID =============================================================================================SSID 8 : ABC    Network type            : Infrastructure    Authentication          : WPA2-Personal    Encryption              : CCMP    BSSID 1                 : xx:xx:xx:xx:xx:xx         Signal             : 80%         Radio type         : 802.11n         Channel            : 40         Basic rates (Mbps) : 6 12 24         Other rates (Mbps) : 9 18 36 48 54    BSSID 2                 : yy:yy:yy:yy:yy:yy         Signal             : 76%         Radio type         : 802.11n         Channel            : 161         Basic rates (Mbps) : 6 12 24         Other rates (Mbps) : 9 18 36 48 54    BSSID 3                 : zz:zz:zz:zz:zz:zz         Signal             : 99%         Radio type         : 802.11n         Channel            : 11         Basic rates (Mbps) : 6.5 16 19.5 117         Other rates (Mbps) : 18 19.5 24 36 39 48 54 156</pre><p>There are 3 BSSIDs under SSID ABC, which means there are 3 WiFi routers in range when you are trying to connect to the WiFi network named ABC. The WiFi router with the strongest signal to your notebook is used by default, as it can provide the best connectivity and transfer speed. However, the router with the strongest signal is not configured properly in this case. How do we force the notebook to connect to a router that is working although the signal is weaker? Let’s say we want to connect to the router with BSSID xx:xx:xx:xx:xx:xx.</p><hr /><h2 id="Forcing-Connection-with-BSSID">Forcing Connection with BSSID</h2><p>In Windows, we can go to the Control Panel and manage your WiFi settings. Right-click on the WiFi network that you want to connect with, and then select Properties.</p><p><img src="BSSID1.png" alt="BSSID1" /></p><p>In the Wireless Network Properties, check <em>Enable Intel connection settings</em>, then click Configure.</p><p><img src="BSSID2.png" alt="BSSID2" /></p><p>Select <em>Mandatory Access Point</em>, key in the BSSID that you want to connect with. Click OK to save the settings.</p><p><img src="BSSID3.png" alt="BSSID3" /></p><p>It may be slower as you have poor connectivity due to poor signal strength, but you survive at least until someone fixes the issue.</p><p>The above option only works for Intel WiFi adapters. I do not know if other WiFi drivers provide the feature for enforcing BSSID. Let me know if you have found it in another WiFi driver.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Cybersecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> enterprise </tag>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setup IMAP with SSL-only on iPhone/iPad</title>
      <link href="/2016/setup-imap-with-ssl-only-on-iphoneipad/"/>
      <url>/2016/setup-imap-with-ssl-only-on-iphoneipad/</url>
      
        <content type="html"><![CDATA[<style type="text/css">img {  width: 50%}</style><p>You cannot setup IMAP on iPhone/iPad (iOS devices) with a server that only provides IMAP SSL (port 993). iOS detects the existence of IMAP by using non-SSL IMAP port, which is port 143. Here is the trick that helps you to set it up.</p><p>First, and most important, you have to disable any possible Internet connection. The easiest way is to switch to airplane mode. </p><p><img src="imaps-ios01.png" alt="imaps-ios01" /></p><hr /><p>Go to <strong>Settings</strong>, tap on <strong>Mail, Contacts, Calendars</strong><br /><img src="imaps-ios02.png" alt="imaps-ios02" /></p><hr /><p>Tap on <strong>Add Account</strong><br /><img src="imaps-ios03.png" alt="imaps-ios03" /></p><hr /><p>Tap on <strong>Other</strong><br /><img src="imaps-ios04.png" alt="imaps-ios04" /></p><hr /><p>Enter basic information and tap <strong>Next</strong><br /><img src="imaps-ios06.png" alt="imaps-ios06" /></p><hr /><p>It would ask for you incoming and outgoing mail server. Fill in the server information. Tap <strong>Next</strong>.<br /><img src="imaps-ios08.png" alt="imaps-ios08" /></p><hr /><p>It prompts for network connectivity. Tap <strong>OK</strong> to ignore it.<br /><img src="imaps-ios09.png" alt="imaps-ios09" /></p><hr /><p>Tap <strong>Next</strong> again. This time you can <strong>Save</strong>.<br /><img src="imaps-ios10.png" alt="imaps-ios10" /></p><hr /><p><strong>Save</strong> again.<br /><img src="imaps-ios11.png" alt="imaps-ios11" /></p><hr /><p>Tap on the newly created account.<br /><img src="imaps-ios12.png" alt="imaps-ios12" /></p><hr /><p>Tap on <strong>Advanced</strong>.<br /><img src="imaps-ios14.png" alt="imaps-ios14" /></p><hr /><p>Enable <strong>Use SSL</strong>.<br /><img src="imaps-ios15.png" alt="imaps-ios15" /></p><hr /><p>Tap <strong>Account</strong> on top left to save changes and back to previous screen.<br /><img src="imaps-ios16.png" alt="imaps-ios16" /></p><hr /><p>Remember to switch back to normal mode from airplane mode before testing your email settings.</p><p><img src="imaps-ios17.png" alt="imaps-ios17" /></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Cybersecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setting up HTTP/2 with Apache and PHP on Debian 8</title>
      <link href="/2016/http2-apache-php-debian-8/"/>
      <url>/2016/http2-apache-php-debian-8/</url>
      
        <content type="html"><![CDATA[<p>My blog has been migrated to a new Debian Virtual Private Server (VPS). I was trying to enable SPDY on my new server, but support from Google for Apache is somewhat broken. The latest Chrome browser supports SPDY 3.1 only, but Google only provides SPDY 3.0 to the Apache module. I decided to skip SPDY and set up HTTP/2, as more major browsers are adopting HTTP/2.</p><hr /><h2 id="HTTP-1-1-makes-multiple-new-connections">HTTP/1.1 makes multiple new connections</h2><p>Before HTTP/2, let’s have a brief idea of how slow HTTP/1.1 is,</p><p><img src="http1.1-1.png" alt="http1.1-1" /></p><p>As you can see from the above chart, 21 new connections are trying to connect to the HTTP server simultaneously after the first request. The gray line in timelines represents time wasted on connecting to the server. My poor server can only serve 5 (first 3, 7th, and 8th) immediately. Overall, the client has to wait for 0.5-1s to start downloading content and reach the red goal line, which means the page is ready for rendering.</p><hr /><h2 id="HTTP-2-multiplexes-from-the-original-connection">HTTP/2 multiplexes from the original connection</h2><p>Below is HTTP/2. No more gray! This is because HTTP/2 keeps one single connection (multiplexing) and no time is wasted on handshaking connections.<br /><img src="http2-1.png" alt="http2-1" /></p><p>There are many more benefits from HTTP/2. Feel free to explore!</p><hr /><h2 id="Setup">Setup</h2><p>To set up HTTP/2 on Apache with PHP5 on Debian 8, I have to use Apache 2.4.18 from the testing channel as this version includes <code>mod_http2</code>. Meanwhile, <code>mod_fcgid</code> is used, but no NPN is required. Lastly, SSL is required for HTTP/2.</p><p><strong>Create /etc/apt/sources.list.d/testing.list</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash">deb     http://mirror.steadfast.net/debian/ testing main contrib non-freedeb-src http://mirror.steadfast.net/debian/ testing main contrib non-freedeb     http://ftp.us.debian.org/debian/    testing main contrib non-freedeb-src http://ftp.us.debian.org/debian/    testing main contrib non-free</code></pre><p><strong>Create /etc/apt/preferences.d/testing.pref</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash">Package: *Pin: release <span class="token assign-left variable">a</span><span class="token operator">=</span>testingPin-Priority: <span class="token number">750</span></code></pre><p><strong>Add below to site config file</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>Location /<span class="token operator">></span>AddHandler fcgid-script .phpOptions +ExecCGIFcgidWrapper /usr/bin/php-cgi .php<span class="token operator">&lt;</span>/Location<span class="token operator">></span></code></pre><p><strong>Run below commands</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># install Apache 2.4.18 from testing channel instead of 2.4.10 from stable</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> apache2/testing apache2-data/testing apache2-bin/testing libnghttp2-14 libssl1.0.2  apache2-mpm-worker/testing<span class="token comment"># fcgid</span><span class="token function">sudo</span> <span class="token function">apt-get</span> libapache2-mod-fcgid<span class="token comment"># PHP from testing channel</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> php-getid3/testing php-common/testing libphp-phpmailer/testing<span class="token function">sudo</span> a2enmod mpm_prefork<span class="token function">sudo</span> a2enmod fcgid<span class="token function">sudo</span> a2dismod php5<span class="token comment"># finally, restart apache</span><span class="token function">sudo</span> apache2ctl restart</code></pre><hr /><h2 id="Showing-active-HTTP-2-session">Showing active HTTP/2 session</h2><p>Open chrome://net-internals/#events&amp;q=type:HTTP2_SESSION%20is:active from Chrome. You should see your site listed as in the below screenshot if you have set it up successfully,</p><p><img src="http2-result.png" alt="http2-result" /></p><p>There are many tutorials about setting up SPDY that would suggest choosing SPDY from the dropdown. SPDY has been removed from the recent version of Chrome.</p><hr /><h2 id="About-the-new-VPS">About the new VPS</h2><p>I have been using <a href="http://Openshift.com">Openshift.com</a> for free for years. However, I have to switch to another service from Openshift because the free account doesn’t support CA-signed SSL. Paid users can add CA-signed SSL to their website. I do not mind paying, but they do not accept payment from Hong Kong. SSL is getting more important in search engine ranking, and it is required for an advanced protocol such as SPDY that can improve page loading performance. I chose a VPS from <a href="http://hostmada.com">hostmada.com</a> for USD 24 a year in the end.</p><p><em>Enjoy!</em></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CLLocationManager Tutorial and Troubleshooting</title>
      <link href="/2016/cllocationmanager-tutorial-and-troubleshooting/"/>
      <url>/2016/cllocationmanager-tutorial-and-troubleshooting/</url>
      
        <content type="html"><![CDATA[<p>Many developers complain that mobile application development is more difficult than web application development. They try to follow tutorials online precisely, but the mobile application still doesn’t work. This is because mobile platforms evolve rapidly, and tutorials just can’t keep up to date.</p><p>My friend had the above situation and failed to get any location update from the location manager. He added the CoreLocation.framework library to Link Binary,</p><p><img src="CLLocationSample1.png" alt="CLLocationSample1" /></p><p><img src="CLLocationSample2.png" alt="CLLocationSample2" /></p><p>Then, he put the code below, and it seems right.</p><script src="//gist.github.com/18ab0cc09e57cc2a4e6b.js?file=AppDelegate.swift"></script><p>However, nothing comes out to the console. This is because, starting from iOS 8, you need to add NSLocationAlwaysUsageDescription or NSLocationWhenInUseUsageDescription, depending on requestAlwaysAuthorization (for background location) or requestWhenInUseAuthorization (location only when foreground).</p><p><img src="CLLocationSample3.png" alt="CLLocationSample3" /></p><p><img src="CLLocationSample4.png" alt="CLLocationSample4" /></p><p>Let’s start to build and run the app. You should see the alert below if you start it for the first time.</p><p><img src="CLLocationManager5.png" alt="CLLocationManager5" /></p><p>You should get an update after tapping Allow. You may need to adjust the location if you are running the Simulator by choosing a location from Debug -&gt; Location.</p><p>I have uploaded the project to <a href="https://github.com/neoalienson/CLLocationManagerSample">https://github.com/neoalienson/CLLocationManagerSample</a></p><p>Good luck, and I hope this tutorial does not become outdated very soon!</p><p> </p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A just for fun benchmark test for C, Go, Java, Javascript, PHP, Python and Swift</title>
      <link href="/2015/go-vs-swift-a-simple-benchmark-test/"/>
      <url>/2015/go-vs-swift-a-simple-benchmark-test/</url>
      
        <content type="html"><![CDATA[<h2 id="The-story-begins-with-Swift-and-Go">The story begins with Swift and Go</h2><p>I like the beauty of Apple’s Swift language more than Google’s Go. Ok, it is subjective. <a href="https://github.com/apple/swift">Apple has Swift open source</a>, I decided to run a simple benchmark test to have an objective idea for which language is better in terms of speed.</p><script type="text/javascript" src="/cache/echarts.min.js"></script><p>Bubble sort in Go,</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"testing"</span><span class="token keyword">func</span> <span class="token function">BenchmarkBubbleSort</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">&#125;</span>  <span class="token keyword">for</span> c <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> c<span class="token operator">++</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> y <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> y<span class="token operator">++</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> array<span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>          t <span class="token operator">:=</span> array<span class="token punctuation">[</span>y<span class="token punctuation">]</span>          array<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>          array<span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> t        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>Bubble sort in Swift,</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple </tag>
            
            <tag> Swift </tag>
            
            <tag> nodejs </tag>
            
            <tag> C# </tag>
            
            <tag> Go </tag>
            
            <tag> Java </tag>
            
            <tag> PHP </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introducing try-catch from Apple Swift 2, with sandbox on web by IBM Bluemix</title>
      <link href="/2015/apple-swift-2-sandbox-on-web-by-ibm/"/>
      <url>/2015/apple-swift-2-sandbox-on-web-by-ibm/</url>
      
        <content type="html"><![CDATA[<p>Apple Swift is a programming language for iOS application development at the beginning. It can be found on Mac’s Xcode.</p><p>Now Apple Swift 2 is hosted on <a href="http://swiftlang.ng.bluemix.net">IBM Bluemix’s website (http://swiftlang.ng.bluemix.net)</a>. The Swift version is 2.2-dev as of today,</p><pre class="language-none"><code class="language-none">Swift version 2.2-dev (LLVM 46be9ff861, Clang 4deb154edc, Swift 778f82939c)Target: x86_64-unknown-linux-gnu</code></pre><p>There are many language features introduced in Swift 2. Let’s begin with the elegant try-catch feature from a sample code,</p><pre class="language-swift" data-language="swift"><code class="language-swift"><span class="token comment">/* Basic Fibonacci function in swift.   Demonstrates func calls and recursion.*/</span><span class="token keyword">func</span> <span class="token function-definition function">Fibonacci</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-></span> <span class="token class-name">Int</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> i <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">**</span><span class="token keyword">try</span><span class="token operator">**</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">do</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">/* do something that doesn't throw in the middle  */</span>  <span class="token comment">// the keyword reminds you below function will throw</span><span class="token keyword">try</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"error"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>The function doesn’t really throw anything, but you can see the function calls that throw are prefixed with <code>try</code>.</p><p>The evolution speed of Swift language seems a little bit faster than Google’s Go language on this feature.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple </tag>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setup script after WD Cloud firmware updated</title>
      <link href="/2015/setup-script-after-wd-cloud-firmware-updated/"/>
      <url>/2015/setup-script-after-wd-cloud-firmware-updated/</url>
      
        <content type="html"><![CDATA[<p>You lose all custom configurations whenever the WD Cloud firmware has updated. Below scripts help me to revert my settings,</p><h2 id="Update-SSH-server-to-use-public-key-authentication">Update SSH server to use public key authentication</h2><p>Login to root on the WD Cloud and create .ssh on the server side,</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/.ssh</code></pre><p>Upload public key from your machine to the server, Replace <em><strong>nas</strong></em> with your host/IP address.</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> ~/.ssh/id_rsa.pub root@_**nas**_:~/.ssh/authorized_keys</code></pre><p>on the server-side</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> go-rwx ~/.ssh<span class="token function">sed</span> <span class="token parameter variable">-i.bak</span> <span class="token string">"s/PubkeyAuthentication no/PubkeyAuthentication yes/"</span> /etc/ssh/sshd_config/etc/init.d/ssh restart</code></pre><p>You can ssh to the nas without entering the password. In short,</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># run it from your own machine</span><span class="token comment"># prerequisites, you have generated a public/private key pair in ~/.ssh</span><span class="token comment"># configuration</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">TARGET_SERVER</span><span class="token operator">=</span>nas<span class="token function">ssh</span> root@<span class="token variable">$TARGET_SERVER</span> <span class="token function">mkdir</span> ~/.sshUpload public key from your machine to the server, Replace nas with your host/IP address.<span class="token function">scp</span> ~/.ssh/id_rsa.pub root@nas:~/.ssh/authorized_keyson the server-side<span class="token function">ssh</span> root@<span class="token variable">$TARGET_SERVER</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFchmod go-rwx ~/.sshsed -i.bak "s/PubkeyAuthentication no/PubkeyAuthentication yes/" /etc/ssh/sshd_config/etc/init.d/ssh restartEOF</span></code></pre><p>If you do not want to build packages, you can download from <a href="https://app.box.com/wdcloud">https://app.box.com/wdcloud</a>. I will try to keep it up-to-date.</p><h2 id="Script-to-build-general-packages">Script to build general packages</h2><p>Below script build packages such as transmission, joe, etc</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># build useful component base on my personal preference WD Cloud (ubuntu, arm)</span><span class="token comment">### configuration ###</span><span class="token comment"># your WD cloud host name</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">SERVER_HOST</span><span class="token operator">=</span>nas<span class="token comment"># target cloud version</span><span class="token assign-left variable">WD_VERSION</span><span class="token operator">=</span>04.04.02-105<span class="token comment">### execute ###</span><span class="token comment"># download and unpack the gpl source and build tools</span><span class="token function">wget</span> http://download.wdc.com/gpl/gpl-source-wd_my_cloud-<span class="token variable">$WD_VERSION</span>.zip<span class="token function">rm</span> <span class="token parameter variable">-rf</span> packages<span class="token function">unzip</span> gpl-source-wd_my_cloud-<span class="token variable">$WD_VERSION</span>.zip packages/build_tools/debian/*<span class="token function">mkdir</span> 64k-wheezy<span class="token function">cp</span> <span class="token parameter variable">-R</span> packages/build_tools/debian/* ./64k-wheezy<span class="token builtin class-name">echo</span> <span class="token string">'#!/bin/bash'</span> <span class="token operator">></span> 64k-wheezy/build.sh<span class="token builtin class-name">echo</span> <span class="token string">'./build-armhf-package.sh --pagesize=64k $1 wheezy'</span> <span class="token operator">>></span> 64k-wheezy/build.sh<span class="token function">chmod</span> a+x 64k-wheezy/build.sh<span class="token builtin class-name">cd</span> 64k-wheezy./setup.sh bootstrap/wheezy-bootstrap_1.24.14_armhf.tar.gz build<span class="token function">mv</span> build/usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static_orig<span class="token function">cp</span> /usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static<span class="token comment"># override build/etc/apt/sources.list</span><span class="token builtin class-name">echo</span> <span class="token string">"deb http://security.debian.org/ wheezy/updates main contrib non-free"</span> <span class="token operator">></span> build/etc/apt/sources.list<span class="token builtin class-name">echo</span> <span class="token string">"deb-src http://security.debian.org/ wheezy/updates main contrib non-free"</span> <span class="token operator">>></span> build/etc/apt/sources.list<span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy-updates main contrib non-free"</span> <span class="token operator">>></span> build/etc/apt/sources.list<span class="token builtin class-name">echo</span> <span class="token string">"deb-src http://ftp.debian.org/debian wheezy-updates main contrib non-free"</span> <span class="token operator">>></span> build/etc/apt/sources.list<span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy main contrib non-free"</span> <span class="token operator">>></span> build/etc/apt/sources.list<span class="token builtin class-name">echo</span> <span class="token string">"deb-src http://ftp.debian.org/debian wheezy main contrib non-free"</span> <span class="token operator">>></span> build/etc/apt/sources.list<span class="token comment"># optional until you need to use backports packages</span><span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free"</span> <span class="token operator">>></span> build/etc/apt/sources.list<span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free"</span> <span class="token operator">>></span> build/etc/apt/sources.list<span class="token function">cp</span> /etc/resolv.conf build/etc<span class="token comment"># exiv2</span>./build.sh exiv2<span class="token comment"># editor</span>./build.sh joe<span class="token function">scp</span> build/root/joe_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> joe_*.deb<span class="token comment"># htop</span>./build.sh <span class="token function">htop</span><span class="token function">scp</span> build/root/htop_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> htop_*.deb<span class="token comment"># unrar</span>./build.sh <span class="token function">unrar</span><span class="token function">scp</span> build/root/unrar_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> unrar_*.deb<span class="token comment"># transmission</span><span class="token comment"># below build process will be finished after an hour or so</span>./build.sh libcurl3-gnutls./build.sh libminiupnpc5./build.sh libnatpmp1./build.sh transmission-common./build.sh transmission-daemon<span class="token comment"># upload</span><span class="token function">scp</span> build/root/libcurl3-gnutls_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">scp</span> build/root/libminiupnpc5_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">scp</span> build/root/libnatpmp1_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">scp</span> build/root/transmission-common_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">scp</span> build/root/transmission-daemon_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token comment"># install</span><span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> libcurl3-gnutls_*.deb<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> libminiupnpc5_*.deb<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> libnatpmp1_*.deb<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> transmission-common_*.deb<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> transmission-daemon_*.deb<span class="token comment"># the transmission daemon / web should be started</span><span class="token comment"># if not, /etc/init.d/transmission-daemon start</span><span class="token comment"># in case you have backup settings, upload settings and restart</span><span class="token comment"># /etc/init.d/transmission-daemon restart</span><span class="token comment"># nodejs</span>./build.sh libc-ares2<span class="token function">scp</span> build/root/libc-ares2_*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> libc-ares2_*.deb<span class="token comment"># it takes an hour to build</span>./build.sh libv8<span class="token function">scp</span> build/root/libv8-3*.deb root@<span class="token variable">$SERVER_HOST</span>:~<span class="token function">ssh</span> root@<span class="token variable">$SERVER_HOST</span> dpkg <span class="token parameter variable">-i</span> libv8-3*.deb<span class="token function">wget</span> https://nodejs.org/dist/v4.2.1/node-v4.2.1-linux-armv7l.tar.gz<span class="token function">tar</span> xvfz node-v4.2.1-linux-armv7l.tar.gz<span class="token builtin class-name">cd</span> node-v4.2.1-linux-armv7l</code></pre><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arm </tag>
            
            <tag> wdcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MerchCircle</title>
      <link href="/2015/merchcirlce/"/>
      <url>/2015/merchcirlce/</url>
      
        <content type="html"><![CDATA[<p>This is the application we built for the <a href="/2015/mastercode-mastercard-hackathon-2015-hong-kong/">MasterCode hackathon 2015 Hong Kong</a>. The application was submitted to <a href="http://www.hackathon.io/sellspree">http://www.hackathon.io/sellspree</a>. The source code for this project can be found at<br /><a href="https://github.com/neoalienson/merchcircle-app">https://github.com/neoalienson/merchcircle-app</a> (iOS) and<br /><a href="https://github.com/neoalienson/merchcircle-web">https://github.com/neoalienson/merchcircle-web</a> (Web and Backend). The Web and backend hosts were on Heroku.</p><p>MerchCircle is the simplest solution for selling things to your friends. By tapping on ‘Sell something’, you can become a shop owner. You will be required to use MasterCard credit numbers, as we utilize the MasterCard money transfer API to receive money upon transaction completion.</p><p><img src="mastercode5.png" alt="mastercode5" /></p><p><img src="mastercode6.png" alt="mastercode6" /></p><p><img src="mastercode7.png" alt="mastercode7" /></p><p>After sharing the item link to your friend, your friend can pay you directly through our web frontend,</p><p><img src="mastercode8.png" alt="mastercode8" /></p><p><img src="mastercode9.png" alt="mastercode9" /></p><p><img src="mastercode10.jpg" alt="mastercode10" /></p><p><img src="mastercode11.jpg" alt="mastercode11" /></p><p>Cha-ching!</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> Java </tag>
            
            <tag> hackathon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mastercode/Mastercard Hackathon 2015 @ Hong Kong</title>
      <link href="/2015/mastercode-mastercard-hackathon-2015-hong-kong/"/>
      <url>/2015/mastercode-mastercard-hackathon-2015-hong-kong/</url>
      
        <content type="html"><![CDATA[<h2 id="My-first-hackathon">My first hackathon</h2><p><img src="mastercode2.jpg" alt="In Cocoon Hong Kong, there are approximately 150 people working on the master code." /></p><p>I joined my first hackathon, hosted by AngelHack at MasterCard’s in Hong Kong, in March 2015.</p><p>This event attracted around 150 participants from both local and overseas locations. The maximum team size was five persons, so there could be over 50 teams. The event started at 9 am, but teams from overseas began lining up as early as 7:30 am because the first six teams in line would get their own team room for the event.</p><p>Participants were free to join the event as individuals and attempt to form or join a team on that day.</p><p><img src="mastercode-ticket.png" alt="e-ticket for MasterCard Hackathon" /></p><h2 id="What-is-a-hackathon">What is a hackathon?</h2><p>One of my teammates had participated in several hackathons, and she told me that a hackathon is an event where you use your programming and analytical skills to solve a specific problem during the event. An example would be developing an algorithm to solve a Sudoku puzzle with minimal code statements.</p><p>The Mastercode hackathon was somewhat different from others. The Mastercard API has been open to the public for years, allowing every team to take advantage of brainstorming their idea or even starting development before the event started. The goal was to develop a business and a demo using the Mastercard API. Unlike other hackathons, the demo does not need to be completed by the end of the event, so technical skills were not as important as business ideas and graphic design in this hackathon.</p><p><img src="mastercode12.jpg" alt="Hygiene kit provided by the host" /></p><h2 id="Joining-as-an-individual">Joining as an individual</h2><p>Individuals can give a pitch about their idea or skill, and try to form or join a team on the first day morning for this event. However, not many participants gave their pitch, and none of them introduced themselves as many teams had already formed before the event started. Once a new team is formed, they need to brainstorm an idea. Therefore, joining as an individual would face a significant disadvantage, as they would face difficulties in finding team members and would need to spend valuable time on pitching and brainstorming before starting work. On the other hand, you can make a new friend and enjoy the process of working closely with a team.</p><p>A brief presentation about Mastercard’s API was given to those who didn’t read the documentation in the morning. The host announced that there is a ‘secret’ API from the public API, which wasn’t actually secret at all. To do well in the event, it’s essential to be well-prepared if you want to win.</p><h2 id="My-team">My team</h2><p>As you may have noticed, our team has a female member, who is a young designer from Toronto, Canada. The other team members are developers. We are a team dominated by IT professionals, with a focus on delivery rather than creativity.</p><h2 id="Judging-from-2-minute-pitch">Judging from 2-minute pitch</h2><p>Every team demonstrates their product within a 2-minute presentation in front of five judges. The judges then have one minute to raise questions to the team. It seems to me that most judges have very little idea about Mastercard’s APIs. They can only ask common and simple questions such as ‘How many Mastercard APIs have you used?’, ‘What is the business model?’ Sometimes, the judges don’t even have any questions. It would be better if the judges had a deeper understanding of the API, allowing them to critically evaluate the project’s feasibility.</p><p><a href="http://angelhack.com/masteryourcard-masters-of-code-hong-kong">http://angelhack.com/masteryourcard-masters-of-code-hong-kong</a></p><p>If you want to test whether you have the ability to start a startup, you should join the event.</p><p><a href="/2015/merchcirlce">MerchCircle</a> is the product we developed on that day.</p><p>You can learn more at #mastersofcode.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> hackathon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cross-Building for WD Cloud and Node.js</title>
      <link href="/2015/cross-building-for-wd-cloud-and-nodejs/"/>
      <url>/2015/cross-building-for-wd-cloud-and-nodejs/</url>
      
        <content type="html"><![CDATA[<p>WD Cloud runs Debian Linux on ARM. When you build applications for other architectures, you need to use cross-building. I have successfully built a package on Ubuntu 14 by following <a href="http://community.wd.com/t5/WD-My-Cloud/GUIDE-Building-packages-for-the-new-firmware-someone-tried-it/td-p/768007/page/2">this post</a> with a few notes.</p><p>If you see an error message like:</p><pre class="language-bash" data-language="bash"><code class="language-bash">Err http://ftp.debian.org wheezy-updates Release.gpg Could not resolve <span class="token string">'ftp.debian.org'</span></code></pre><p>Then, copy /etc/resolv.conf into build/etc, e.g.,</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/resolv.conf build/etc</code></pre><p>Please check <a href="/usefulinformation/download-links-for-wd-cloud-firmwares/">here</a> for a list of WD Cloud firmware images.</p><h1>Summary of Cross-Building with Wheezy for WD Cloud Firmware Version 4 or Above</h1><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># required for cross-building</span><span class="token function">apt-get</span> <span class="token function">install</span> qemu-user-static<span class="token function">apt-get</span> <span class="token function">install</span> binfmt-support<span class="token comment"># folder for building</span><span class="token function">mkdir</span> wdmc-build<span class="token builtin class-name">cd</span> wdmc-build<span class="token comment"># download location can be found in http://support.wdc.com/product/download.asp?groupid=904&amp;amp;lang=en</span><span class="token function">wget</span> http://download.wdc.com/gpl/gpl-source-wd_my_cloud-04.01.03-421.zip<span class="token function">unzip</span> gpl-source-wd_my_cloud-04.01.03-421.zip packages/build_tools/debian/*<span class="token function">mkdir</span> 64k-wheezy<span class="token function">cp</span> <span class="token parameter variable">-R</span> packages/build_tools/debian/* ./64k-wheezy<span class="token builtin class-name">echo</span> <span class="token string">'#!/bin/bash'</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> 64k-wheezy/build.sh<span class="token builtin class-name">echo</span> <span class="token string">'./build-armhf-package.sh --pagesize=64k $1 wheezy'</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> 64k-wheezy/build.sh<span class="token function">chmod</span> a+x 64k-wheezy/build.sh<span class="token builtin class-name">cd</span> 64k-wheezy<span class="token comment"># the setup script will prompt for root password during chroot</span>./setup.sh bootstrap/wheezy-bootstrap_1.24.14_armhf.tar.gz build<span class="token function">sudo</span> <span class="token function">mv</span> build/usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static_orig<span class="token function">sudo</span> <span class="token function">cp</span> /usr/bin/qemu-arm-static build/usr/bin/qemu-arm-static<span class="token comment"># override build/etc/apt/sources.list</span><span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb http://security.debian.org/ wheezy/updates main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb-src http://security.debian.org/ wheezy/updates main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy-updates main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb-src http://ftp.debian.org/debian wheezy-updates main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb-src http://ftp.debian.org/debian wheezy main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token comment"># optional until you need to use backports packages</span><span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.debian.org/debian wheezy-backports main contrib non-free"</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> build/etc/apt/sources.list<span class="token function">sudo</span> <span class="token function">cp</span> /etc/resolv.conf build/etc</code></pre><p>Then you can build by running <code>build.sh</code> with the package name, e.g.,</p><pre class="language-none"><div class="caption"><span>lang=bash</span></div><code class="language-none">.&#x2F;build.sh joe</code></pre><p>It will download the source package from the repository, cross-compile it, and build a deb file. The process could take over 10 minutes. Once it is successful, you can scp the .deb file to your router and install it with <code>dpkg -i</code>.</p><h1>Building Node.js Manually</h1><p>It is a little tricky to build Node.js because the source is not in the repository. I have tried to use a binary from <a href="http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz">http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz</a>, but it failed with:<br /><code>cannot execute binary file</code><br />You can follow the scripts to build it manually:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># setup utils</span>./setup.sh bootstrap/wheezy-bootstrap_1.24.14_armhf.tar.gz build<span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> build/root/binutils<span class="token function">sudo</span> <span class="token function">tar</span> vfx binutils/binutils-armhf-64k.tar.gz <span class="token parameter variable">-C</span> build/root/binutils<span class="token function">sudo</span> <span class="token function">chroot</span> build /bin/bash<span class="token builtin class-name">cd</span> /root/binutilsdpkg <span class="token parameter variable">-i</span> binutils_*.debdpkg <span class="token parameter variable">-i</span> binutils-multiarch_*.deb<span class="token builtin class-name">export</span> <span class="token assign-left variable">DEBIAN_FRONTEND</span><span class="token operator">=</span>noninteractive<span class="token builtin class-name">export</span> <span class="token assign-left variable">DEBCONF_NONINTERACTIVE_SEEN</span><span class="token operator">=</span>true<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>C<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span>C<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C<span class="token builtin class-name">export</span> <span class="token assign-left variable">DEB_CFLAGS_APPEND</span><span class="token operator">=</span><span class="token string">'-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE'</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">DEB_BUILD_OPTIONS</span><span class="token operator">=</span>nocheck<span class="token builtin class-name">cd</span> /root<span class="token comment"># now the build environment is ready</span><span class="token function">wget</span> http://nodejs.org/dist/v0.12.0/node-v0.12.0.tar.gz<span class="token function">tar</span> vfxz node-v0.12.0.tar.gz<span class="token builtin class-name">cd</span> node-v0.12.0./configure<span class="token function">make</span><span class="token comment"># go back to original environment</span><span class="token builtin class-name">exit</span></code></pre><p>The binary is ready in build/root/node-v0.12.0/node for you to upload to the WD Cloud. You can upload to /usr/local/bin in your WD Cloud.</p><p>You also need to download npm and other components from <a href="http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz">http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz</a>. Extract the files and put them in either /usr/local or /usr.</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x86.tar.gz<span class="token function">tar</span> vfxz node-v0.12.0-linux-x86.tar.gz<span class="token builtin class-name">cd</span> node-v0.12.0-linux-x86<span class="token function">rm</span> bin/node<span class="token function">cp</span> <span class="token parameter variable">-R</span> include /usr/local<span class="token function">cp</span> <span class="token parameter variable">-R</span> share /usr/local<span class="token function">cp</span> <span class="token parameter variable">-R</span> lib /usr/local<span class="token function">cp</span> <span class="token parameter variable">-R</span> bin /usr/local</code></pre><p>Remember not to override the binary you have uploaded.</p><h1>Package List</h1><p>Below is a list of packages I have successfully built:</p><ul><li>htop</li><li>joe</li><li>unrar</li><li>transmission<ul><li>libcurl3-gnutls</li><li>libminiupnpc5</li><li>libnatpmp1</li><li>transmission-common</li><li>transmission-daemon</li></ul></li><li>Node.js prerequisites<ul><li>libc-ares2</li><li>libv8</li></ul></li><li>python3-pip<ul><li>libcurl3-gnutls</li><li>python2.6</li><li>python3</li><li>python3-pkg-resources</li><li>python3-setuptools</li><li>python-pkg-resources</li><li>python-setuptools</li></ul></li><li>liberror-perl (required for git)</li><li>git</li><li>rrdtool (required for cacti)</li><li>virtual-mysql-client (required for cacti)</li><li>php5-mysql (required for cacti)</li><li>dbconfig-common (required for cacti)</li><li>libphp-adodb (required for cacti)</li><li>snmp (required for cacti)</li><li>php5-snmp (required for cacti)</li><li>cacti</li></ul><p>Packages are uploaded to [<a href="https://app.box.com/wdcloud">https://app.box.com/wdcloud</a>](<a href="https://app.box.com/wdcloud">https://app.box.com/wdcloud</a> target=_blank).</p><p>Script to build:</p><script src="//gist.github.com/1629e9a9bf266fb4abfc.js"></script><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arm </tag>
            
            <tag> nodejs </tag>
            
            <tag> wdcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rewriting blocking AJAX (async: false in JQuery)</title>
      <link href="/2014/rewriting-blocking-ajax-async-false-in-jquery/"/>
      <url>/2014/rewriting-blocking-ajax-async-false-in-jquery/</url>
      
        <content type="html"><![CDATA[<p>When I applied Jasmine Ajax to test a piece of JavaScript, I was stuck, and I discovered that the cause was no support for blocking AJAX calls from Jasmine Ajax. I don’t blame Jasmine Ajax because I don’t think making blocking AJAX calls makes sense at all.</p><p>Almost all developers consider AJAX to be an acronym standing for Asynchronous. However, the world of AJAX can be complicated to some new learners, and it’s not uncommon to see AJAX calls with blocking. Blocking AJAX calls are considered a poor practice in most web, mobile, and server platforms. The reasons differ slightly by platform, but overall, JavaScripts are single-threaded, and any blocking call means cessation of function.</p><p>Below is an example of a jQuery AJAX call with blocking using <code>async: false</code> (and another anti-pattern, using global variables),</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> someGlobal <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"//somewhere"</span><span class="token punctuation">,</span>    <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token string">"application/json; charset=utf-8"</span><span class="token punctuation">,</span>     <span class="token literal-property property">async</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        someGlobal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>someGlobal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token comment">// follow-up</span><span class="token punctuation">&#125;</span></code></pre><p>The above example is easy to follow in some sense because it runs step-by-step. The value of <strong>someGlobal</strong> is properly assigned before following up. Everything is fine except for the blocking and use of a global variable. Let’s rewrite this and see.</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"//somewhere"</span><span class="token punctuation">,</span>    <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token string">"application/json; charset=utf-8"</span><span class="token punctuation">,</span>     <span class="token literal-property property">async</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">followUp</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">followUp</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// parameter result is renamed from someGlobal</span><span class="token keyword">function</span> <span class="token function">followUp</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// follow-up</span><span class="token punctuation">&#125;</span></code></pre><p>Now, the AJAX request is not blocked due to the <code>async: true</code> setting. We’ve placed the code for follow-up into a separate <code>followUp</code> function. No global variable is needed. In the real world, this could become part of a callback chain, and we’ll discuss that later.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jasmine </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Maps Shows Traffic Alerts During Route Planning in Hong Kong</title>
      <link href="/2014/google-map-show-traffic-alerts-during-route-planning-in-hong-kong/"/>
      <url>/2014/google-map-show-traffic-alerts-during-route-planning-in-hong-kong/</url>
      
        <content type="html"><![CDATA[<p>While commuting to work this morning, I considered whether driving might be a viable option. My new workplace is in Tung Chung, and I typically commute by bus and MTR.</p><p>I used my iPhone to access Google Maps, tapped on the destination, and checked which route was better. To my surprise, one of the routes displayed a traffic alert!</p><p><img src="google.map_.traffic.hk_.2.png" alt="google.map.traffic.hk.2" /></p><p>I had assumed this feature was exclusive to Apple Maps and available only in certain major cities like New York City. I never expected it to be available in Hong Kong.</p><p>I switched to check the route from Tung Chung to Hong Kong Island. It appeared that the traffic alert was specific to eastbound traffic only.<br /><img src="google.map_.traffic.hk_.3.png" alt="google.map.traffic.hk.3" /></p><p>Next, I checked westbound traffic by switching back to the original route from Hong Kong Island to Tung Chung. Sure enough, it showed normal traffic conditions.<br /><img src="google.map_.traffic.hk_.4.png" alt="google.map.traffic.hk.4" /></p><p>After searching online, I couldn’t find any relevant information about the traffic alert. It wasn’t until 10 minutes later, when I returned to the office, that I found a related report.<br /><img src="google.map_.traffic.hk_.1.png" alt="google.map.traffic.hk.1" /></p><p>I am confident that these traffic incident reports are updated in real time. Hooray!</p><p>According to the Hong Kong government’s website (<a href="http://www.gov.hk/en/theme/psi/datasets/specialtrafficnews.htm">http://www.gov.hk/en/theme/psi/datasets/specialtrafficnews.htm</a>), the source of these traffic incident reports may come from the government itself.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discover Swift: Writing a Pachinko game on iOS with Swift and SpriteKit</title>
      <link href="/2014/discover-swift-writing-a-pachinko-game-on-ios-with-swift-and-spritekit/"/>
      <url>/2014/discover-swift-writing-a-pachinko-game-on-ios-with-swift-and-spritekit/</url>
      
        <content type="html"><![CDATA[<div style="text-align: center">  <div class="github-card"    data-user="neoalienson"    data-repo="pachinko"    data-height="200"    data-width="400"    data-theme="default"    data-target=""    data-client-id=""    data-client-secret=""  ></div></div><script src="/github-card-lib/githubcard.js"></script><p>Do you like Swift, the programming language that comes with XCode 6 from Apple? You may not know, but I developed a fondness for it after writing a game with it. I am going to show you how to write a game with Swift.  If you’d like to jump right into the <a href="https://github.com/neoalienson/pachinko">source code</a> of this game, you can download or clone it from <a href="https://github.com/neoalienson/pachinko">GitHub</a></p><span id="more"></span><p><img src="screenshot.png" alt="Pachinko, a.k.a. Japanese pinball game, in iOS with Swift" /></p><h1>Getting started with XCode 6</h1><p>Firstly, you need to download XCode 6. At the moment, XCode 6 is not officially released, so you’ll need to join ‘iOS Developer Program’ to access it. Once you’ve installed Xcode and chosen to create a new project, you can select the iOS Application with Game template,</p><p><img src="new_xcode_game.png" alt="new_xcode_game" /></p><p>Fill in product name, choosing the language Swift and the framework SpriteKit,</p><p><img src="new_xcode_game_2.png" alt="new_xcode_game_2" /></p><h1>Type Inference</h1><p>Once the canned game is created, you can set <code>scaleMode</code> in <code>GameViewController.swift</code> to <code>.AspectFit</code>, e.g., <code>scene.scaleMode = .AspectFit</code>. The canned version sets <code>scaleMode</code> to <code>.AspectFill</code>. I got lost with the coordinates when using <code>.AspectFill</code> and found that part of the game scene wasn’t being shown under this mode. I discovered that setting <code>scaleMode</code> to <code>.AspectFit</code> would be easier to learn the coordinate system because all of the scene is shown. Empty spaces are added with <code>.AspectFit</code> if they don’t match, so you won’t miss any part of your scene. You don’t need to specify the type for <code>.AspectFit</code>,  as Swift can infer the type from <code>scene.scaleMode</code> using Type Inference. Additionally, the semicolon is not required to end a statement. Are you starting to love it?</p><h1>Handling different scene aspect ratio</h1><p>Next, resize the <code>GameScene.sks</code> to 640 width and 1136 height such that it fits aspect ratio to iPhone 5. Note that the numbers aren’t in pixel units because the scene can be scaled according to <code>scaleMode</code>, using 640 is easier for reference purposes in the game program. It may be difficult to see the selected game scene on your first launch, as it will fits the editor by default; zooming out with the ‘-’ icon can help. You’ll know you’ve selected the scene from breadcrumb or property window on right.</p><p><img src="gamesene_sks.png" alt="gamesene_sks" /></p><h1>Build basic game elements with SpriteKit</h1><p>SpriteKit is very familiar to me as I have experience with Cocos2d and Cocos2d-x. It is an all-in-one physics engine, 2d graphics engine, and animation engine. Let’s start by creating pins, fences and borders.</p><pre class="language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SpriteKit</span><span class="token keyword">class</span> <span class="token class-name">GameScene</span><span class="token punctuation">:</span> <span class="token class-name">SKScene</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> borderBottom<span class="token punctuation">:</span> <span class="token class-name">SKShapeNode</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span>  <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">didMoveToView</span><span class="token punctuation">(</span>view<span class="token punctuation">:</span> <span class="token class-name">SKView</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> top <span class="token operator">=</span> scene<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height<span class="token punctuation">;</span>    <span class="token keyword">let</span> <span class="token keyword">right</span> <span class="token operator">=</span> scene<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width<span class="token punctuation">;</span>    <span class="token comment">// pins</span>    <span class="token keyword">let</span> pinRadius <span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">5</span>    <span class="token keyword">let</span> pinSpacing <span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">100</span>    <span class="token keyword">for</span> <span class="token keyword">var</span> x <span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">75</span><span class="token punctuation">;</span> x <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> <span class="token number">500</span><span class="token punctuation">;</span> x <span class="token operator">+=</span> pinSpacing <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token keyword">var</span> y <span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span> y <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> <span class="token number">800</span><span class="token punctuation">;</span> y <span class="token operator">+=</span> pinSpacing <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> sprite <span class="token operator">=</span> <span class="token class-name">SKShapeNode</span><span class="token punctuation">(</span>circleOfRadius<span class="token punctuation">:</span> pinRadius<span class="token punctuation">)</span>        sprite<span class="token punctuation">.</span>physicsBody <span class="token operator">=</span> <span class="token class-name">SKPhysicsBody</span><span class="token punctuation">(</span>circleOfRadius<span class="token punctuation">:</span> pinRadius<span class="token punctuation">)</span>        sprite<span class="token punctuation">.</span>physicsBody<span class="token punctuation">.</span><span class="token keyword">dynamic</span> <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token comment">// straggered pins</span>        sprite<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">%</span> <span class="token punctuation">(</span>pinSpacing <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>        sprite<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y        sprite<span class="token punctuation">.</span>fillColor <span class="token operator">=</span> <span class="token class-name">UIColor</span><span class="token punctuation">.</span><span class="token function">whiteColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>sprite<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// fences</span>    <span class="token keyword">let</span> fenceSpacing <span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">100</span>    <span class="token keyword">let</span> fenceSize <span class="token operator">=</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">75</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token keyword">var</span> x <span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> fenceSpacing<span class="token punctuation">;</span> x <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> <span class="token keyword">right</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">;</span> x <span class="token operator">+=</span> fenceSpacing <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> sprite <span class="token operator">=</span> <span class="token class-name">SKShapeNode</span><span class="token punctuation">(</span>rectOfSize<span class="token punctuation">:</span> fenceSize<span class="token punctuation">)</span>      sprite<span class="token punctuation">.</span>physicsBody <span class="token operator">=</span> <span class="token class-name">SKPhysicsBody</span><span class="token punctuation">(</span>rectangleOfSize<span class="token punctuation">:</span> fenceSize<span class="token punctuation">)</span>      sprite<span class="token punctuation">.</span>physicsBody<span class="token punctuation">.</span><span class="token keyword">dynamic</span> <span class="token operator">=</span> <span class="token boolean">false</span>      sprite<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> fenceSize<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>      sprite<span class="token punctuation">.</span>fillColor <span class="token operator">=</span> <span class="token class-name">UIColor</span><span class="token punctuation">.</span><span class="token function">whiteColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>sprite<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// bottom</span>    <span class="token keyword">let</span> pathBottom <span class="token operator">=</span> <span class="token class-name">CGPathCreateMutable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">CGPathMoveToPoint</span><span class="token punctuation">(</span>pathBottom<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token class-name">CGPathAddLineToPoint</span><span class="token punctuation">(</span>pathBottom<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">right</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    borderBottom <span class="token operator">=</span> <span class="token class-name">SKShapeNode</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> pathBottom<span class="token punctuation">)</span>    borderBottom<span class="token operator">?</span><span class="token punctuation">.</span>physicsBody <span class="token operator">=</span> <span class="token class-name">SKPhysicsBody</span><span class="token punctuation">(</span>edgeChainFromPath<span class="token punctuation">:</span> pathBottom<span class="token punctuation">)</span>    borderBottom<span class="token operator">?</span><span class="token punctuation">.</span>physicsBody<span class="token punctuation">.</span><span class="token keyword">dynamic</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>borderBottom<span class="token punctuation">)</span>    <span class="token comment">// other borders</span>    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token class-name">CGPathCreateMutable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">CGPathMoveToPoint</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token class-name">CGPathAddLineToPoint</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> top<span class="token punctuation">)</span>    <span class="token class-name">CGPathAddLineToPoint</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">right</span> <span class="token operator">-</span> <span class="token number">150</span><span class="token punctuation">,</span> top<span class="token punctuation">)</span>    <span class="token class-name">CGPathAddLineToPoint</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">right</span> <span class="token operator">-</span> <span class="token number">50</span><span class="token punctuation">,</span> top <span class="token operator">-</span> <span class="token number">50</span><span class="token punctuation">)</span>    <span class="token class-name">CGPathAddLineToPoint</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">right</span><span class="token punctuation">,</span> top <span class="token operator">-</span> <span class="token number">150</span><span class="token punctuation">)</span>    <span class="token class-name">CGPathAddLineToPoint</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">right</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> borders <span class="token operator">=</span> <span class="token class-name">SKShapeNode</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> path<span class="token punctuation">)</span>    borders<span class="token punctuation">.</span>physicsBody <span class="token operator">=</span> <span class="token class-name">SKPhysicsBody</span><span class="token punctuation">(</span>edgeChainFromPath<span class="token punctuation">:</span> path<span class="token punctuation">)</span>    borders<span class="token punctuation">.</span>physicsBody<span class="token punctuation">.</span><span class="token keyword">dynamic</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>borders<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h1>Non-optional/Optional Variable?</h1><p>You may wonder what <code>SKShapeNode?</code> is in <code>var borderBottom: SKShapeNode? = nil</code>. In Swift, variables are non-optional by default and cannot be set to <code>nil</code> (or null) without explicit declaration. To make a variable optional, you need to append a question mark (<code>?</code>) to the end of its type. This design makes Swift more <strong>fool-proof</strong> because many developers in other languages accidentally dereference variables, leading to null pointer exceptions or method calls on undefined objects. Having an optional annotation can be helpful, but it would clutter your code with unnecessary annotations. Well, we still don’t have a game to play yet! Now let’s try to add some action and make things more fun.</p><pre class="language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">touchesBegan</span><span class="token punctuation">(</span>touches<span class="token punctuation">:</span> <span class="token class-name">NSSet</span><span class="token punctuation">,</span> withEvent event<span class="token punctuation">:</span> <span class="token class-name">UIEvent</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// launch a ball</span>  <span class="token keyword">let</span> sprite <span class="token operator">=</span> <span class="token class-name">SKSpriteNode</span><span class="token punctuation">(</span>imageNamed<span class="token punctuation">:</span><span class="token string-literal"><span class="token string">"Spaceship"</span></span><span class="token punctuation">)</span>  sprite<span class="token punctuation">.</span>xScale <span class="token operator">=</span> <span class="token number">0.15</span>  sprite<span class="token punctuation">.</span>yScale <span class="token operator">=</span> <span class="token number">0.15</span>  sprite<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">605</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>  sprite<span class="token punctuation">.</span>physicsBody <span class="token operator">=</span> <span class="token class-name">SKPhysicsBody</span><span class="token punctuation">(</span>circleOfRadius<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>  sprite<span class="token punctuation">.</span>physicsBody<span class="token punctuation">.</span>contactTestBitMask <span class="token operator">=</span> <span class="token number">1</span>  <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>sprite<span class="token punctuation">)</span>  <span class="token comment">// give some randomness</span>  sprite<span class="token punctuation">.</span>physicsBody<span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>dy <span class="token operator">=</span> <span class="token number">3000</span> <span class="token operator">+</span> <span class="token class-name">CGFloat</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">300</span> <span class="token operator">/</span> <span class="token class-name">CGFloat</span><span class="token punctuation">(</span><span class="token constant">RAND_MAX</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>The spaceships fill up the screen if you tap continuously. Let’s do something when the spaceship hits the floor,</p><h1>Handle object collision</h1><p>First, make the <code>GameScence</code> conform to <code>SKPhysicsContactDelegate</code>, which means that it can now have a function to handle contacts between physics objects.</p><pre class="language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">class</span> <span class="token class-name">GameScene</span><span class="token punctuation">:</span> <span class="token class-name">SKScene</span><span class="token punctuation">,</span> <span class="token class-name">SKPhysicsContactDelegate</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> score <span class="token operator">=</span> <span class="token number">0</span></code></pre><p>And below is the function to handle object contact,</p><pre class="language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">didBeginContact</span><span class="token punctuation">(</span>contact<span class="token punctuation">:</span> <span class="token class-name">SKPhysicsContact</span><span class="token operator">!</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> contact<span class="token punctuation">.</span>bodyA <span class="token operator">==</span> borderBottom<span class="token operator">?</span><span class="token punctuation">.</span>physicsBody <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> body <span class="token operator">=</span> contact<span class="token punctuation">.</span>bodyB    <span class="token comment">// disable futher collision</span>    body<span class="token punctuation">.</span>contactTestBitMask <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">let</span> node <span class="token operator">=</span> body<span class="token punctuation">.</span>node    <span class="token comment">// fade out</span>    node<span class="token punctuation">.</span><span class="token function">runAction</span><span class="token punctuation">(</span><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">sequence</span><span class="token punctuation">(</span><span class="token punctuation">[</span>        <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">fadeAlphaTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// update score</span>    score <span class="token operator">+=</span> <span class="token number">10</span>    <span class="token keyword">let</span> label <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">childNodeWithName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"score"</span></span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">SKLabelNode</span>    label<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span>    <span class="token comment">// score float up from the ball</span>    <span class="token keyword">let</span> scoreUp <span class="token operator">=</span> <span class="token class-name">SKLabelNode</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"+10"</span></span><span class="token punctuation">)</span>    scoreUp<span class="token punctuation">.</span>position <span class="token operator">=</span> node<span class="token punctuation">.</span>position    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>scoreUp<span class="token punctuation">)</span>    scoreUp<span class="token punctuation">.</span><span class="token function">runAction</span><span class="token punctuation">(</span><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">sequence</span><span class="token punctuation">(</span><span class="token punctuation">[</span>        <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">moveBy</span><span class="token punctuation">(</span><span class="token class-name">CGVector</span><span class="token punctuation">(</span>dx<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> dy<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>You should set contact delegate to the <code>GameScene</code> since it conforms to the protocol,</p><pre class="language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">didMoveToView</span><span class="token punctuation">(</span>view<span class="token punctuation">:</span> <span class="token class-name">SKView</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// setup collision delegate</span>  <span class="token keyword">self</span><span class="token punctuation">.</span>physicsWorld<span class="token punctuation">.</span>contactDelegate <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">&#125;</span></code></pre><p>Cool! I hope you’re not addicted to the game. <a href="https://github.com/neoalienson/pachinko">Download/browse source in GitHub</a>. I wish that one day, Swift and SpriteKit would become cross-platform.</p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 8 Time-Lapse Videos</title>
      <link href="/2014/ios-8-time-lapsed-videos/"/>
      <url>/2014/ios-8-time-lapsed-videos/</url>
      
        <content type="html"><![CDATA[<p>I have installed iOS 8 beta 3 on an iPhone 4s. The default camera now supports taking time-lapse videos. Taking a time-lapse video with the camera is very simple because you do not have any options… It takes a frame every second in my experience, at least based on my observations.</p><p>Below is the dawn of Tai Wai, Hong Kong, which I took from my bedside counter,</p><div class="video-container"><iframe src="https://www.youtube.com/embed/b1z8aNBdnEA" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>Another one I took while driving,</p><div class="video-container"><iframe src="https://www.youtube.com/embed/D716aCDztkY" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>It’s generally better to take time-lapse videos during busy traffic and daylight. Time-lapse videos of driving on highways at night can result in a dizzying video with little visibility, as shown below (which didn’t turn out so well):</p><div class="video-container"><iframe src="https://www.youtube.com/embed/2CMgQY9bCNA" frameborder="0" loading="lazy" allowfullscreen></iframe></div><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Share a Coke with Neo</title>
      <link href="/2014/share-a-coke-with-neo/"/>
      <url>/2014/share-a-coke-with-neo/</url>
      
        <content type="html"><![CDATA[<p>My friend brought me a bottle of Coke with my name on it from his business trip to South Africa,</p><p><img src="shareWithNeo3.jpeg" alt="close up" /><br /><img src="shareWithNeo1.jpeg" alt="front" /><br /><img src="shareWithNeo2.jpeg" alt="back" /></p><p>You can check <a href="https://www.shareacoke.co.za/">https://www.shareacoke.co.za/</a> for the available names.</p><p>There are similar activities in the U.K. as well,</p><p><a href="http://www.coca-cola.co.uk/share-a-coke/share-a-coke.html">http://www.coca-cola.co.uk/share-a-coke/share-a-coke.html</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Testing Android Wear Integration</title>
      <link href="/2014/testing-android-wear-integration/"/>
      <url>/2014/testing-android-wear-integration/</url>
      
        <content type="html"><![CDATA[<p>We have integrated a messaging app with Android Wear in an emulator. Android Wear can receive notifications, reply to messages, and initiate VoIP calls through the mobile app.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/wK_ltPM-WyQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test Your Abilities in Low-Level Hacking</title>
      <link href="/2014/low-level-hacking-test/"/>
      <url>/2014/low-level-hacking-test/</url>
      
        <content type="html"><![CDATA[<p><a href="https://microcorruption.com">https://microcorruption.com</a></p><p>This is a simulation game that involves hacking an electronic lock. It requires a solid understanding of low-level programming. If you’re not familiar with Assembly, consider playing Watch Dogs instead. The game features a comprehensive in-game debugger and several debug symbols.</p><p>Hint: Read the hardware manual.</p><p>Below is the bit diagram of the Status Register (sr), which will be useful during hacking.<br /><img src="status_register.png" alt="Status Register" /></p><p>This is my progress so far,<br /><img src="micro-corruption-progress.png" alt="My microcorruption progress" /></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Cybersecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Assembly </tag>
            
            <tag> Hacking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Accelerate the Android Emulator</title>
      <link href="/2013/Accelerate-the-Android-Emulator/"/>
      <url>/2013/Accelerate-the-Android-Emulator/</url>
      
        <content type="html"><![CDATA[<p>For a long time, the most frequent complaints about the Android emulator were its slow startup and operational speeds. Using the Intel Atom x86 system image helped slightly, but not significantly. However, last year, Intel released the Intel Hardware Accelerated Execution Manager (HAXM), which dramatically improved the situation. Previously, it took several minutes from the Android boot animation to reach the screen lock, but now it takes just 10 seconds!</p><h2 id="Installing-HAXM">Installing HAXM</h2><p>First, ensure your CPU supports VT, which most CPUs today do. Then, go to the Extras section in the Android SDK Manager and install the Intel x86 Emulator Accelerator (HAXM). Note that this step only downloads the package; you must complete the installation by locating it in the SDK Path. For example, on a Mac, it is downloaded to <code>SDK Path /extras/intel/Hardware_Accelerated_Execution_Manager.</code> You then open the <code>IntelHAXM.dmg</code> file and run the package inside to finish the installation.</p><p>After running the Emulator, if successful, you will see in the Console: <code>Emulator] HAX is working and emulator runs in fast virt mode.</code> If you want to see how fast the Android emulator runs on a MacBook Air, you can watch the following video.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/1jwX_n8B3mI" frameborder="0" loading="lazy" allowfullscreen></iframe></div><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft Map for Hong Kong</title>
      <link href="/2013/minecraft-hong-kong-map/"/>
      <url>/2013/minecraft-hong-kong-map/</url>
      
        <content type="html"><![CDATA[<p>First, create a 5000x5000 pixel height map, where each pixel corresponds to 1 meter in Minecraft. Considering that Hong Kong spans approximately 50,000 meters (50 km) from south to north, the resulting scale of the Minecraft map would be 1:10.<br /><img src="6.png" alt="" /></p><p>However, in Minecraft, due to visibility limitations, the terrain doesn’t quite resemble the actual Hong Kong landscape. To get a better view, you’d need to use a map viewer that allows you to see farther. Here’s the effect:</p><p><img src="hk.png" alt="" /></p><p>While the mountainous terrain on Hong Kong Island is somewhat recognizable, the height map’s handling of flat areas isn’t ideal—it needs some smoothing.</p><p>Now, let’s consider the next steps: Is it worthwhile to achieve a 1:1, 1:2, or 1:5 scale? Going 1:1 would be quite a trek, and a larger scale might make the streets look odd. So, it’s a balancing act! 😄</p><p><a href="Hong_Kong.world">Download Map</a></p><!-- commentbox plugin begins -->    <div class="commentbox"></div>    <script src="https://unpkg.com/commentbox.io/dist/commentBox.min.js"></script>    <script>commentBox('5765834504929280-proj')</script>    <!-- commentbox plugin ends -->    ]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
